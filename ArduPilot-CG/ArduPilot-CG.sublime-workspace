{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"act",
				"act1"
			],
			[
				"inp",
				"input_thrust_forward"
			],
			[
				"l",
				"lat"
			],
			[
				"for",
				"forward_throttle"
			],
			[
				"forward",
				"forward_throttle"
			],
			[
				"attid",
				"attitude_control"
			],
			[
				"_",
				"_origin"
			],
			[
				"vec",
				"Vector2f"
			],
			[
				"target",
				"target_forward"
			],
			[
				"forwar",
				"forward_thrust"
			],
			[
				"pilo",
				"pilot_forward_throttle"
			],
			[
				"roll",
				"roll_thrust"
			],
			[
				"get_",
				"get_rotor_rpm"
			],
			[
				"ya",
				"yaw_thrust"
			],
			[
				"get",
				"get_rotor_rpm"
			],
			[
				"angl",
				"angle_sin"
			],
			[
				"thr",
				"throttle_thrust"
			],
			[
				"ange",
				"angle_cos"
			],
			[
				"forwa",
				"forward_thrust"
			],
			[
				"pithc",
				"pitch_thrust"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ArduCopter/ArduCopter.cpp",
			"settings":
			{
				"buffer_size": 20250,
				"line_ending": "Unix"
			}
		},
		{
			"file": "APMrover2/APMrover2.cpp",
			"settings":
			{
				"buffer_size": 15523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "APMrover2/Rover.h",
			"settings":
			{
				"buffer_size": 19555,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Navigation/AP_Navigation.h",
			"settings":
			{
				"buffer_size": 5546,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AC_AttitudeControl/AC_PosControl.cpp",
			"settings":
			{
				"buffer_size": 38661,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AC_AttitudeControl/AC_PosControl.h",
			"settings":
			{
				"buffer_size": 22753,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_L1_Control/AP_L1_Control.cpp",
			"settings":
			{
				"buffer_size": 16796,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_L1_Control/AP_L1_Control.h",
			"settings":
			{
				"buffer_size": 3501,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AC_WPNav/AC_WPNav.cpp",
			"settings":
			{
				"buffer_size": 53812,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AC_WPNav/AC_WPNav.h",
			"settings":
			{
				"buffer_size": 23166,
				"line_ending": "Unix"
			}
		},
		{
			"file": "APMrover2/Steering.cpp",
			"settings":
			{
				"buffer_size": 11759,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/Copter.h",
			"settings":
			{
				"buffer_size": 44701,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/control_sport.cpp",
			"settings":
			{
				"buffer_size": 5091,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/control_auto.cpp",
			"settings":
			{
				"buffer_size": 30772,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/APM_Config.h",
			"settings":
			{
				"buffer_size": 4632,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/GCS_Mavlink.cpp",
			"settings":
			{
				"buffer_size": 73746,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsSingle.cpp",
			"settings":
			{
				"buffer_size": 12995,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/flight_mode.cpp",
			"settings":
			{
				"buffer_size": 10878,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/takeoff.cpp",
			"settings":
			{
				"buffer_size": 4986,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/motors.cpp",
			"settings":
			{
				"buffer_size": 9594,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsMulticopter.h",
			"settings":
			{
				"buffer_size": 10427,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/Parameters.cpp",
			"settings":
			{
				"buffer_size": 50890,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/Log.cpp",
			"settings":
			{
				"buffer_size": 26849,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AC_AttitudeControl/AC_AttitudeControl.h",
			"settings":
			{
				"buffer_size": 19320,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.h",
			"settings":
			{
				"buffer_size": 3772,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.cpp",
			"settings":
			{
				"buffer_size": 9889,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/control_land.cpp",
			"settings":
			{
				"buffer_size": 10389,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AC_AttitudeControl/AC_AttitudeControl.cpp",
			"settings":
			{
				"buffer_size": 39667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsMulticopter.cpp",
			"settings":
			{
				"buffer_size": 21857,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsCoax.cpp",
			"settings":
			{
				"buffer_size": 12317,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsCoax.h",
			"settings":
			{
				"buffer_size": 2962,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/control_stabilize.cpp",
			"settings":
			{
				"buffer_size": 2585,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ArduCopter/Attitude.cpp",
			"settings":
			{
				"buffer_size": 11664,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsAirship.h",
			"settings":
			{
				"buffer_size": 3162,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries/AP_Motors/AP_MotorsAirship.cpp",
			"settings":
			{
				"buffer_size": 12105,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 16172 files for \"//# \"\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/ArduCopter.cpp:\n  268  \n  269      // run the attitude controllers\n  270:     update_flight_mode(); //# Call for the controller\n  271  \n  272      // update home from EKF if necessary\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/Copter.h:\n  319  #elif FRAME_CONFIG == COAX_FRAME\n  320   #define MOTOR_CLASS AP_MotorsCoax\n  321: #elif FRAME_CONFIG == AIRSHIP_FRAME //# Which frame to use\n  322   #define MOTOR_CLASS AP_MotorsAirship\n  323  #else\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_althold.cpp:\n   49      get_pilot_desired_lean_angles(channel_roll->get_control_in(), channel_pitch->get_control_in(), target_roll, target_pitch, attitude_control.get_althold_lean_angle_max());\n   50  \n   51:     //# Replace target pitch with target forward and let pitch always be zero.\n   52      float target_forward;\n   53      target_forward = target_pitch;\n   ..\n  137          attitude_control.input_euler_angle_roll_pitch_euler_rate_yaw(target_roll, target_pitch, target_yaw_rate, get_smoothing_gain());\n  138  \n  139:         //# Use pilot forward input to this controller. Remember, target_pitch = 0, always\n  140          attitude_control.input_thrust_forward(target_forward);\n  141          \n  ...\n  168          attitude_control.input_euler_angle_roll_pitch_euler_rate_yaw(target_roll, target_pitch, target_yaw_rate, get_smoothing_gain());\n  169          \n  170:         //# Use pilot forward input to this controller. Remember, target_pitch = 0, always\n  171          attitude_control.input_thrust_forward(target_forward);\n  172  \n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_auto.cpp:\n  268  \n  269  \n  270: //# auto_wp_run_heading - runs the auto waypoint controller with heading control\n  271  //      called by auto_run at 100hz or more\n  272  void Copter::auto_wp_run_heading()\n  ...\n  286          if (!is_zero(forward_throttle)) {\n  287  \n  288:             //# make this a setting\n  289              forward_throttle = 0.8;\n  290          }\n  ...\n  301  \n  302      // call attitude and yaw controller\n  303:     //# Attitude is always kept in level. Navigation is done by changing heading.\n  304      attitude_control.input_euler_angle_roll_pitch_yaw(0, 0, yaw, true, get_smoothing_gain());\n  305  \n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_stabilize.cpp:\n   24  void Copter::stabilize_run()\n   25  {\n   26:     //# Set pitch to allways be 0 and add new parameter for forward\n   27      float target_roll, target_pitch;\n   28      float target_yaw_rate;\n   ..\n   46      get_pilot_desired_lean_angles(channel_roll->get_control_in(), channel_pitch->get_control_in(), target_roll, target_pitch, aparm.angle_max);\n   47  \n   48:     //# Exchange pitch stick input with pilot_forward_throttle\n   49      pilot_forward_throttle = channel_pitch->get_control_in();\n   50      target_pitch = 0;\n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_AttitudeControl/AC_AttitudeControl.cpp:\n  293  }\n  294  \n  295: //# Input a forward thurst to the controller\n  296  void AC_AttitudeControl::input_thrust_forward( float pilot_forward_throttle){\n  297  \n  ...\n  660  }\n  661  \n  662: //# calculate the wanted \n  663  float AC_AttitudeControl::vel_target_to_motor_forward(float vel_target_ms){\n  664  \n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_AttitudeControl/AC_AttitudeControl.h:\n  115      void input_quaternion(Quaternion attitude_desired_quat, float smoothing_gain);\n  116  \n  117:     //# Forward function for assigning forward thurst\n  118      void input_thrust_forward( float pilot_forward_throttle);\n  119  \n  ...\n  254      virtual float rate_target_to_motor_yaw(float rate_target_rads);\n  255  \n  256:     //# Run the forward movement PID controller and return the output\n  257      float vel_target_to_motor_forward(float vel_target_ms);\n  258  \n  ...\n  354      AP_Motors&          _motors;\n  355  \n  356:     //# wanted speed of the vehicle\n  357      float               _vel_target_forward;\n  358  \n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_WPNav/AC_WPNav.cpp:\n  770  \n  771  /// update_wpnav_heading - run the wp heading controller - should be called at 100hz or higher\n  772: //# A modified updated wpnav function that uses heading instead of quad copter pos_control.\n  773: //# Inspired by AP_L1_Control::update_waypoint\n  774  float AC_WPNav::update_wpnav_heading()\n  775  {\n  ...\n  810  \n  811  \n  812:     //# P part of the controller, actually speed dependent\n  813      float sine_P_angle = _P_gain * _crosstrack_error * _groundspeed;\n  814      //Limit sine of Nu1 to provide a controlled track capture angle of 45 deg\n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_WPNav/AC_WPNav.h:\n  185      bool update_wpnav();\n  186  \n  187:     //# update wpnav_heading, custom navigation controller for the Airship\n  188      float update_wpnav_heading();\n  189  \n  ...\n  374      float       _rangefinder_alt_cm = 0.0f;\n  375  \n  376:     //# Heading navigation variables\n  377      float       _crosstrack_error;\n  378      float       _groundspeed;   \n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_Motors/AP_MotorsAirship.cpp:\n  124              // sends minimum values out to the motors\n  125              hal.rcout->cork();\n  126:             rc_write(AP_MOTORS_MOT_2, calc_pwm_output_1to1(_roll_radio_passthrough, _servo1)); //# Should probably be different\n  127              rc_write(AP_MOTORS_MOT_3, calc_pwm_output_1to1(_pitch_radio_passthrough, _servo2));\n  128              rc_write(AP_MOTORS_MOT_5, calc_pwm_output_1to1(-_roll_radio_passthrough, _servo3));\n  ...\n  178  \n  179  // sends commands to the motors\n  180:     //# These are the variables to set for output\n  181  /*    _actuator_out[NUM_ACTUATORS]; // Servo outputs for the two motors 0,1 is on left rotor and 2,3 on the right\n  182      _rpm_L; // Left rotor\n  ...\n  189      float   pitch_thrust;               // pitch thrust input value, 0 - 1.0\n  190      float   yaw_thrust;                 // yaw thrust input value, +/- 1.0\n  191:     float   forward_thrust;             //# forward thurst input value, +/- 1.0\n  192      float   throttle_thrust;            // throttle thrust input value, +/- 1.0\n  193      //float   thrust_min_rpy;             // the minimum throttle setting that will not limit the roll and pitch output\n  ...\n  197      //float   actuator_allowed = 0.0f;    // amount of yaw we can fit in\n  198  \n  199:     //# rotation of forward/thrust to dx/dy by alpha degrees\n  200:     float   angle_cos = 0.71;           //# cos component of cos(alpha)\n  201:     float   angle_sin = 0.71;           //# sin(alpha)\n  202  \n  203      // apply voltage and air pressure compensation\n  ...\n  226  \n  227  \n  228:     //# Check so that the total thrust (lift) and forward thrust doesn't exced the maximum thrust the rotors can produce.\n  229      if (throttle_thrust*throttle_thrust + forward_thrust*forward_thrust >= _throttle_thrust_max) {\n  230          throttle_thrust = _throttle_thrust_max;\n  ...\n  288  }\n  289  \n  290: //# Calculate the needed rotor rpm and adjust for the rotor\n  291  //  Also includes spinning up and down to reduce wear\n  292  float AP_MotorsAirship::get_rotor_rpm(){\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_Motors/AP_MotorsAirship.h:\n   57      static const struct AP_Param::GroupInfo var_info[];\n   58  \n   59:     //# Calculate the needed rpm and filter it for less dramatic changes.\n   60      float               get_rotor_rpm();\n   61  \n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_Motors/AP_Motors_Class.h:\n   64      void                set_yaw(float yaw_in) { _yaw_in = yaw_in; };            // range -1 ~ +1\n   65      void                set_throttle(float throttle_in) { _throttle_in = throttle_in; };   // range 0 ~ 1\n   66:     void                set_forward(float forward_in) {_forward_in = forward_in; }; //# range -1 ~ 1\n   67      void                set_throttle_avg_max(float throttle_avg_max) { _throttle_avg_max = constrain_float(throttle_avg_max,0.0f,1.0f); };   // range 0 ~ 1\n   68      void                set_throttle_filter_cutoff(float filt_hz) { _throttle_filter.set_cutoff_frequency(filt_hz); }\n   ..\n  102          uint8_t throttle_lower  : 1; // we have reached throttle's lower limit\n  103          uint8_t throttle_upper  : 1; // we have reached throttle's upper limit\n  104:         uint8_t forward         : 1; //# Airship specific limits\n  105          uint8_t roll            : 1;\n  106          uint8_t pitch_lower     : 1;\n  ...\n  175      float               _pitch_in;                  // desired pitch control from attitude controller, -1 ~ +1\n  176      float               _yaw_in;                    // desired yaw control from attitude controller, -1 ~ +1\n  177:     float               _forward_in;                //# desired forward thrust from the navigation controller, -1 ~ +1\n  178      float               _throttle_in;               // last throttle input from set_throttle caller\n  179      float               _throttle_avg_max;          // last throttle input from set_throttle_avg_max\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build/nuttx-export/include/nuttx/nx/nxconsole.h:\n  146  #    define CONFIG_NXCONSOLE_BPP 16\n  147  //#elif !defined(CONFIG_NX_DISABLE_24BPP)\n  148: //#    define CONFIG_NXCONSOLE_BPP 24\n  149  #  elif !defined(CONFIG_NX_DISABLE_32BPP)\n  150  #    define CONFIG_NXCONSOLE_BPP 32\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4io-v2_default.build/nuttx-export/include/nuttx/nx/nxconsole.h:\n  146  #    define CONFIG_NXCONSOLE_BPP 16\n  147  //#elif !defined(CONFIG_NX_DISABLE_24BPP)\n  148: //#    define CONFIG_NXCONSOLE_BPP 24\n  149  #  elif !defined(CONFIG_NX_DISABLE_32BPP)\n  150  #    define CONFIG_NXCONSOLE_BPP 32\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/drivers/boards/px4fmu-v1/board_config.h:\n   64  \n   65  //#ifdef CONFIG_STM32_SPI2\n   66: //#  error \"SPI2 is not supported on this board\"\n   67  //#endif\n   68  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/drivers/ms5611/ms5611_posix.cpp:\n   84  \n   85  //#ifndef CONFIG_SCHED_WORKQUEUE\n   86: //# error This requires CONFIG_SCHED_WORKQUEUE.\n   87  //#endif\n   88  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4NuttX/apps/examples/nxconsole/nxcon_internal.h:\n  112  #    define CONFIG_EXAMPLES_NXCON_BPP 16\n  113  //#elif !defined(CONFIG_NX_DISABLE_24BPP)\n  114: //#    define CONFIG_NXCONSOLE_BPP 24\n  115  #  elif !defined(CONFIG_NX_DISABLE_32BPP)\n  116  #    define CONFIG_EXAMPLES_NXCON_BPP 32\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4NuttX/apps/examples/nxtext/nxtext_internal.h:\n   79  #    define CONFIG_EXAMPLES_NXTEXT_BPP 16\n   80  //#elif !defined(CONFIG_NX_DISABLE_24BPP)\n   81: //#    define CONFIG_NXCONSOLE_BPP 24\n   82  #  elif !defined(CONFIG_NX_DISABLE_32BPP)\n   83  #    define CONFIG_EXAMPLES_NXTEXT_BPP 32\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4NuttX/nuttx/configs/freedom-kl25z/include/board.h:\n  128  #  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(2)\n  129  #else\n  130: //#  define BOARD_SDHC_SD4MODE_PRESCALER SDHC_SYSCTL_SDCLKFS_DIV2\n  131: //#  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(3)\n  132  #  define BOARD_SDHC_SD4MODE_PRESCALER SDHC_SYSCTL_SDCLKFS_DIV16\n  133  #  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(15)\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4NuttX/nuttx/configs/kwikstik-k40/include/board.h:\n  118  #  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(2)\n  119  #else\n  120: //#  define BOARD_SDHC_SD4MODE_PRESCALER SDHC_SYSCTL_SDCLKFS_DIV2\n  121: //#  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(3)\n  122  #  define BOARD_SDHC_SD4MODE_PRESCALER SDHC_SYSCTL_SDCLKFS_DIV16\n  123  #  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(15)\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4NuttX/nuttx/configs/twr-k60n512/include/board.h:\n  119  #  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(2)\n  120  #else\n  121: //#  define BOARD_SDHC_SD4MODE_PRESCALER SDHC_SYSCTL_SDCLKFS_DIV2\n  122: //#  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(3)\n  123  #  define BOARD_SDHC_SD4MODE_PRESCALER SDHC_SYSCTL_SDCLKFS_DIV16\n  124  #  define BOARD_SDHC_SD4MODE_DIVISOR   SDHC_SYSCTL_DVS_DIV(15)\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4NuttX/nuttx/include/nuttx/nx/nxconsole.h:\n  146  #    define CONFIG_NXCONSOLE_BPP 16\n  147  //#elif !defined(CONFIG_NX_DISABLE_24BPP)\n  148: //#    define CONFIG_NXCONSOLE_BPP 24\n  149  #  elif !defined(CONFIG_NX_DISABLE_32BPP)\n  150  #    define CONFIG_NXCONSOLE_BPP 32\n\n45 matches across 22 files\n\n\nSearching 16173 files for \"takeoff\"\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/Attitude.cpp:\n  127  }\n  128  \n  129: // set_throttle_takeoff - allows parents to tell throttle controller we are taking off so I terms can be cleared\n  130: void Copter::set_throttle_takeoff()\n  131  {\n  132      // tell position controller to reset alt target and reset I terms\n  133:     pos_control.init_takeoff();\n  134  }\n  135  \n  ...\n  202  }\n  203  \n  204: // get_non_takeoff_throttle - a throttle somewhere between min and mid throttle which should not lead to a takeoff\n  205: float Copter::get_non_takeoff_throttle()\n  206  {\n  207      return MAX(0,motors.get_throttle_hover()/2.0f);\n  208  }\n  209  \n  210: float Copter::get_takeoff_trigger_throttle()\n  211  {\n  212:     return channel_throttle->get_control_mid() + g.takeoff_trigger_dz;\n  213  }\n  214  \n  215: // get_throttle_pre_takeoff - convert pilot's input throttle to a throttle output (in the range 0 to 1) before take-off\n  216  // used only for althold, loiter, hybrid flight modes\n  217: float Copter::get_throttle_pre_takeoff(float input_thr)\n  218  {\n  219      // exit immediately if input_thr is zero\n  ...\n  226  \n  227      float in_min = 0.0f;\n  228:     float in_max = get_takeoff_trigger_throttle();\n  229  \n  230      float out_min = 0.0f;\n  231:     float out_max = get_non_takeoff_throttle();\n  232  \n  233      if ((g.throttle_behavior & THR_BEHAVE_FEEDBACK_FROM_MID_STICK) != 0) {\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/Copter.cpp:\n   41      home_distance(0),\n   42      wp_distance(0),\n   43:     auto_mode(Auto_TakeOff),\n   44:     guided_mode(Guided_TakeOff),\n   45      rtl_state(RTL_InitialClimb),\n   46      rtl_state_complete(false),\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/Copter.h:\n  268          float alt_delta;\n  269          uint32_t start_ms;\n  270:     } takeoff_state;\n  271  \n  272      RCMapper rcmap;\n  ...\n  388  \n  389      // Delay the next navigation command\n  390:     int32_t nav_delay_time_max;  // used for delaying the navigation commands (eg land,takeoff etc.)\n  391      uint32_t nav_delay_time_start;\n  392  \n  ...\n  574      // ground effect detector\n  575      struct {\n  576:         bool takeoff_expected;\n  577          bool touchdown_expected;\n  578:         uint32_t takeoff_time_ms;\n  579:         float takeoff_alt_cm;\n  580      } gndeffect_state;\n  581  #endif // GNDEFFECT_COMPENSATION == ENABLED\n  ...\n  625      float get_look_ahead_yaw();\n  626      void update_throttle_hover();\n  627:     void set_throttle_takeoff();\n  628      float get_pilot_desired_throttle(int16_t throttle_control);\n  629      float get_pilot_desired_climb_rate(float throttle_control);\n  630:     float get_non_takeoff_throttle();\n  631:     float get_takeoff_trigger_throttle();\n  632:     float get_throttle_pre_takeoff(float input_thr);\n  633      float get_surface_tracking_climb_rate(int16_t target_rate, float current_alt_target, float dt);\n  634      void set_accel_throttle_I_from_pilot_throttle(float pilot_throttle);\n  ...\n  706      void exit_mission();\n  707      void do_RTL(void);\n  708:     bool verify_takeoff();\n  709      bool verify_land();\n  710      bool verify_loiter_unlimited();\n  ...\n  725      bool auto_init(bool ignore_checks);\n  726      void auto_run();\n  727:     void auto_takeoff_start(const Location& dest_loc);\n  728:     void auto_takeoff_run();\n  729      void auto_wp_start(const Vector3f& destination);\n  730      void auto_wp_start(const Location_Class& dest_loc);\n  ...\n  784      void flip_run();\n  785      bool guided_init(bool ignore_checks);\n  786:     bool guided_takeoff_start(float final_alt_above_home);\n  787      void guided_pos_control_start();\n  788      void guided_vel_control_start();\n  ...\n  795      void guided_set_angle(const Quaternion &q, float climb_rate_cms);\n  796      void guided_run();\n  797:     void guided_takeoff_run();\n  798      void guided_pos_control_run();\n  799      void guided_vel_control_run();\n  ...\n 1001      void frsky_telemetry_send(void);\n 1002      bool should_log(uint32_t mask);\n 1003:     bool current_mode_has_user_takeoff(bool must_navigate);\n 1004:     bool do_user_takeoff(float takeoff_alt_cm, bool must_navigate);\n 1005:     void takeoff_timer_start(float alt_cm);\n 1006:     void takeoff_stop();\n 1007:     void takeoff_get_climb_rates(float& pilot_climb_rate, float& takeoff_climb_rate);\n 1008      void print_hit_enter();\n 1009      void tuning();\n ....\n 1014  \n 1015      bool do_guided(const AP_Mission::Mission_Command& cmd);\n 1016:     void do_takeoff(const AP_Mission::Mission_Command& cmd);\n 1017      void do_nav_wp(const AP_Mission::Mission_Command& cmd);\n 1018      void do_land(const AP_Mission::Mission_Command& cmd);\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/GCS_Mavlink.cpp:\n 1191              break;\n 1192  \n 1193:         case MAV_CMD_NAV_TAKEOFF: {\n 1194              // param3 : horizontal navigation by pilot acceptable\n 1195              // param4 : yaw angle   (not supported)\n ....\n 1198              // param7 : altitude [metres]\n 1199  \n 1200:             float takeoff_alt = packet.param7 * 100;      // Convert m to cm\n 1201  \n 1202:             if(copter.do_user_takeoff(takeoff_alt, is_zero(packet.param3))) {\n 1203                  result = MAV_RESULT_ACCEPTED;\n 1204              } else {\n ....\n 1610                  copter.init_arm_motors(true);\n 1611              } else if (copter.ap.land_complete) {\n 1612:                 // if armed and landed, takeoff\n 1613                  if (copter.set_mode(LOITER, MODE_REASON_GCS_COMMAND)) {\n 1614:                     copter.do_user_takeoff(packet.param1*100, true);\n 1615                  }\n 1616              } else {\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/Parameters.cpp:\n   78  \n   79      // @Param: PILOT_TKOFF_ALT\n   80:     // @DisplayName: Pilot takeoff altitude\n   81:     // @Description: Altitude that altitude control modes will climb to when a takeoff is triggered with the throttle stick.\n   82      // @User: Standard\n   83      // @Units: Centimeters\n   84      // @Range: 0.0 1000.0\n   85      // @Increment: 10\n   86:     GSCALAR(pilot_takeoff_alt,  \"PILOT_TKOFF_ALT\",  PILOT_TKOFF_ALT_DEFAULT),\n   87  \n   88      // @Param: PILOT_TKOFF_DZ\n   89:     // @DisplayName: Takeoff trigger deadzone\n   90:     // @Description: Offset from mid stick at which takeoff is triggered\n   91      // @User: Standard\n   92      // @Range: 0.0 500.0\n   93      // @Increment: 10\n   94:     GSCALAR(takeoff_trigger_dz, \"PILOT_TKOFF_DZ\", THR_DZ_DEFAULT),\n   95  \n   96      // @Param: PILOT_THR_BHV\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/Parameters.h:\n  134          k_param_throttle_filt,\n  135          k_param_throttle_behavior,\n  136:         k_param_pilot_takeoff_alt, // 64\n  137  \n  138          // 65: AP_Limits Library\n  ...\n  212          k_param_ch11_option,\n  213          k_param_ch12_option,\n  214:         k_param_takeoff_trigger_dz,\n  215          k_param_gcs3,\n  216          k_param_gcs_pid_mask,    // 126\n  ...\n  380      AP_Float        throttle_filt;\n  381      AP_Int16        throttle_behavior;\n  382:     AP_Int16        takeoff_trigger_dz;\n  383:     AP_Float        pilot_takeoff_alt;\n  384  \n  385      AP_Int16        rtl_altitude;\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/ReleaseNotes.txt:\n   60  Copter 3.3.1 26-Oct-2015 / 3.3.1-rc1 20-Oct-2015\n   61  Changes from 3.3\n   62: 1) Bug fix to prevent potential crash if Follow-Me is used after an aborted takeoff\n   63  2) compiler upgraded to 4.9.3 (runs slightly faster than 4.7.2 which was used previously)\n   64  ------------------------------------------------------------------\n   ..\n   74  Changes from 3.3-rc9\n   75  1) EKF improvements:\n   76:     a) simpler optical flow takeoff check\n   77  2) Bug Fixes/Minor enhancements:\n   78      a) fix INS3_USE parameter eeprom location\n   ..\n  215  3) AltHold & Take-off changes:\n  216      a) feed-forward controller and jerk limiting should result in slightly snappier performance and smoother take-offs\n  217:     b) vehicle climbs automatically to PILOT_TKOFF_ALT alt when taking off in Loiter, AltHold, PosHold, Sport (disabled by default, pilot's throttle input overrides takeoff)\n  218      c) PILOT_THR_FILT allows enforcing smoother throttle response in manual flight modes (defaults to 0 = off)\n  219      d) TX with sprung throttle can set PILOT_THR_BHV to \"1\" so motor feedback when landed starts from mid-stick instead of bottom of stick\n  220:     e) GCS can initiate takeoff even in Loiter, AltHold, PosHold and sport by issuing NAV_TAKEOFF mavlink command\n  221  4) Stop flight mode - causes vehicle to stop quickly, and does not respond to user input or waypoint movement via MAVLink.  Requires GPS, will be renamed to Brake mode.\n  222  5) Aux channel features:\n  ...\n  293      a) DCM-check to require one continuous second of bad heading before triggering LAND\n  294      b) I2C bug that could lead to Pixhawk freezing up if I2C bus is noisy\n  295:     c) reset DCM and EKF gyro bias estimates after gyro calibration (DCM heading could drift after takeoff due to sudden change in gyro values)\n  296      d) use primary GPS for LED status (instead of always using first GPS)\n  297  ------------------------------------------------------------------\n  ...\n  306      a) fix ch6 tuning of wp-speed (was getting stuck at zero)\n  307      b) parachute servo set to off position on startup\n  308:     c) Auto Takeoff timing bug fix that could cause severe lean on takeoff\n  309      d) timer fix for \"slow start\" of motors on Pixhawk (timer was incorrectly based on 100hz APM2 main loop speed)\n  310  4) reduced number of relays from 4 to 2 (saves memory and flash required on APM boards)\n  ...\n  399  ArduCopter 3.2-rc4 01-Aug-2014\n  400  Changes from 3.2-rc3\n  401: 1) Pre-takeoff throttle feedback in AltHold, Loiter, PosHold\n  402  2) Terrain altitude retrieval from ground station (informational purposes only so far, Pixhawk only) \n  403  3) Safety Items:\n  ...\n  413  4) Bug Fixes:\n  414      a) Drift slow yaw response fixed\n  415:     b) AC3.2-rc3 failsafe bug resolved.  In -rc3 the throttle failsafe could be triggered even when disabled or motors armed (although vehicle would not takeoff) \n  416  ------------------------------------------------------------------\n  417  ArduCopter 3.2-rc3 16-Jul-2014\n  ...\n  466      b) Maximum roll and pitch angle acceleration in Loiter mode can be configured with WPNAV_LOIT_JERK (higher = more responsive but potentially jerky)\n  467      c) Yaw speed can be adjusted with ATC_SLEW_YAW parameter (higher = faster)\n  468:     d) smoother takeoff with configurable acceleration using WPNAV_ACCEL_Z parameter\n  469      e) Twitches removed during guided mode or when entering Loiter or RTL from high speeds  \n  470  7) Mission improvements:\n  ...\n  651  Improvements over 3.0.1\n  652  1) Support for Pixhawks board\n  653: 2) Arm, Disarm, Land and Takeoff in Loiter and AltHold\n  654  3) Improved Acro\n  655      a) ACRO_RP_P, ACRO_YAW_P parameters added to control speed of rotation\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/arming_checks.cpp:\n  695          if (!(arming_from_gcs && control_mode == GUIDED)) {\n  696              // above top of deadband is too always high\n  697:             if (channel_throttle->get_control_in() > get_takeoff_trigger_throttle()) {\n  698                  if (display_failure) {\n  699                      #if FRAME_CONFIG == HELI_FRAME\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/baro_ground_effect.cpp:\n    7      if(!motors.armed()) {\n    8          // disarmed - disable ground effect and return\n    9:         gndeffect_state.takeoff_expected = false;\n   10          gndeffect_state.touchdown_expected = false;\n   11:         ahrs.setTakeoffExpected(gndeffect_state.takeoff_expected);\n   12          ahrs.setTouchdownExpected(gndeffect_state.touchdown_expected);\n   13          return;\n   ..\n   32      }\n   33  \n   34:     // takeoff logic\n   35  \n   36      // if we are armed and haven't yet taken off\n   37:     if (motors.armed() && ap.land_complete && !gndeffect_state.takeoff_expected) {\n   38:         gndeffect_state.takeoff_expected = true;\n   39      }\n   40  \n   41:     // if we aren't taking off yet, reset the takeoff timer, altitude and complete flag\n   42      bool throttle_up = mode_has_manual_throttle(control_mode) && g.rc_3.get_control_in() > 0;\n   43      if (!throttle_up && ap.land_complete) {\n   44:         gndeffect_state.takeoff_time_ms = tnow_ms;\n   45:         gndeffect_state.takeoff_alt_cm = inertial_nav.get_altitude();\n   46      }\n   47  \n   48:     // if we are in takeoff_expected and we meet the conditions for having taken off\n   49:     // end the takeoff_expected state\n   50:     if (gndeffect_state.takeoff_expected && (tnow_ms-gndeffect_state.takeoff_time_ms > 5000 || inertial_nav.get_altitude()-gndeffect_state.takeoff_alt_cm > 50.0f)) {\n   51:         gndeffect_state.takeoff_expected = false;\n   52      }\n   53  \n   ..\n   66      gndeffect_state.touchdown_expected = slow_horizontal && slow_descent;\n   67  \n   68:     // Prepare the EKF for ground effect if either takeoff or touchdown is expected.\n   69:     ahrs.setTakeoffExpected(gndeffect_state.takeoff_expected);\n   70      ahrs.setTouchdownExpected(gndeffect_state.touchdown_expected);\n   71  }\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/commands_logic.cpp:\n   16      /// navigation commands\n   17      ///\n   18:     case MAV_CMD_NAV_TAKEOFF:                   // 22\n   19:         do_takeoff(cmd);\n   20          break;\n   21  \n   ..\n  188      // navigation commands\n  189      //\n  190:     case MAV_CMD_NAV_TAKEOFF:\n  191:         return verify_takeoff();\n  192  \n  193      case MAV_CMD_NAV_WAYPOINT:\n  ...\n  281  /********************************************************************************/\n  282  \n  283: // do_takeoff - initiate takeoff navigation command\n  284: void Copter::do_takeoff(const AP_Mission::Mission_Command& cmd)\n  285  {\n  286      // Set wp navigation target to safe altitude above current position\n  287:     auto_takeoff_start(cmd.content.location);\n  288  }\n  289  \n  ...\n  596  /********************************************************************************/\n  597  \n  598: // verify_takeoff - check if we have completed the takeoff\n  599: bool Copter::verify_takeoff()\n  600  {\n  601      // have we reached our target altitude?\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/config.h:\n  346  \n  347  //////////////////////////////////////////////////////////////////////////////\n  348: // Takeoff\n  349  //\n  350  #ifndef PILOT_TKOFF_ALT_DEFAULT\n  351:  # define PILOT_TKOFF_ALT_DEFAULT           0     // default final alt above home for pilot initiated takeoff\n  352  #endif\n  353  \n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_acro.cpp:\n   11  {\n   12     // if landed and the mode we're switching from does not have manual throttle and the throttle stick is too high\n   13:    if (motors.armed() && ap.land_complete && !mode_has_manual_throttle(control_mode) && (get_pilot_desired_throttle(channel_throttle->get_control_in()) > get_non_takeoff_throttle())) {\n   14         return false;\n   15     }\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_althold.cpp:\n   25      pos_control.set_desired_velocity_z(inertial_nav.get_velocity_z());\n   26  \n   27:     // stop takeoff if running\n   28:     takeoff_stop();\n   29  \n   30      return true;\n   ..\n   36  {\n   37      AltHoldModeState althold_state;\n   38:     float takeoff_climb_rate = 0.0f;\n   39  \n   40      // initialize vertical speeds and acceleration\n   ..\n   63  #if FRAME_CONFIG == HELI_FRAME\n   64      // helicopters are held on the ground until rotor speed runup has finished\n   65:     bool takeoff_triggered = (ap.land_complete && (channel_throttle->get_control_in() > get_takeoff_trigger_throttle()) && motors.rotor_runup_complete());\n   66  #else\n   67:     bool takeoff_triggered = (ap.land_complete && (channel_throttle->get_control_in() > get_takeoff_trigger_throttle()) && motors.spool_up_complete());\n   68  #endif\n   69  \n   ..\n   73      } else if (!ap.auto_armed){\n   74          althold_state = AltHold_NotAutoArmed;\n   75:     } else if (takeoff_state.running || takeoff_triggered){\n   76:         althold_state = AltHold_Takeoff;\n   77      } else if (ap.land_complete){\n   78          althold_state = AltHold_Landed;\n   ..\n   98          // Multicopters do not stabilize roll/pitch/yaw when motor are stopped\n   99          attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n  100:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  101  #endif\n  102          break;\n  ...\n  114          attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n  115  #endif\n  116:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  117          break;\n  118  \n  119:     case AltHold_Takeoff:\n  120  \n  121          // initiate take-off\n  122:         if (!takeoff_state.running) {\n  123:             takeoff_timer_start(constrain_float(g.pilot_takeoff_alt,0.0f,1000.0f));\n  124              // indicate we are taking off\n  125              set_land_complete(false);\n  126              // clear i terms\n  127:             set_throttle_takeoff();\n  128          }\n  129  \n  130:         // get take-off adjusted pilot and takeoff climb rates\n  131:         takeoff_get_climb_rates(target_climb_rate, takeoff_climb_rate);\n  132  \n  133          // set motors to full range\n  ...\n  142          // call position controller\n  143          pos_control.set_alt_target_from_climb_rate_ff(target_climb_rate, G_Dt, false);\n  144:         pos_control.add_takeoff_climb_rate(takeoff_climb_rate, G_Dt);\n  145          pos_control.update_z_controller();\n  146          break;\n  ...\n  153          // call attitude controller\n  154          attitude_control.input_euler_angle_roll_pitch_euler_rate_yaw(target_roll, target_pitch, target_yaw_rate, get_smoothing_gain());\n  155:         attitude_control.set_throttle_out(get_throttle_pre_takeoff(channel_throttle->get_control_in()),false,g.throttle_filt);\n  156          // set motors to spin-when-armed if throttle at zero, otherwise full range\n  157          if (ap.throttle_zero) {\n  ...\n  160              motors.set_desired_spool_state(AP_Motors::DESIRED_THROTTLE_UNLIMITED);\n  161          }\n  162:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  163          break;\n  164  \n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_auto.cpp:\n    6   * control_auto.pde - init and run calls for auto flight mode\n    7   *\n    8:  * This file contains the implementation for Land, Waypoint navigation and Takeoff from Auto mode\n    9   * Command execution code (i.e. command_logic.pde) should:\n   10   *      a) switch to Auto flight mode with set_mode() function.  This will cause auto_init to be called\n   11:  *      b) call one of the three auto initialisation functions: auto_wp_start(), auto_takeoff_start(), auto_land_start()\n   12:  *      c) call one of the verify functions auto_wp_verify(), auto_takeoff_verify, auto_land_verify repeated to check if the command has completed\n   13   * The main loop (i.e. fast loop) will call update_flight_modes() which will in turn call auto_run() which, based upon the auto_mode variable will call\n   14:  *      correct auto_wp_run, auto_takeoff_run or auto_land_run to actually implement the feature\n   15   */\n   16  \n   ..\n   26          auto_mode = Auto_Loiter;\n   27  \n   28:         // reject switching to auto mode if landed with motors armed but first command is not a takeoff (reduce change of flips)\n   29:         if (motors.armed() && ap.land_complete && !mission.starts_with_takeoff_cmd()) {\n   30:             gcs_send_text(MAV_SEVERITY_CRITICAL, \"Auto: Missing Takeoff Cmd\");\n   31              return false;\n   32          }\n   ..\n   60      switch (auto_mode) {\n   61  \n   62:     case Auto_TakeOff:\n   63:         auto_takeoff_run();\n   64          break;\n   65  \n   ..\n   97  }\n   98  \n   99: // auto_takeoff_start - initialises waypoint controller to implement take-off\n  100: void Copter::auto_takeoff_start(const Location& dest_loc)\n  101  {\n  102:     auto_mode = Auto_TakeOff;\n  103  \n  104      // convert location to class\n  ...\n  138  \n  139      // clear i term when we're taking off\n  140:     set_throttle_takeoff();\n  141  }\n  142  \n  143: // auto_takeoff_run - takeoff in auto mode\n  144  //      called by auto_run at 100hz or more\n  145: void Copter::auto_takeoff_run()\n  146  {\n  147      // if not auto armed or motor interlock not enabled set throttle to zero and exit immediately\n  ...\n  159  #endif\n  160          // clear i term when we're taking off\n  161:         set_throttle_takeoff();\n  162          return;\n  163      }\n  ...\n  234  #endif\n  235          // clear i term when we're taking off\n  236:         set_throttle_takeoff();\n  237          return;\n  238      }\n  ...\n  275      if (!motors.armed() || !ap.auto_armed || !motors.get_interlock()) {\n  276          // clear i term when we're taking off\n  277:         set_throttle_takeoff();\n  278          return;\n  279      }\n  ...\n  348  #endif\n  349          // clear i term when we're taking off\n  350:         set_throttle_takeoff();\n  351          return;\n  352      }\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_autotune.cpp:\n  272          motors.set_desired_spool_state(AP_Motors::DESIRED_SPIN_WHEN_ARMED);\n  273          attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n  274:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  275          return;\n  276      }\n  ...\n  293          set_land_complete(false);\n  294          // clear i term when we're taking off\n  295:         set_throttle_takeoff();\n  296      }\n  297  \n  ...\n  303              motors.set_desired_spool_state(AP_Motors::DESIRED_THROTTLE_UNLIMITED);\n  304          }\n  305:         // move throttle to between minimum and non-takeoff-throttle to keep us on the ground\n  306:         attitude_control.set_throttle_out(get_throttle_pre_takeoff(channel_throttle->get_control_in()),false,g.throttle_filt);\n  307:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  308      }else{\n  309          // check if pilot is overriding the controls\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_brake.cpp:\n   50          attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n   51  #endif\n   52:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(0)-motors.get_throttle_hover());\n   53          return;\n   54      }\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_circle.cpp:\n   74              set_land_complete(false);\n   75              // clear i term when we're taking off\n   76:             set_throttle_takeoff();\n   77          }\n   78      }\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_guided.cpp:\n   51  \n   52  \n   53: // guided_takeoff_start - initialises waypoint controller to implement take-off\n   54: bool Copter::guided_takeoff_start(float final_alt_above_home)\n   55  {\n   56:     guided_mode = Guided_TakeOff;\n   57  \n   58      // initialise wpnav destination\n   ..\n   71  \n   72      // clear i term when we're taking off\n   73:     set_throttle_takeoff();\n   74  \n   75      return true;\n   ..\n  292      switch (guided_mode) {\n  293  \n  294:     case Guided_TakeOff:\n  295:         // run takeoff controller\n  296:         guided_takeoff_run();\n  297          break;\n  298  \n  ...\n  319   }\n  320  \n  321: // guided_takeoff_run - takeoff in guided mode\n  322  //      called by guided_run at 100hz or more\n  323: void Copter::guided_takeoff_run()\n  324  {\n  325      // if not auto armed or motors not enabled set throttle to zero and exit immediately\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_loiter.cpp:\n   43      float target_yaw_rate = 0.0f;\n   44      float target_climb_rate = 0.0f;\n   45:     float takeoff_climb_rate = 0.0f;\n   46  \n   47      // initialize vertical speed and acceleration\n   ..\n   78      } else if (!ap.auto_armed) {\n   79          loiter_state = Loiter_NotAutoArmed;\n   80:     } else if (takeoff_state.running || (ap.land_complete && (channel_throttle->get_control_in() > get_takeoff_trigger_throttle()))){\n   81:         loiter_state = Loiter_Takeoff;\n   82      } else if (ap.land_complete){\n   83          loiter_state = Loiter_Landed;\n   ..\n  107          // multicopters do not stabilize roll/pitch/yaw when motors are stopped\n  108          attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n  109:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  110  #endif\n  111          break;\n  ...\n  123          attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n  124  #endif\n  125:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  126          break;\n  127  \n  128:     case Loiter_Takeoff:\n  129  \n  130:         if (!takeoff_state.running) {\n  131:             takeoff_timer_start(constrain_float(g.pilot_takeoff_alt,0.0f,1000.0f));\n  132              // indicate we are taking off\n  133              set_land_complete(false);\n  134              // clear i term when we're taking off\n  135:             set_throttle_takeoff();\n  136          }\n  137  \n  138:         // get takeoff adjusted pilot and takeoff climb rates\n  139:         takeoff_get_climb_rates(target_climb_rate, takeoff_climb_rate);\n  140  \n  141          // set motors to full range\n  ...\n  150          // update altitude target and call position controller\n  151          pos_control.set_alt_target_from_climb_rate_ff(target_climb_rate, G_Dt, false);\n  152:         pos_control.add_takeoff_climb_rate(takeoff_climb_rate, G_Dt);\n  153          pos_control.update_z_controller();\n  154          break;\n  ...\n  159          // call attitude controller\n  160          attitude_control.input_euler_angle_roll_pitch_euler_rate_yaw(0, 0, 0, get_smoothing_gain());\n  161:         // move throttle to between minimum and non-takeoff-throttle to keep us on the ground\n  162:         attitude_control.set_throttle_out(get_throttle_pre_takeoff(channel_throttle->get_control_in()),false,g.throttle_filt);\n  163          // if throttle zero reset attitude and exit immediately\n  164          if (ap.throttle_zero) {\n  ...\n  167              motors.set_desired_spool_state(AP_Motors::DESIRED_THROTTLE_UNLIMITED);\n  168          }\n  169:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  170          break;\n  171  \n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_poshold.cpp:\n  130      float target_yaw_rate = 0;          // pilot desired yaw rate in centi-degrees/sec\n  131      float target_climb_rate = 0;      // pilot desired climb rate in centimeters/sec\n  132:     float takeoff_climb_rate = 0.0f;    // takeoff induced climb rate\n  133      float brake_to_loiter_mix;          // mix of brake and loiter controls.  0 = fully brake controls, 1 = fully loiter controls\n  134      float controller_to_pilot_roll_mix; // mix of controller and pilot controls.  0 = fully last controller controls, 1 = fully pilot controls\n  ...\n  146          wp_nav.init_loiter_target();\n  147          attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n  148:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  149          return;\n  150      }\n  ...\n  162          target_climb_rate = constrain_float(target_climb_rate, -g.pilot_velocity_z_max, g.pilot_velocity_z_max);\n  163  \n  164:         // get takeoff adjusted pilot and takeoff climb rates\n  165:         takeoff_get_climb_rates(target_climb_rate, takeoff_climb_rate);\n  166  \n  167          // check for take-off\n  168:         if (ap.land_complete && (takeoff_state.running || channel_throttle->get_control_in() > get_takeoff_trigger_throttle())) {\n  169:             if (!takeoff_state.running) {\n  170:                 takeoff_timer_start(constrain_float(g.pilot_takeoff_alt,0.0f,1000.0f));\n  171              }\n  172  \n  ...\n  174              set_land_complete(false);\n  175              // clear i term when we're taking off\n  176:             set_throttle_takeoff();\n  177          }\n  178      }\n  ...\n  192          }\n  193          wp_nav.init_loiter_target();\n  194:         // move throttle to between minimum and non-takeoff-throttle to keep us on the ground\n  195:         attitude_control.set_throttle_out(get_throttle_pre_takeoff(channel_throttle->get_control_in()),false,g.throttle_filt);\n  196:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  197          return;\n  198      }else{\n  ...\n  527          // update altitude target and call position controller\n  528          pos_control.set_alt_target_from_climb_rate_ff(target_climb_rate, G_Dt, false);\n  529:         pos_control.add_takeoff_climb_rate(takeoff_climb_rate, G_Dt);\n  530          pos_control.update_z_controller();\n  531      }\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_sport.cpp:\n   27      float target_roll_rate, target_pitch_rate, target_yaw_rate;\n   28      float target_climb_rate = 0;\n   29:     float takeoff_climb_rate = 0.0f;\n   30  \n   31      // initialize vertical speed and acceleration\n   ..\n   37          motors.set_desired_spool_state(AP_Motors::DESIRED_SPIN_WHEN_ARMED);\n   38          attitude_control.set_throttle_out_unstabilized(0,true,g.throttle_filt);\n   39:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n   40          return;\n   41      }\n   ..\n   76      target_climb_rate = constrain_float(target_climb_rate, -g.pilot_velocity_z_max, g.pilot_velocity_z_max);\n   77  \n   78:     // get takeoff adjusted pilot and takeoff climb rates\n   79:     takeoff_get_climb_rates(target_climb_rate, takeoff_climb_rate);\n   80  \n   81      // check for take-off\n   82:     if (ap.land_complete && (takeoff_state.running || (channel_throttle->get_control_in() > get_takeoff_trigger_throttle()))) {\n   83:         if (!takeoff_state.running) {\n   84:             takeoff_timer_start(constrain_float(g.pilot_takeoff_alt,0.0f,1000.0f));\n   85          }\n   86  \n   ..\n   88          set_land_complete(false);\n   89          // clear i term when we're taking off\n   90:         set_throttle_takeoff();\n   91      }\n   92  \n   ..\n   98              motors.set_desired_spool_state(AP_Motors::DESIRED_THROTTLE_UNLIMITED);\n   99          }\n  100:         // move throttle to between minimum and non-takeoff-throttle to keep us on the ground\n  101:         attitude_control.set_throttle_out(get_throttle_pre_takeoff(channel_throttle->get_control_in()),false,g.throttle_filt);\n  102:         pos_control.relax_alt_hold_controllers(get_throttle_pre_takeoff(channel_throttle->get_control_in())-motors.get_throttle_hover());\n  103      }else{\n  104          // set motors to full range\n  ...\n  116          // call position controller\n  117          pos_control.set_alt_target_from_climb_rate_ff(target_climb_rate, G_Dt, false);\n  118:         pos_control.add_takeoff_climb_rate(takeoff_climb_rate, G_Dt);\n  119          pos_control.update_z_controller();\n  120      }\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/control_stabilize.cpp:\n   11  {\n   12      // if landed and the mode we're switching from does not have manual throttle and the throttle stick is too high\n   13:     if (motors.armed() && ap.land_complete && !mode_has_manual_throttle(control_mode) && (get_pilot_desired_throttle(channel_throttle->get_control_in()) > get_non_takeoff_throttle())) {\n   14          return false;\n   15      }\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/defines.h:\n  188  // Auto modes\n  189  enum AutoMode {\n  190:     Auto_TakeOff,\n  191      Auto_WP,\n  192      Auto_Land,\n  ...\n  201  // Guided modes\n  202  enum GuidedMode {\n  203:     Guided_TakeOff,\n  204      Guided_WP,\n  205      Guided_Velocity,\n  ...\n  221      AltHold_MotorStopped,\n  222      AltHold_NotAutoArmed,\n  223:     AltHold_Takeoff,\n  224      AltHold_Flying,\n  225      AltHold_Landed\n  ...\n  230      Loiter_MotorStopped,\n  231      Loiter_NotAutoArmed,\n  232:     Loiter_Takeoff,\n  233      Loiter_Flying,\n  234      Loiter_Landed\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/flight_mode.cpp:\n  259      }\n  260  \n  261:     // cancel any takeoffs in progress\n  262:     takeoff_stop();\n  263  \n  264  #if FRAME_CONFIG == HELI_FRAME\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/land_detector.cpp:\n   49  #if FRAME_CONFIG == HELI_FRAME\n   50          // if rotor speed and collective pitch are high then clear landing flag\n   51:         if (motors.get_throttle() > get_non_takeoff_throttle() && motors.rotor_runup_complete()) {\n   52  #else\n   53          // if throttle output is high then clear landing flag\n   54:         if (motors.get_throttle() > get_non_takeoff_throttle()) {\n   55  #endif\n   56              set_land_complete(false);\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp:\n  301                  AP_Mission::Mission_Command cmd  = {};\n  302  \n  303:                 // if the mission is empty save a takeoff command\n  304                  if(mission.num_commands() == 0) {\n  305                      // set our location ID to 16, MAV_CMD_NAV_WAYPOINT\n  306:                     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  307                      cmd.content.location.options = 0;\n  308                      cmd.p1 = 0;\n  ...\n  311                      cmd.content.location.alt = MAX(current_loc.alt,100);\n  312  \n  313:                     // use the current altitude for the target alt for takeoff.\n  314:                     // only altitude will matter to the AP mission script for takeoff.\n  315                      if(mission.add_cmd(cmd)) {\n  316                          // log event\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp:\n    3  #include \"Copter.h\"\n    4  \n    5: // This file contains the high-level takeoff logic for Loiter, PosHold, AltHold, Sport modes.\n    6: //   The take-off can be initiated from a GCS NAV_TAKEOFF command which includes a takeoff altitude\n    7: //   A safe takeoff speed is calculated and used to calculate a time_ms\n    8  //   the pos_control target is then slowly increased until time_ms expires\n    9  \n   10: // return true if this flight mode supports user takeoff\n   11  //  must_nagivate is true if mode must also control horizontal position\n   12: bool Copter::current_mode_has_user_takeoff(bool must_navigate)\n   13  {\n   14      switch (control_mode) {\n   ..\n   25  }\n   26  \n   27: // initiate user takeoff - called when MAVLink TAKEOFF command is received\n   28: bool Copter::do_user_takeoff(float takeoff_alt_cm, bool must_navigate)\n   29  {\n   30:     if (motors.armed() && ap.land_complete && current_mode_has_user_takeoff(must_navigate) && takeoff_alt_cm > current_loc.alt) {\n   31  \n   32  #if FRAME_CONFIG == HELI_FRAME\n   33:         // Helicopters should return false if MAVlink takeoff command is received while the rotor is not spinning\n   34          if (!motors.rotor_runup_complete()) {\n   35              return false;\n   ..\n   39          switch(control_mode) {\n   40              case GUIDED:\n   41:                 if (guided_takeoff_start(takeoff_alt_cm)) {\n   42                      set_auto_armed(true);\n   43                      return true;\n   ..\n   49              case SPORT:\n   50                  set_auto_armed(true);\n   51:                 takeoff_timer_start(takeoff_alt_cm);\n   52                  return true;\n   53              default:\n   ..\n   58  }\n   59  \n   60: // start takeoff to specified altitude above home in centimeters\n   61: void Copter::takeoff_timer_start(float alt_cm)\n   62  {\n   63      // calculate climb rate\n   ..\n   65  \n   66      // sanity check speed and target\n   67:     if (takeoff_state.running || speed <= 0.0f || alt_cm <= 0.0f) {\n   68          return;\n   69      }\n   70  \n   71:     // initialise takeoff state\n   72:     takeoff_state.running = true;\n   73:     takeoff_state.max_speed = speed;\n   74:     takeoff_state.start_ms = millis();\n   75:     takeoff_state.alt_delta = alt_cm;\n   76  }\n   77  \n   78: // stop takeoff\n   79: void Copter::takeoff_stop()\n   80  {\n   81:     takeoff_state.running = false;\n   82:     takeoff_state.start_ms = 0;\n   83  }\n   84  \n   85: // returns pilot and takeoff climb rates\n   86  //  pilot_climb_rate is both an input and an output\n   87: //  takeoff_climb_rate is only an output\n   88: //  has side-effect of turning takeoff off when timeout as expired\n   89: void Copter::takeoff_get_climb_rates(float& pilot_climb_rate, float& takeoff_climb_rate)\n   90  {\n   91      // return pilot_climb_rate if take-off inactive\n   92:     if (!takeoff_state.running) {\n   93:         takeoff_climb_rate = 0.0f;\n   94          return;\n   95      }\n   96  \n   97      // acceleration of 50cm/s/s\n   98:     static const float takeoff_accel = 50.0f;\n   99:     float takeoff_minspeed = MIN(50.0f,takeoff_state.max_speed);\n  100:     float time_elapsed = (millis()-takeoff_state.start_ms)*1.0e-3f;\n  101:     float speed = MIN(time_elapsed*takeoff_accel+takeoff_minspeed, takeoff_state.max_speed);\n  102  \n  103:     float time_to_max_speed = (takeoff_state.max_speed-takeoff_minspeed)/takeoff_accel;\n  104      float height_gained;\n  105      if (time_elapsed <= time_to_max_speed) {\n  106:         height_gained = 0.5f*takeoff_accel*sq(time_elapsed) + takeoff_minspeed*time_elapsed;\n  107      } else {\n  108:         height_gained = 0.5f*takeoff_accel*sq(time_to_max_speed) + takeoff_minspeed*time_to_max_speed +\n  109:                         (time_elapsed-time_to_max_speed)*takeoff_state.max_speed;\n  110      }\n  111  \n  112:     // check if the takeoff is over\n  113:     if (height_gained >= takeoff_state.alt_delta) {\n  114:         takeoff_stop();\n  115      }\n  116  \n  117:     // if takeoff climb rate is zero return\n  118      if (speed <= 0.0f) {\n  119:         takeoff_climb_rate = 0.0f;\n  120          return;\n  121      }\n  122  \n  123      // default take-off climb rate to maximum speed\n  124:     takeoff_climb_rate = speed;\n  125  \n  126      // if pilot's commands descent\n  127      if (pilot_climb_rate < 0.0f) {\n  128          // if overall climb rate is still positive, move to take-off climb rate\n  129:         if (takeoff_climb_rate + pilot_climb_rate > 0.0f) {\n  130:             takeoff_climb_rate = takeoff_climb_rate + pilot_climb_rate;\n  131              pilot_climb_rate = 0;\n  132          } else {\n  133              // if overall is negative, move to pilot climb rate\n  134:             pilot_climb_rate = pilot_climb_rate + takeoff_climb_rate;\n  135:             takeoff_climb_rate = 0.0f;\n  136          }\n  137      } else { // pilot commands climb\n  138          // pilot climb rate is zero until it surpasses the take-off climb rate\n  139:         if (pilot_climb_rate > takeoff_climb_rate) {\n  140:             pilot_climb_rate = pilot_climb_rate - takeoff_climb_rate;\n  141          } else {\n  142              pilot_climb_rate = 0.0f;\n\n/home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.d:\n    1: /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o: \\\n    2:  /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp \\\n    3   /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/include/visibility.h \\\n    4   /home/jakob/Github/ArduPilot-CG/ArduCopter/Copter.h \\\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/ArduPlane.cpp:\n  169  \n  170      // updated the summed gyro used for ground steering and\n  171:     // auto-takeoff. Dot product of DCM.c with gyro vector gives earth\n  172      // frame yaw rate\n  173      steer_state.locked_course_err += ahrs.get_yaw_rate_earth() * G_Dt;\n  ...\n  186  	    // Call TECS 50Hz update. Note that we call this regardless of\n  187  	    // throttle suppressed, as this needs to be running for\n  188: 	    // takeoff detection\n  189          SpdHgt_Controller->update_50hz();\n  190      }\n  ...\n  518      if (quadplane.in_vtol_auto()) {\n  519          quadplane.control_auto(next_WP_loc);\n  520:     } else if (nav_cmd_id == MAV_CMD_NAV_TAKEOFF ||\n  521          (nav_cmd_id == MAV_CMD_NAV_LAND && flight_stage == AP_SpdHgtControl::FLIGHT_LAND_ABORT)) {\n  522:         takeoff_calc_roll();\n  523:         takeoff_calc_pitch();\n  524          calc_throttle();\n  525      } else if (nav_cmd_id == MAV_CMD_NAV_LAND) {\n  ...\n  541      } else {\n  542          // we are doing normal AUTO flight, the special cases\n  543:         // are for takeoff and landing\n  544          if (nav_cmd_id != MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT) {\n  545              steer_state.hold_course_cd = -1;\n  ...\n  564  \n  565      if (effective_mode != AUTO) {\n  566:         // hold_course is only used in takeoff and landing\n  567          steer_state.hold_course_cd = -1;\n  568      }\n  ...\n  666          }\n  667          if (g.fbwa_tdrag_chan > 0) {\n  668:             // check for the user enabling FBWA taildrag takeoff mode\n  669              bool tdrag_mode = (hal.rcin->read(g.fbwa_tdrag_chan-1) > 1700);\n  670:             if (tdrag_mode && !auto_state.fbwa_tdrag_takeoff_mode) {\n  671:                 if (auto_state.highest_airspeed < g.takeoff_tdrag_speed1) {\n  672:                     auto_state.fbwa_tdrag_takeoff_mode = true;\n  673                      gcs_send_text(MAV_SEVERITY_WARNING, \"FBWA tdrag mode\");\n  674                  }\n  ...\n  864  \n  865      case AP_SpdHgtControl::FLIGHT_LAND_ABORT:\n  866:         gcs_send_text_fmt(MAV_SEVERITY_NOTICE, \"Landing aborted, climbing to %dm\", auto_state.takeoff_altitude_rel_cm/100);\n  867          auto_state.land_in_progress = false;\n  868          break;\n  ...\n  875      case AP_SpdHgtControl::FLIGHT_NORMAL:\n  876      case AP_SpdHgtControl::FLIGHT_VTOL:\n  877:     case AP_SpdHgtControl::FLIGHT_TAKEOFF:\n  878          auto_state.land_in_progress = false;\n  879          break;\n  ...\n  925                                                   auto_state.land_in_progress,\n  926                                                   distance_beyond_land_wp,\n  927:                                                  get_takeoff_pitch_min_cd(),\n  928                                                   throttle_nudge,\n  929                                                   tecs_hgt_afe(),\n  ...\n  942              if (quadplane.in_vtol_auto()) {\n  943                  set_flight_stage(AP_SpdHgtControl::FLIGHT_VTOL);\n  944:             } else if (auto_state.takeoff_complete == false) {\n  945:                 set_flight_stage(AP_SpdHgtControl::FLIGHT_TAKEOFF);\n  946              } else if (mission.get_current_nav_cmd().id == MAV_CMD_NAV_LAND) {\n  947  \n  ...\n  976              // If not in AUTO then assume normal operation for normal TECS operation.\n  977              // This prevents TECS from being stuck in the wrong stage if you switch from\n  978:             // AUTO to, say, FBWB during a landing, an aborted landing or takeoff.\n  979              set_flight_stage(AP_SpdHgtControl::FLIGHT_NORMAL);\n  980          }\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/Attitude.cpp:\n   95  void Plane::stabilize_pitch(float speed_scaler)\n   96  {\n   97:     int8_t force_elevator = takeoff_tail_hold();\n   98      if (force_elevator != 0) {\n   99:         // we are holding the tail down during takeoff. Just convert\n  100          // from a percentage to a -4500..4500 centidegree angle\n  101          channel_pitch->set_servo_out(45*force_elevator);\n  ...\n  407          // we are low, with no climb rate, and zero throttle, and very\n  408          // low ground speed. Zero the attitude controller\n  409:         // integrators. This prevents integrator buildup pre-takeoff.\n  410          rollController.reset_I();\n  411          pitchController.reset_I();\n  ...\n  460  {\n  461      // holding a specific navigation course on the ground. Used in\n  462:     // auto-takeoff and landing\n  463      int32_t bearing_error_cd = nav_controller->bearing_error_cd();\n  464      steering_control.steering = steerController.get_steering_out_angle_error(bearing_error_cd);\n  ...\n  476      if (gps.ground_speed() < 1 && \n  477          channel_throttle->get_control_in() == 0 &&\n  478:         flight_stage != AP_SpdHgtControl::FLIGHT_TAKEOFF &&\n  479          flight_stage != AP_SpdHgtControl::FLIGHT_LAND_ABORT) {\n  480          // manual rudder control while still\n  ...\n  486  \n  487      float steer_rate = (rudder_input/4500.0f) * g.ground_steer_dps;\n  488:     if (flight_stage == AP_SpdHgtControl::FLIGHT_TAKEOFF ||\n  489          flight_stage == AP_SpdHgtControl::FLIGHT_LAND_ABORT) {\n  490          steer_rate = 0;\n  ...\n  496          // pilot has released the rudder stick or we are still - lock the course\n  497          steer_state.locked_course = true;\n  498:         if (flight_stage != AP_SpdHgtControl::FLIGHT_TAKEOFF &&\n  499              flight_stage != AP_SpdHgtControl::FLIGHT_LAND_ABORT) {\n  500              steer_state.locked_course_err = 0;\n  ...\n  542      uint8_t slewrate = aparm.throttle_slewrate;\n  543      if (control_mode==AUTO) {\n  544:         if (auto_state.takeoff_complete == false && g.takeoff_throttle_slewrate != 0) {\n  545:             slewrate = g.takeoff_throttle_slewrate;\n  546          } else if (g.land_throttle_slewrate != 0 &&\n  547                  (flight_stage == AP_SpdHgtControl::FLIGHT_LAND_APPROACH || flight_stage == AP_SpdHgtControl::FLIGHT_LAND_FINAL || flight_stage == AP_SpdHgtControl::FLIGHT_LAND_PREFLARE)) {\n  ...\n  588     *       2 - Our reported altitude is within 10 meters of the home altitude.\n  589     *       3 - Our reported speed is under 5 meters per second.\n  590:    *       4 - We are not performing a takeoff in Auto mode or takeoff speed/accel not yet reached\n  591     *       OR\n  592     *       5 - Home location is not set\n  ...\n  620      \n  621      if (control_mode==AUTO && \n  622:         auto_state.takeoff_complete == false) {\n  623  \n  624:         uint32_t launch_duration_ms = ((int32_t)g.takeoff_throttle_delay)*100 + 2000;\n  625          if (is_flying() &&\n  626              millis() - started_flying_ms > MAX(launch_duration_ms, 5000U) && // been flying >5s in any mode\n  ...\n  629              gps_movement) { // definite gps movement\n  630              // we're already flying, do not suppress the throttle. We can get\n  631:             // stuck in this condition if we reset a mission and cmd 1 is takeoff\n  632:             // but we're currently flying around below the takeoff altitude\n  633              throttle_suppressed = false;\n  634              return false;\n  635          }\n  636:         if (auto_takeoff_check()) {\n  637:             // we're in auto takeoff \n  638              throttle_suppressed = false;\n  639:             auto_state.baro_takeoff_alt = barometer.get_altitude();\n  640              return false;\n  641          }\n  ...\n  943              }\n  944  \n  945:             if (flight_stage == AP_SpdHgtControl::FLIGHT_TAKEOFF || flight_stage == AP_SpdHgtControl::FLIGHT_LAND_ABORT) {\n  946:                 if(aparm.takeoff_throttle_max != 0) {\n  947:                     max_throttle = aparm.takeoff_throttle_max;\n  948                  } else {\n  949                      max_throttle = aparm.throttle_max;\n  ...\n 1062  \n 1063          /*\n 1064:           special flap levels for takeoff and landing. This works\n 1065            better than speed based flaps as it leads to less\n 1066            possibility of oscillation\n ....\n 1068          if (control_mode == AUTO) {\n 1069              switch (flight_stage) {\n 1070:             case AP_SpdHgtControl::FLIGHT_TAKEOFF:\n 1071              case AP_SpdHgtControl::FLIGHT_LAND_ABORT:\n 1072:                 if (g.takeoff_flap_percent != 0) {\n 1073:                     auto_flap_percent = g.takeoff_flap_percent;\n 1074                  }\n 1075                  break;\n 1076              case AP_SpdHgtControl::FLIGHT_NORMAL:\n 1077                  if (auto_flap_percent != 0 && in_preLaunch_flight_stage()) {\n 1078:                     // TODO: move this to a new FLIGHT_PRE_TAKEOFF stage\n 1079:                     auto_flap_percent = g.takeoff_flap_percent;\n 1080                  }\n 1081                  break;\n ....\n 1248          uint16_t nav_cmd = mission.get_current_nav_cmd().id;\n 1249  \n 1250:         // never allow reverse thrust during takeoff\n 1251:         if (nav_cmd == MAV_CMD_NAV_TAKEOFF) {\n 1252              return false;\n 1253          }\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/GCS_Mavlink.cpp:\n 1563  \n 1564                  if (!is_zero(packet.param1)) {\n 1565:                     plane.auto_state.takeoff_altitude_rel_cm = packet.param1 * 100;\n 1566                  }\n 1567                  plane.auto_state.commanded_go_around = true;\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/Parameters.cpp:\n  116      // @Param: GLIDE_SLOPE_THR\n  117      // @DisplayName: Glide slope threshold\n  118:     // @Description: This controls the height above the glide slope the plane may be before rebuilding a glide slope. This is useful for smoothing out an autotakeoff\n  119      // @Range: 0 100\n  120      // @Increment: 1\n  ...\n  138  \n  139      // @Param: TKOFF_THR_MINSPD\n  140:     // @DisplayName: Takeoff throttle min speed\n  141:     // @Description: Minimum GPS ground speed in m/s used by the speed check that un-suppresses throttle in auto-takeoff. This can be be used for catapult launches where you want the motor to engage only after the plane leaves the catapult, but it is preferable to use the TKOFF_THR_MINACC and TKOFF_THR_DELAY parameters for catapult launches due to the errors associated with GPS measurements. For hand launches with a pusher prop it is strongly advised that this parameter be set to a value no less than 4 m/s to provide additional protection against premature motor start. Note that the GPS velocity will lag the real velocity by about 0.5 seconds. The ground speed check is delayed by the TKOFF_THR_DELAY parameter.\n  142      // @Units: m/s\n  143      // @Range: 0 30\n  144      // @Increment: 0.1\n  145      // @User: User\n  146:     GSCALAR(takeoff_throttle_min_speed,     \"TKOFF_THR_MINSPD\",  0),\n  147  \n  148      // @Param: TKOFF_THR_MINACC\n  149:     // @DisplayName: Takeoff throttle min acceleration\n  150:     // @Description: Minimum forward acceleration in m/s/s before arming the ground speed check in auto-takeoff. This is meant to be used for hand launches. Setting this value to 0 disables the acceleration test which means the ground speed check will always be armed which could allow GPS velocity jumps to start the engine. For hand launches and bungee launches this should be set to around 15.\n  151      // @Units: m/s/s\n  152      // @Range: 0 30\n  153      // @Increment: 0.1\n  154      // @User: User\n  155:     GSCALAR(takeoff_throttle_min_accel,     \"TKOFF_THR_MINACC\",  0),\n  156  \n  157      // @Param: TKOFF_THR_DELAY\n  158:     // @DisplayName: Takeoff throttle delay\n  159      // @Description: This parameter sets the time delay (in 1/10ths of a second) that the ground speed check is delayed after the forward acceleration check controlled by TKOFF_THR_MINACC has passed. For hand launches with pusher propellers it is essential that this is set to a value of no less than 2 (0.2 seconds) to ensure that the aircraft is safely clear of the throwers arm before the motor can start. For bungee launches a larger value can be used (such as 30) to give time for the bungee to release from the aircraft before the motor is started.\n  160      // @Units: 0.1 seconds\n  ...\n  162      // @Increment: 1\n  163      // @User: User\n  164:     GSCALAR(takeoff_throttle_delay,     \"TKOFF_THR_DELAY\",  2),\n  165  \n  166      // @Param: TKOFF_TDRAG_ELEV\n  167:     // @DisplayName: Takeoff tail dragger elevator\n  168:     // @Description: This parameter sets the amount of elevator to apply during the initial stage of a takeoff. It is used to hold the tail wheel of a taildragger on the ground during the initial takeoff stage to give maximum steering. This option should be combined with the TKOFF_TDRAG_SPD1 option and the GROUND_STEER_ALT option along with tuning of the ground steering controller. A value of zero means to bypass the initial \"tail hold\" stage of takeoff. Set to zero for hand and catapult launch. For tail-draggers you should normally set this to 100, meaning full up elevator during the initial stage of takeoff. For most tricycle undercarriage aircraft a value of zero will work well, but for some tricycle aircraft a small negative value (say around -20 to -30) will apply down elevator which will hold the nose wheel firmly on the ground during initial acceleration. Only use a negative value if you find that the nosewheel doesn't grip well during takeoff. Too much down elevator on a tricycle undercarriage may cause instability in steering as the plane pivots around the nosewheel. Add down elevator 10 percent at a time.\n  169      // @Units: Percent\n  170      // @Range: -100 100\n  171      // @Increment: 1\n  172      // @User: User\n  173:     GSCALAR(takeoff_tdrag_elevator,     \"TKOFF_TDRAG_ELEV\",  0),\n  174  \n  175      // @Param: TKOFF_TDRAG_SPD1\n  176:     // @DisplayName: Takeoff tail dragger speed1\n  177:     // @Description: This parameter sets the airspeed at which to stop holding the tail down and transition to rudder control of steering on the ground. When TKOFF_TDRAG_SPD1 is reached the pitch of the aircraft will be held level until TKOFF_ROTATE_SPD is reached, at which point the takeoff pitch specified in the mission will be used to \"rotate\" the pitch for takeoff climb. Set TKOFF_TDRAG_SPD1 to zero to go straight to rotation. This should be set to zero for hand launch and catapult launch. It should also be set to zero for tricycle undercarriages unless you are using the method above to genetly hold the nose wheel down. For tail dragger aircraft it should be set just below the stall speed.\n  178      // @Units: m/s\n  179      // @Range: 0 30\n  180      // @Increment: 0.1\n  181      // @User: User\n  182:     GSCALAR(takeoff_tdrag_speed1,     \"TKOFF_TDRAG_SPD1\",  0),\n  183  \n  184      // @Param: TKOFF_ROTATE_SPD\n  185:     // @DisplayName: Takeoff rotate speed\n  186:     // @Description: This parameter sets the airspeed at which the aircraft will \"rotate\", setting climb pitch specified in the mission. If TKOFF_ROTATE_SPD is zero then the climb pitch will be used as soon as takeoff is started. For hand launch and catapult launches a TKOFF_ROTATE_SPD of zero should be set. For all ground launches TKOFF_ROTATE_SPD should be set above the stall speed, usually by about 10 to 30 percent\n  187      // @Units: m/s\n  188      // @Range: 0 30\n  189      // @Increment: 0.1\n  190      // @User: User\n  191:     GSCALAR(takeoff_rotate_speed,     \"TKOFF_ROTATE_SPD\",  0),\n  192  \n  193      // @Param: TKOFF_THR_SLEW\n  194:     // @DisplayName: Takeoff throttle slew rate\n  195:     // @Description: This parameter sets the slew rate for the throttle during auto takeoff. When this is zero the THR_SLEWRATE parameter is used during takeoff. For rolling takeoffs it can be a good idea to set a lower slewrate for takeoff to give a slower acceleration which can improve ground steering control. The value is a percentage throttle change per second, so a value of 20 means to advance the throttle over 5 seconds on takeoff. Values below 20 are not recommended as they may cause the plane to try to climb out with too little throttle.\n  196      // @Units: percent\n  197      // @Range: 0 127\n  198      // @Increment: 1\n  199      // @User: User\n  200:     GSCALAR(takeoff_throttle_slewrate, \"TKOFF_THR_SLEW\",  0),\n  201  \n  202      // @Param: TKOFF_PLIM_SEC\n  203:     // @DisplayName: Takeoff pitch limit reduction\n  204:     // @Description: This parameter reduces the pitch minimum limit of an auto-takeoff just a few seconds before it reaches the target altitude. This reduces overshoot by allowing the flight controller to start leveling off a few seconds before reaching the target height. When set to zero, the mission pitch min is enforced all the way to and through the target altitude, otherwise the pitch min slowly reduces to zero in the final segment. This is the pitch_min, not the demand. The flight controller should still be commanding to gain altitude to finish the takeoff but with this param it is not forcing it higher than it wants to be.\n  205      // @Units: seconds\n  206      // @Range: 0 10\n  207      // @Increment: 0.5\n  208      // @User: Advanced\n  209:     GSCALAR(takeoff_pitch_limit_reduction_sec, \"TKOFF_PLIM_SEC\",  2),\n  210  \n  211      // @Param: LAND_THR_SLEW\n  ...\n  219  \n  220      // @Param: TKOFF_FLAP_PCNT\n  221:     // @DisplayName: Takeoff flap percentage\n  222:     // @Description: The amount of flaps (as a percentage) to apply in automatic takeoff\n  223      // @Range: 0 100\n  224      // @Units: Percent\n  225      // @User: Advanced\n  226:     GSCALAR(takeoff_flap_percent,     \"TKOFF_FLAP_PCNT\", 0),\n  227  \n  228      // @Param: FBWA_TDRAG_CHAN\n  229      // @DisplayName: FBWA taildragger channel\n  230:     // @Description: This is a RC input channel which when it goes above 1700 enables FBWA taildragger takeoff mode. It should be assigned to a momentary switch. Once this feature is enabled it will stay enabled until the aircraft goes above TKOFF_TDRAG_SPD1 airspeed, changes mode, or the pitch goes above the initial pitch when this is engaged or goes below 0 pitch. When enabled the elevator will be forced to TKOFF_TDRAG_ELEV. This option allows for easier takeoffs on taildraggers in FBWA mode, and also makes it easier to test auto-takeoff steering handling in FBWA. Setting it to 0 disables this option.\n  231      // @User: Standard\n  232      GSCALAR(fbwa_tdrag_chan,          \"FBWA_TDRAG_CHAN\",  0),\n  ...\n  234      // @Param: LEVEL_ROLL_LIMIT\n  235      // @DisplayName: Level flight roll limit\n  236:     // @Description: This controls the maximum bank angle in degrees during flight modes where level flight is desired, such as in the final stages of landing, and during auto takeoff. This should be a small angle (such as 5 degrees) to prevent a wing hitting the runway during takeoff or landing. Setting this to zero will completely disable heading hold on auto takeoff and final landing approach.\n  237      // @Units: degrees\n  238      // @Range: 0 45\n  ...\n  457      // @Param: FENCE_AUTOENABLE\n  458      // @DisplayName: Fence automatic enable\n  459:     // @Description: When set to 1, geofence automatically enables after an auto takeoff and automatically disables at the beginning of an auto landing.  When on the ground before takeoff the fence is disabled.  When set to 2, the fence autoenables after an auto takeoff, but only disables the fence floor during landing. It is highly recommended to not use this option for line of sight flying and use a fence enable channel instead.\n  460      // @Values: 0:NoAutoEnable,1:AutoEnable,2:AutoEnableDisableFloorOnly\n  461      // @User: Standard\n  ...\n  547  \n  548      // @Param: TKOFF_THR_MAX\n  549:     // @DisplayName: Maximum Throttle for takeoff\n  550:     // @Description: The maximum throttle setting during automatic takeoff. If this is zero then THR_MAX is used for takeoff as well.\n  551      // @Units: Percent\n  552      // @Range: 0 100\n  553      // @Increment: 1\n  554      // @User: Advanced\n  555:     ASCALAR(takeoff_throttle_max,   \"TKOFF_THR_MAX\",        0),\n  556  \n  557      // @Param: THR_SLEWRATE\n  ...\n  575      // @Param: THR_SUPP_MAN\n  576      // @DisplayName: Throttle suppress manual passthru\n  577:     // @Description: When throttle is suppressed in auto mode it is normally forced to zero. If you enable this option, then while suppressed it will be manual throttle. This is useful on petrol engines to hold the idle throttle manually while waiting for takeoff\n  578  	// @Values: 0:Disabled,1:Enabled\n  579      // @User: Advanced\n  ...\n  802      // @Param: TRIM_AUTO\n  803      // @DisplayName: Automatic trim adjustment\n  804:     // @Description: Set RC trim PWM levels to current levels when switching away from manual mode. When this option is enabled and you change from MANUAL to any other mode then the APM will take the current position of the control sticks as the trim values for aileron, elevator and rudder. It will use those to set RC1_TRIM, RC2_TRIM and RC4_TRIM. This option is disabled by default as if a pilot is not aware of this option and changes from MANUAL to another mode while control inputs are not centered then the trim could be changed to a dangerously bad value. You can enable this option to assist with trimming your plane, by enabling it before takeoff then switching briefly to MANUAL in flight, and seeing how the plane reacts. You can then switch back to FBWA, trim the surfaces then again test MANUAL mode. Each time you switch from MANUAL the APM will take your control inputs as the new trim. After you have good trim on your aircraft you can disable TRIM_AUTO for future flights.\n  805      // @Values: 0:Disabled,1:Enabled\n  806      // @User: Standard\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/Parameters.h:\n   78          k_param_alt_offset,\n   79          k_param_ins,                // libraries/AP_InertialSensor variables\n   80:         k_param_takeoff_throttle_min_speed,\n   81:         k_param_takeoff_throttle_min_accel,\n   82:         k_param_takeoff_heading_hold, // unused\n   83          k_param_level_roll_limit,\n   84          k_param_hil_servos,\n   ..\n   90          k_param_scheduler,\n   91          k_param_relay,\n   92:         k_param_takeoff_throttle_delay,\n   93          k_param_skip_gyro_cal, // unused\n   94          k_param_auto_fbw_steer,\n   ..\n  110          k_param_serial1_baud,           // deprecated\n  111          k_param_serial2_baud,           // deprecated\n  112:         k_param_takeoff_tdrag_elevator,\n  113:         k_param_takeoff_tdrag_speed1,\n  114:         k_param_takeoff_rotate_speed,\n  115:         k_param_takeoff_throttle_slewrate,\n  116:         k_param_takeoff_throttle_max,\n  117          k_param_rangefinder,\n  118          k_param_terrain,\n  ...\n  125          k_param_rangefinder_landing,\n  126          k_param_land_flap_percent,\n  127:         k_param_takeoff_flap_percent,\n  128          k_param_flap_slewrate,\n  129          k_param_rtl_autoland,\n  ...\n  155          k_param_fence_ret_rally,\n  156          k_param_q_attitude_control,\n  157:         k_param_takeoff_pitch_limit_reduction_sec,\n  158  \n  159          // 110: Telemetry control\n  ...\n  496      AP_Int8 flap_2_speed;\n  497      AP_Int8 land_flap_percent;\n  498:     AP_Int8 takeoff_flap_percent;  \n  499      AP_Int8 inverted_flight_ch;             // 0=disabled, 1-8 is channel for inverted flight trigger\n  500      AP_Int8 stick_mixing;\n  501:     AP_Float takeoff_throttle_min_speed;\n  502:     AP_Float takeoff_throttle_min_accel;\n  503:     AP_Int8 takeoff_throttle_delay;\n  504:     AP_Int8 takeoff_tdrag_elevator;\n  505:     AP_Float takeoff_tdrag_speed1;\n  506:     AP_Float takeoff_rotate_speed;\n  507:     AP_Int8 takeoff_throttle_slewrate;\n  508:     AP_Float takeoff_pitch_limit_reduction_sec;\n  509      AP_Int8 land_throttle_slewrate;\n  510      AP_Int8 level_roll_limit;\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/Plane.cpp:\n   26  {\n   27      // C++11 doesn't allow in-class initialisation of bitfields\n   28:     auto_state.takeoff_complete = true;\n   29      auto_state.next_wp_no_crosstrack = true;\n   30      auto_state.no_crosstrack = true;\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/Plane.h:\n  413          uint32_t last_report_ms;\n  414          bool launchTimerStarted;\n  415:     } takeoff_state;\n  416      \n  417      // ground steering controller state\n  418      struct {\n  419:         // Direction held during phases of takeoff and landing centidegrees\n  420          // A value of -1 indicates the course has not been set/is not in use\n  421          // this is a 0..36000 value, or -1 for disabled\n  ...\n  423  \n  424          // locked_course and locked_course_cd are used in stabilize mode \n  425:         // when ground steering is active, and for steering in auto-takeoff\n  426          bool locked_course;\n  427          float locked_course_err;\n  ...\n  430      // flight mode specific\n  431      struct {\n  432:         // Flag for using gps ground course instead of INS yaw.  Set false when takeoff command in process.\n  433:         bool takeoff_complete:1;\n  434  \n  435          // Flag to indicate if we have landed.\n  ...\n  452          bool no_crosstrack:1;\n  453  \n  454:         // in FBWA taildragger takeoff mode\n  455:         bool fbwa_tdrag_takeoff_mode:1;\n  456  \n  457          // have we checked for an auto-land?\n  ...\n  461          bool commanded_go_around:1;\n  462  \n  463:         // Altitude threshold to complete a takeoff command in autonomous modes.  Centimeters\n  464          // are we in idle mode? used for balloon launch to stop servo\n  465          // movement until altitude is reached\n  ...\n  470          uint8_t idle_wiggle_stage;\n  471  \n  472:         // Altitude threshold to complete a takeoff command in autonomous\n  473          // modes.  Centimeters above home\n  474:         int32_t takeoff_altitude_rel_cm;\n  475  \n  476:         // Minimum pitch to hold during takeoff command execution.  Hundredths of a degree\n  477:         int16_t takeoff_pitch_cd;\n  478  \n  479:         // Begin leveling out the enforced takeoff pitch angle min at this height to reduce/eliminate overshoot\n  480:         int32_t height_below_takeoff_to_level_off_cm;\n  481  \n  482          // the highest airspeed we have reached since entering AUTO. Used\n  483:         // to control ground takeoff\n  484          float highest_airspeed;\n  485          \n  ...\n  493          float sink_rate;\n  494  \n  495:         // time when we first pass min GPS speed on takeoff\n  496:         uint32_t takeoff_speed_time_ms;\n  497          \n  498          // distance to next waypoint\n  ...\n  517          float initial_land_slope;\n  518  \n  519:         // barometric altitude at start of takeoff\n  520:         float baro_takeoff_alt;\n  521  \n  522          // are we in VTOL mode in AUTO?\n  ...\n  851      void update_home();\n  852      void do_RTL(int32_t alt);\n  853:     bool verify_takeoff();\n  854      bool verify_loiter_unlim();\n  855      bool verify_loiter_time();\n  ...\n  861      bool verify_within_distance();\n  862      bool verify_altitude_wait(const AP_Mission::Mission_Command &cmd);\n  863:     bool verify_vtol_takeoff(const AP_Mission::Mission_Command &cmd);\n  864      bool verify_vtol_land(const AP_Mission::Mission_Command &cmd);\n  865      void do_loiter_at_location();\n  ...\n  964      bool disarm_motors(void);\n  965      bool arm_motors(AP_Arming::ArmingMethod method);\n  966:     bool auto_takeoff_check(void);\n  967:     void takeoff_calc_roll(void);\n  968:     void takeoff_calc_pitch(void);\n  969:     int8_t takeoff_tail_hold(void);\n  970:     int16_t get_takeoff_pitch_min_cd(void);\n  971      void print_hit_enter();\n  972      void ahrs_update();\n  ...\n 1034      bool start_command(const AP_Mission::Mission_Command& cmd);\n 1035      bool verify_command(const AP_Mission::Mission_Command& cmd);\n 1036:     void do_takeoff(const AP_Mission::Mission_Command& cmd);\n 1037      void do_nav_wp(const AP_Mission::Mission_Command& cmd);\n 1038      void do_land(const AP_Mission::Mission_Command& cmd);\n ....\n 1044      void do_continue_and_change_alt(const AP_Mission::Mission_Command& cmd);\n 1045      void do_loiter_to_alt(const AP_Mission::Mission_Command& cmd);\n 1046:     void do_vtol_takeoff(const AP_Mission::Mission_Command& cmd);\n 1047      void do_vtol_land(const AP_Mission::Mission_Command& cmd);\n 1048      bool verify_nav_wp(const AP_Mission::Mission_Command& cmd);\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/adsb.cpp:\n   60          return false;\n   61      }\n   62:     if (mission.get_current_nav_cmd().id == MAV_CMD_NAV_TAKEOFF ||\n   63          mission.get_current_nav_cmd().id == MAV_CMD_NAV_LAND) {\n   64          // evasion during a plane take-off or land can result in a crash. Ignore ADS-B traffic\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/commands_logic.cpp:\n   23          auto_state.sink_rate = 0;\n   24  \n   25:         // set takeoff_complete to true so we don't add extra elevator\n   26:         // except in a takeoff\n   27:         auto_state.takeoff_complete = true;\n   28  \n   29          // if a go around had been commanded, clear it now.\n   ..\n   48      switch(cmd.id) {\n   49  \n   50:     case MAV_CMD_NAV_TAKEOFF:\n   51          crash_state.is_crashed = false;\n   52:         do_takeoff(cmd);\n   53          break;\n   54  \n   ..\n   89          break;\n   90  \n   91:     case MAV_CMD_NAV_VTOL_TAKEOFF:\n   92          crash_state.is_crashed = false;\n   93:         return quadplane.do_vtol_takeoff(cmd);\n   94  \n   95      case MAV_CMD_NAV_VTOL_LAND:\n   ..\n  239      switch(cmd.id) {\n  240  \n  241:     case MAV_CMD_NAV_TAKEOFF:\n  242:         return verify_takeoff();\n  243  \n  244      case MAV_CMD_NAV_LAND:\n  ...\n  284  #endif\n  285  \n  286:     case MAV_CMD_NAV_VTOL_TAKEOFF:\n  287:         return quadplane.verify_vtol_takeoff(cmd);\n  288  \n  289      case MAV_CMD_NAV_VTOL_LAND:\n  ...\n  347  }\n  348  \n  349: void Plane::do_takeoff(const AP_Mission::Mission_Command& cmd)\n  350  {\n  351      prev_WP_loc = current_loc;\n  352      set_next_WP(cmd.content.location);\n  353      // pitch in deg, airspeed  m/s, throttle %, track WP 1 or 0\n  354:     auto_state.takeoff_pitch_cd        = (int16_t)cmd.p1 * 100;\n  355:     if (auto_state.takeoff_pitch_cd <= 0) {\n  356          // if the mission doesn't specify a pitch use 4 degrees\n  357:         auto_state.takeoff_pitch_cd = 400;\n  358      }\n  359:     auto_state.takeoff_altitude_rel_cm = next_WP_loc.alt - home.alt;\n  360      next_WP_loc.lat = home.lat + 10;\n  361      next_WP_loc.lng = home.lng + 10;\n  362:     auto_state.takeoff_speed_time_ms = 0;\n  363:     auto_state.takeoff_complete = false;                            // set flag to use gps ground course during TO.  IMU will be doing yaw drift correction\n  364:     auto_state.height_below_takeoff_to_level_off_cm = 0;\n  365      // Flag also used to override \"on the ground\" throttle disable\n  366  \n  ...\n  368      steer_state.locked_course_err = 0;\n  369      steer_state.hold_course_cd = -1;\n  370:     auto_state.baro_takeoff_alt = barometer.get_altitude();\n  371  }\n  372  \n  ...\n  382  \n  383      // configure abort altitude and pitch\n  384:     // if NAV_LAND has an abort altitude then use it, else use last takeoff, else use 50m\n  385      if (cmd.p1 > 0) {\n  386:         auto_state.takeoff_altitude_rel_cm = (int16_t)cmd.p1 * 100;\n  387:     } else if (auto_state.takeoff_altitude_rel_cm <= 0) {\n  388:         auto_state.takeoff_altitude_rel_cm = 3000;\n  389      }\n  390  \n  391:     if (auto_state.takeoff_pitch_cd <= 0) {\n  392:         // If no takeoff command has ever been used, default to a conservative 10deg\n  393:         auto_state.takeoff_pitch_cd = 1000;\n  394      }\n  395  \n  ...\n  494  //  Verify Nav (Must) commands\n  495  /********************************************************************************/\n  496: bool Plane::verify_takeoff()\n  497  {\n  498      if (ahrs.yaw_initialised() && steer_state.hold_course_cd == -1) {\n  499          const float min_gps_speed = 5;\n  500:         if (auto_state.takeoff_speed_time_ms == 0 && \n  501              gps.status() >= AP_GPS::GPS_OK_FIX_3D && \n  502              gps.ground_speed() > min_gps_speed) {\n  503:             auto_state.takeoff_speed_time_ms = millis();\n  504          }\n  505:         if (auto_state.takeoff_speed_time_ms != 0 &&\n  506:             millis() - auto_state.takeoff_speed_time_ms >= 2000) {\n  507              // once we reach sufficient speed for good GPS course\n  508              // estimation we save our current GPS ground course\n  ...\n  510              // course. This keeps wings level until we are ready to\n  511              // rotate, and also allows us to cope with arbitrary\n  512:             // compass errors for auto takeoff\n  513:             float takeoff_course = wrap_PI(radians(gps.ground_course_cd()*0.01f)) - steer_state.locked_course_err;\n  514:             takeoff_course = wrap_PI(takeoff_course);\n  515:             steer_state.hold_course_cd = wrap_360_cd(degrees(takeoff_course)*100);\n  516              gcs_send_text_fmt(MAV_SEVERITY_INFO, \"Holding course %ld at %.1fm/s (%.1f)\",\n  517                                steer_state.hold_course_cd,\n  ...\n  528      }\n  529  \n  530:     // see if we have reached takeoff altitude\n  531      int32_t relative_alt_cm = adjusted_relative_altitude_cm();\n  532:     if (relative_alt_cm > auto_state.takeoff_altitude_rel_cm) {\n  533:         gcs_send_text_fmt(MAV_SEVERITY_INFO, \"Takeoff complete at %.2fm\",\n  534                            (double)(relative_alt_cm*0.01f));\n  535          steer_state.hold_course_cd = -1;\n  536:         auto_state.takeoff_complete = true;\n  537          next_WP_loc = prev_WP_loc = current_loc;\n  538  \n  ...\n  547  #endif\n  548  \n  549:         // don't cross-track on completion of takeoff, as otherwise we\n  550          // can end up doing too sharp a turn\n  551          auto_state.next_wp_no_crosstrack = true;\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/defines.h:\n   89      NOT_ENABLED = 0,     //The fence is not enabled\n   90      PWM_TOGGLED,         //Fence enabled/disabled by PWM signal\n   91:     AUTO_TOGGLED,        //Fence auto enabled/disabled at takeoff.\n   92      GCS_TOGGLED          //Fence enabled/disabled by the GCS via Mavlink\n   93  } GeofenceEnableReason;\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/is_flying.cpp:\n   74              switch (flight_stage)\n   75              {\n   76:             case AP_SpdHgtControl::FLIGHT_TAKEOFF:\n   77                  break;\n   78  \n   ..\n  117  \n  118          if ((control_mode == AUTO) &&\n  119:             ((flight_stage == AP_SpdHgtControl::FLIGHT_TAKEOFF) ||\n  120               (flight_stage == AP_SpdHgtControl::FLIGHT_LAND_FINAL)) ) {\n  121              is_flying_bool = false;\n  ...\n  204          switch (flight_stage)\n  205          {\n  206:         case AP_SpdHgtControl::FLIGHT_TAKEOFF:\n  207:             if (g.takeoff_throttle_min_accel > 0 &&\n  208                      !throttle_suppressed) {\n  209                  // if you have an acceleration holding back throttle, but you met the\n  ...\n  213                  crash_state.debounce_time_total_ms = CRASH_DETECTION_DELAY_MS;\n  214              }\n  215:             // TODO: handle auto missions without NAV_TAKEOFF mission cmd\n  216              break;\n  217  \n  ...\n  309              throttle_suppressed &&\n  310              flight_stage == AP_SpdHgtControl::FLIGHT_NORMAL &&\n  311:             mission.get_current_nav_cmd().id == MAV_CMD_NAV_TAKEOFF);\n  312  }\n  313  \n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/landing.cpp:\n   17      // adjust final landing parameters\n   18  \n   19:     // when aborting a landing, mimic the verify_takeoff with steering hold. Once\n   20      // the altitude has been reached, restart the landing sequence\n   21      if (flight_stage == AP_SpdHgtControl::FLIGHT_LAND_ABORT) {\n   ..\n   27  \n   28          // see if we have reached abort altitude\n   29:         if (adjusted_relative_altitude_cm() > auto_state.takeoff_altitude_rel_cm) {\n   30              next_WP_loc = current_loc;\n   31              mission.stop();\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/quadplane.cpp:\n 1135      switch (plane.mission.get_current_nav_cmd().id) {\n 1136      case MAV_CMD_NAV_VTOL_LAND:\n 1137:     case MAV_CMD_NAV_VTOL_TAKEOFF:\n 1138          return true;\n 1139      case MAV_CMD_NAV_LOITER_UNLIM:\n ....\n 1398  \n 1399  /*\n 1400:   run takeoff controller to climb vertically\n 1401   */\n 1402: void QuadPlane::takeoff_controller(void)\n 1403  {\n 1404      /*\n 1405:       for takeoff we need to use the loiter controller wpnav controller takes over the descent rate\n 1406        control\n 1407      */\n ....\n 1467  \n 1468      switch (plane.mission.get_current_nav_cmd().id) {\n 1469:     case MAV_CMD_NAV_VTOL_TAKEOFF:\n 1470:         takeoff_controller();\n 1471          break;\n 1472      case MAV_CMD_NAV_VTOL_LAND:\n ....\n 1510  \n 1511  /*\n 1512:   start a VTOL takeoff\n 1513   */\n 1514: bool QuadPlane::do_vtol_takeoff(const AP_Mission::Mission_Command& cmd)\n 1515  {\n 1516      if (!setup()) {\n ....\n 1577  \n 1578  /*\n 1579:   check if a VTOL takeoff has completed\n 1580   */\n 1581: bool QuadPlane::verify_vtol_takeoff(const AP_Mission::Mission_Command &cmd)\n 1582  {\n 1583      if (!available()) {\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/quadplane.h:\n   50      void vtol_position_controller(void);\n   51      void setup_target_position(void);\n   52:     void takeoff_controller(void);\n   53      void waypoint_controller(void);\n   54      \n   ..\n   71      bool handle_do_vtol_transition(enum MAV_VTOL_STATE state);\n   72  \n   73:     bool do_vtol_takeoff(const AP_Mission::Mission_Command& cmd);\n   74      bool do_vtol_land(const AP_Mission::Mission_Command& cmd);\n   75:     bool verify_vtol_takeoff(const AP_Mission::Mission_Command &cmd);\n   76      bool verify_vtol_land(void);\n   77      bool in_vtol_auto(void);\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/release-notes.txt:\n   58   - limit roll before calculating load factor\n   59   - simplify landing flare logic\n   60:  - smooth-out the end of takeoff pitch by reducing takeoff pitch min via TKOFF_PLIM_SEC\n   61   - added support for DO_VTOL_TRANSITION as a mission item\n   62   - fixed is_flying() for VTOL flight\n   ..\n  127   - limit roll before calculating load factor\n  128   - simplify landing flare logic\n  129:  - smooth-out the end of takeoff pitch by reducing takeoff pitch min via TKOFF_PLIM_SEC\n  130   - added support for DO_VTOL_TRANSITION as a mission item\n  131   - fixed is_flying() for VTOL flight\n  ...\n  155  compass enabled. If you fly 3.5.2 with MAG_ENABLE=0 or no compass\n  156  attached then there is a risk that the EKF2 attitude estimator may\n  157: become unstable before takeoff. This can cause the aircraft to crash.\n  158  \n  159  The other changes in this release are:\n  ...\n  622  please don't do that without careful thought. The arming checks are an\n  623  important part of ensuring the aircraft is ready to fly, and a common\n  624: cause of flight problems is to takeoff before ArduPilot is ready.\n  625  \n  626  Re-do Accelerometer Calibration\n  ...\n  676  information.\n  677  \n  678: Throttle control on takeoff\n  679  ---------------------------\n  680  \n  681: A number of users had problems with pitch control on auto-takeoff, and\n  682: with the aircraft exceeding its target speed during takeoff. The\n  683: auto-takeoff code has now been changed to use the normal TECS throttle\n  684  control which should solve this problem.\n  685  \n  ...\n  764   - avoid triggering a fence breach in final stage of landing\n  765   - rebuild glide slope if we are above it and climbing\n  766:  - use TECS to control throttle on takeoff\n  767   - added RUDDER_ONLY parameter to better support planes with no ailerons\n  768   - updated Piksi RTK GPS driver\n  ...\n  913    - I2C crash bugfix\n  914    - new autoland code from Michael Day\n  915:   - compass independent auto takeoff\n  916  \n  917  I'll go into each of these changes in a bit more detail.\n  ...\n  992  and will be a good basis for future work.\n  993  \n  994: Compass independent takeoff code\n  995  --------------------------------\n  996  \n  997: The auto-takeoff code has been changed to make it more independent of\n  998: compass settings, allowing for reliable takeoff down a runway with\n  999: poor compass offsets. The new takeoff code uses the gyroscope as the\n 1000: primary heading control for the first part of the takeoff, until the\n 1001  aircraft gains enough speed for a GPS heading to be reliable.\n 1002  \n ....\n 1012  \n 1013   - allow GCS to enable/disable PX4 safety switch\n 1014:  - make auto-takeoff independent of compass errors\n 1015   - report gyro unhealthy if calibration failed\n 1016   - added support for MAV_CMD_DO_LAND_START\n ....\n 1079  \n 1080    - added LAND_FLAP_PERCENT and TKOFF_FLAP_PCNT parameters, to control\n 1081:     the amount of flaps to use on takeoff and landing\n 1082  \n 1083    - the default WP_RADIUS has been raised from 30 to 90. Note that the\n ....\n 1127      to 1.5MBit are now supported to companion boards.\n 1128  \n 1129:   - added new takeoff code, including new parameters:\n 1130        TKOFF_TDRAG_ELEV, TKOFF_TDRAG_SPD1, TKOFF_ROTATE_SPD,\n 1131        TKOFF_THR_SLEW and TKOFF_THR_MAX. \n 1132:     This gives fine grained control of auto takeoff for tail dragger aircraft.\n 1133  \n 1134    - overhauled glide slope code to fix glide slope handling in many\n ....\n 1191    - improved reporting of magnetometer and barometer errors to the GCS\n 1192  \n 1193:   - added FBWA_TDRAG_CHAN parameter, for easier FBWA takeoffs of tail\n 1194:     draggers, and better testing of steering tuning for auto takeoff.\n 1195  \n 1196    - fixed failsafe pass through with no RC input (thanks to Klrill-ka)\n ....\n 1329   - fixed a glide slope calculation error when very close to waypoints\n 1330   - fixed a bug when swithing to another auto-throttle mode during auto\n 1331:    takeoff (thanks to Marco for finding this bug!)\n 1332   - added MIS_AUTORESET parameter (thanks to Andrew Chapman)\n 1333   - support compassmot calibration by supplying current measurments to the\n ....\n 1603  \n 1604  The second new parameter is FENCE_AUTOENABLE, which allows you to\n 1605: automatically enable a geofence on takeoff, and disable when doing an\n 1606  automatic landing. That is very useful for fully automated missions.\n 1607  \n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/system.cpp:\n  356      auto_state.initial_pitch_cd = ahrs.pitch_sensor;\n  357  \n  358:     // disable taildrag takeoff on mode change\n  359:     auto_state.fbwa_tdrag_takeoff_mode = false;\n  360  \n  361      // start with previous WP at current location\n\n/home/jakob/Github/ArduPilot-CG/ArduPlane/takeoff.cpp:\n    3  #include \"Plane.h\"\n    4  \n    5: /*   Check for automatic takeoff conditions being met using the following sequence:\n    6   *   1) Check for adequate GPS lock - if not return false\n    7   *   2) Check the gravity compensated longitudinal acceleration against the threshold and start the timer if true\n    .\n   12   *   NOTE : This function relies on the TECS 50Hz processing for its acceleration measure.\n   13   */\n   14: bool Plane::auto_takeoff_check(void)\n   15  {\n   16      // this is a more advanced check that relies on TECS\n   17      uint32_t now = millis();\n   18:     uint16_t wait_time_ms = MIN(uint16_t(g.takeoff_throttle_delay)*100,12700);\n   19  \n   20      // Reset states if process has been interrupted\n   21:     if (takeoff_state.last_check_ms && (now - takeoff_state.last_check_ms) > 200) {\n   22          gcs_send_text_fmt(MAV_SEVERITY_WARNING, \"Timer interrupted AUTO\");\n   23: 	    takeoff_state.launchTimerStarted = false;\n   24: 	    takeoff_state.last_tkoff_arm_time = 0;\n   25:         takeoff_state.last_check_ms = now;\n   26          return false;\n   27      }\n   28  \n   29:     takeoff_state.last_check_ms = now;\n   30  \n   31      // Check for bad GPS\n   32      if (gps.status() < AP_GPS::GPS_OK_FIX_3D) {\n   33:         // no auto takeoff without GPS lock\n   34          return false;\n   35      }\n   36  \n   37      // Check for launch acceleration or timer started. NOTE: relies on TECS 50Hz processing\n   38:     if (!takeoff_state.launchTimerStarted &&\n   39:         !is_zero(g.takeoff_throttle_min_accel) &&\n   40:         SpdHgt_Controller->get_VXdot() < g.takeoff_throttle_min_accel) {\n   41          goto no_launch;\n   42      }\n   43  \n   44      // we've reached the acceleration threshold, so start the timer\n   45:     if (!takeoff_state.launchTimerStarted) {\n   46:         takeoff_state.launchTimerStarted = true;\n   47:         takeoff_state.last_tkoff_arm_time = now;\n   48:         if (now - takeoff_state.last_report_ms > 2000) {\n   49              gcs_send_text_fmt(MAV_SEVERITY_INFO, \"Armed AUTO, xaccel = %.1f m/s/s, waiting %.1f sec\",\n   50                                (double)SpdHgt_Controller->get_VXdot(), (double)(wait_time_ms*0.001f));\n   51:             takeoff_state.last_report_ms = now;\n   52          }\n   53      }\n   54  \n   55      // Only perform velocity check if not timed out\n   56:     if ((now - takeoff_state.last_tkoff_arm_time) > wait_time_ms+100U) {\n   57:         if (now - takeoff_state.last_report_ms > 2000) {\n   58              gcs_send_text_fmt(MAV_SEVERITY_WARNING, \"Timeout AUTO\");\n   59:             takeoff_state.last_report_ms = now;\n   60          }\n   61          goto no_launch;\n   ..\n   71  \n   72      // Check ground speed and time delay\n   73:     if (((gps.ground_speed() > g.takeoff_throttle_min_speed || is_zero(g.takeoff_throttle_min_speed))) &&\n   74:         ((now - takeoff_state.last_tkoff_arm_time) >= wait_time_ms)) {\n   75          gcs_send_text_fmt(MAV_SEVERITY_INFO, \"Triggered AUTO. GPS speed = %.1f\", (double)gps.ground_speed());\n   76:         takeoff_state.launchTimerStarted = false;\n   77:         takeoff_state.last_tkoff_arm_time = 0;\n   78          steer_state.locked_course_err = 0; // use current heading without any error offset\n   79          return true;\n   ..\n   84  \n   85  no_launch:\n   86:     takeoff_state.launchTimerStarted = false;\n   87:     takeoff_state.last_tkoff_arm_time = 0;\n   88      return false;\n   89  }\n   90  \n   91  /*\n   92:   calculate desired bank angle during takeoff, setting nav_roll_cd\n   93   */\n   94: void Plane::takeoff_calc_roll(void)\n   95  {\n   96      if (steer_state.hold_course_cd == -1) {\n   ..\n  103      calc_nav_roll();\n  104  \n  105:     // during takeoff use the level flight roll limit to prevent large\n  106      // wing strike. Slowly allow for more roll as we get higher above\n  107:     // the takeoff altitude\n  108      float roll_limit = roll_limit_cd*0.01f;\n  109      float baro_alt = barometer.get_altitude();\n  ...\n  112      // at 15m allow for full roll\n  113      const float lim2 = 15;\n  114:     if (baro_alt < auto_state.baro_takeoff_alt+lim1) {\n  115          roll_limit = g.level_roll_limit;\n  116:     } else if (baro_alt < auto_state.baro_takeoff_alt+lim2) {\n  117:         float proportion = (baro_alt - (auto_state.baro_takeoff_alt+lim1)) / (lim2 - lim1);\n  118          roll_limit = (1-proportion) * g.level_roll_limit + proportion * roll_limit;\n  119      }\n  ...\n  123          \n  124  /*\n  125:   calculate desired pitch angle during takeoff, setting nav_pitch_cd\n  126   */\n  127: void Plane::takeoff_calc_pitch(void)\n  128  {\n  129:     if (auto_state.highest_airspeed < g.takeoff_rotate_speed) {\n  130          // we have not reached rotate speed, use a target pitch of 5\n  131          // degrees. This should be enough to get the tail off the\n  ...\n  137  \n  138      if (ahrs.airspeed_sensor_enabled()) {\n  139:         int16_t takeoff_pitch_min_cd = get_takeoff_pitch_min_cd();\n  140          calc_nav_pitch();\n  141:         if (nav_pitch_cd < takeoff_pitch_min_cd) {\n  142:             nav_pitch_cd = takeoff_pitch_min_cd;\n  143          }\n  144      } else {\n  145:         nav_pitch_cd = ((gps.ground_speed()*100) / (float)g.airspeed_cruise_cm) * auto_state.takeoff_pitch_cd;\n  146:         nav_pitch_cd = constrain_int32(nav_pitch_cd, 500, auto_state.takeoff_pitch_cd);\n  147      }\n  148  }\n  149  \n  150  /*\n  151:  * get the pitch min used during takeoff. This matches the mission pitch until near the end where it allows it to levels off\n  152   */\n  153: int16_t Plane::get_takeoff_pitch_min_cd(void)\n  154  {\n  155:     if (flight_stage != AP_SpdHgtControl::FLIGHT_TAKEOFF) {\n  156:         return auto_state.takeoff_pitch_cd;\n  157      }\n  158  \n  159      int32_t relative_alt_cm = adjusted_relative_altitude_cm();\n  160:     int32_t remaining_height_to_target_cm = (auto_state.takeoff_altitude_rel_cm - relative_alt_cm);\n  161  \n  162      // seconds to target alt method\n  163:     if (g.takeoff_pitch_limit_reduction_sec > 0) {\n  164          // if height-below-target has been initialized then use it to create and apply a scaler to the pitch_min\n  165:         if (auto_state.height_below_takeoff_to_level_off_cm != 0) {\n  166:             float scalar = remaining_height_to_target_cm / (float)auto_state.height_below_takeoff_to_level_off_cm;\n  167:             return auto_state.takeoff_pitch_cd * scalar;\n  168          }\n  169  \n  170:         // are we entering the region where we want to start leveling off before we reach takeoff alt?\n  171          if (auto_state.sink_rate < -0.1f) {\n  172              float sec_to_target = (remaining_height_to_target_cm * 0.01f) / (-auto_state.sink_rate);\n  173              if (sec_to_target > 0 &&\n  174                  relative_alt_cm >= 1000 &&\n  175:                 sec_to_target <= g.takeoff_pitch_limit_reduction_sec) {\n  176                  // make a note of that altitude to use it as a start height for scaling\n  177:                 gcs_send_text_fmt(MAV_SEVERITY_INFO, \"Takeoff level-off starting at %dm\", remaining_height_to_target_cm/100);\n  178:                 auto_state.height_below_takeoff_to_level_off_cm = remaining_height_to_target_cm;\n  179              }\n  180          }\n  181      }\n  182:     return auto_state.takeoff_pitch_cd;\n  183  }\n  184  \n  185  /*\n  186:   return a tail hold percentage during initial takeoff for a tail\n  187    dragger\n  188  \n  189:   This can be used either in auto-takeoff or in FBWA mode with\n  190    FBWA_TDRAG_CHAN enabled\n  191   */\n  192: int8_t Plane::takeoff_tail_hold(void)\n  193  {\n  194:     bool in_takeoff = ((control_mode == AUTO && !auto_state.takeoff_complete) ||\n  195:                        (control_mode == FLY_BY_WIRE_A && auto_state.fbwa_tdrag_takeoff_mode));\n  196:     if (!in_takeoff) {\n  197:         // not in takeoff\n  198          return 0;\n  199      }\n  200:     if (g.takeoff_tdrag_elevator == 0) {\n  201:         // no takeoff elevator set\n  202          goto return_zero;\n  203      }\n  204:     if (auto_state.highest_airspeed >= g.takeoff_tdrag_speed1) {\n  205          // we've passed speed1. We now raise the tail and aim for\n  206          // level pitch. Return 0 meaning no fixed elevator setting\n  ...\n  211          // initial pitch. This may mean the nose is coming up for an\n  212          // early liftoff, perhaps due to a bad setting of\n  213:         // g.takeoff_tdrag_speed1. Go to level flight to prevent a\n  214          // stall\n  215          goto return_zero;\n  216      }\n  217      // we are holding the tail down\n  218:     return g.takeoff_tdrag_elevator;\n  219  \n  220  return_zero:\n  221:     if (auto_state.fbwa_tdrag_takeoff_mode) {\n  222          gcs_send_text(MAV_SEVERITY_NOTICE, \"FBWA tdrag off\");\n  223:         auto_state.fbwa_tdrag_takeoff_mode = false;\n  224      }\n  225      return 0;\n\n/home/jakob/Github/ArduPilot-CG/Build.ArduCopter/libraries/GCS_MAVLink/include/mavlink/v2.0/ardupilotmega/ardupilotmega.h:\n   46  	MAV_CMD_NAV_RETURN_TO_LAUNCH=20, /* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n   47  	MAV_CMD_NAV_LAND=21, /* Land at location |Abort Alt| Empty| Empty| Desired yaw angle| Latitude| Longitude| Altitude|  */\n   48: 	MAV_CMD_NAV_TAKEOFF=22, /* Takeoff from ground / hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  */\n   49  	MAV_CMD_NAV_LAND_LOCAL=23, /* Land at local position (local frame only) |Landing target number (if available)| Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land| Landing descend rate [ms^-1]| Desired yaw angle [rad]| Y-axis position [m]| X-axis position [m]| Z-axis / ground level position [m]|  */\n   50: 	MAV_CMD_NAV_TAKEOFF_LOCAL=24, /* Takeoff from local position (local frame only) |Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]| Empty| Takeoff ascend rate [ms^-1]| Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these| Y-axis position [m]| X-axis position [m]| Z-axis position [m]|  */\n   51  	MAV_CMD_NAV_FOLLOW=25, /* Vehicle following, i.e. this waypoint represents the position of a moving vehicle |Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation| Ground speed of vehicle to be followed| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  */\n   52  	MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT=30, /* Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached. |Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. | Empty| Empty| Empty| Empty| Empty| Desired altitude in meters|  */\n   ..\n   58  	MAV_CMD_NAV_SPLINE_WAYPOINT=82, /* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   59  	MAV_CMD_NAV_ALTITUDE_WAIT=83, /* Mission command to wait for an altitude or downwards vertical speed. This is meant for high altitude balloon launches, allowing the aircraft to be idle until either an altitude is reached or a negative vertical speed is reached (indicating early balloon burst). The wiggle time is how often to wiggle the control surfaces to prevent them seizing up. |altitude (m)| descent speed (m/s)| Wiggle Time (s)| Empty| Empty| Empty| Empty|  */\n   60: 	MAV_CMD_NAV_VTOL_TAKEOFF=84, /* Takeoff from ground using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   61  	MAV_CMD_NAV_VTOL_LAND=85, /* Land using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   62  	MAV_CMD_NAV_GUIDED_ENABLE=92, /* hand control over to an external controller |On / Off (> 0.5f on)| Empty| Empty| Empty| Empty| Empty| Empty|  */\n   ..\n  143  	MAV_CMD_POWER_OFF_INITIATED=42000, /* A system wide power-off event has been initiated. |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  144  	MAV_CMD_SOLO_BTN_FLY_CLICK=42001, /* FLY button has been clicked. |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  145: 	MAV_CMD_SOLO_BTN_FLY_HOLD=42002, /* FLY button has been held for 1.5 seconds. |Takeoff altitude| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  146  	MAV_CMD_SOLO_BTN_PAUSE_CLICK=42003, /* PAUSE button has been clicked. |1 if Solo is in a shot mode, 0 otherwise| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  147  	MAV_CMD_DO_START_MAG_CAL=42424, /* Initiate a magnetometer calibration |uint8_t bitmask of magnetometers (0 means all)| Automatically retry on failure (0=no retry, 1=retry).| Save without user input (0=require input, 1=autosave).| Delay (seconds)| Autoreboot (0=user reboot, 1=autoreboot)| Empty| Empty|  */\n\n/home/jakob/Github/ArduPilot-CG/Build.ArduCopter/libraries/GCS_MAVLink/include/mavlink/v2.0/common/mavlink_msg_home_position.h:\n   11   float y; /*< Local Y position of this position in the local coordinate frame*/\n   12   float z; /*< Local Z position of this position in the local coordinate frame*/\n   13:  float q[4]; /*< World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground*/\n   14:  float approach_x; /*< Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   15:  float approach_y; /*< Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   16:  float approach_z; /*< Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   17  }) mavlink_home_position_t;\n   18  \n   ..\n   74   * @param y Local Y position of this position in the local coordinate frame\n   75   * @param z Local Z position of this position in the local coordinate frame\n   76:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n   77:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   78:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   79:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   80   * @return length of the message in bytes (excluding serial stream start sign)\n   81   */\n   ..\n  127   * @param y Local Y position of this position in the local coordinate frame\n  128   * @param z Local Z position of this position in the local coordinate frame\n  129:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  130:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  131:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  132:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  133   * @return length of the message in bytes (excluding serial stream start sign)\n  134   */\n  ...\n  206   * @param y Local Y position of this position in the local coordinate frame\n  207   * @param z Local Z position of this position in the local coordinate frame\n  208:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  209:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  210:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  211:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  212   */\n  213  #ifdef MAVLINK_USE_CONVENIENCE_FUNCTIONS\n  ...\n  366   * @brief Get field q from home_position message\n  367   *\n  368:  * @return World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  369   */\n  370  static inline uint16_t mavlink_msg_home_position_get_q(const mavlink_message_t* msg, float *q)\n  ...\n  376   * @brief Get field approach_x from home_position message\n  377   *\n  378:  * @return Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  379   */\n  380  static inline float mavlink_msg_home_position_get_approach_x(const mavlink_message_t* msg)\n  ...\n  386   * @brief Get field approach_y from home_position message\n  387   *\n  388:  * @return Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  389   */\n  390  static inline float mavlink_msg_home_position_get_approach_y(const mavlink_message_t* msg)\n  ...\n  396   * @brief Get field approach_z from home_position message\n  397   *\n  398:  * @return Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  399   */\n  400  static inline float mavlink_msg_home_position_get_approach_z(const mavlink_message_t* msg)\n\n/home/jakob/Github/ArduPilot-CG/Build.ArduCopter/libraries/GCS_MAVLink/include/mavlink/v2.0/common/mavlink_msg_set_home_position.h:\n   11   float y; /*< Local Y position of this position in the local coordinate frame*/\n   12   float z; /*< Local Z position of this position in the local coordinate frame*/\n   13:  float q[4]; /*< World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground*/\n   14:  float approach_x; /*< Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   15:  float approach_y; /*< Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   16:  float approach_z; /*< Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   17   uint8_t target_system; /*< System ID.*/\n   18  }) mavlink_set_home_position_t;\n   ..\n   78   * @param y Local Y position of this position in the local coordinate frame\n   79   * @param z Local Z position of this position in the local coordinate frame\n   80:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n   81:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   82:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   83:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   84   * @return length of the message in bytes (excluding serial stream start sign)\n   85   */\n   ..\n  134   * @param y Local Y position of this position in the local coordinate frame\n  135   * @param z Local Z position of this position in the local coordinate frame\n  136:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  137:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  138:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  139:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  140   * @return length of the message in bytes (excluding serial stream start sign)\n  141   */\n  ...\n  216   * @param y Local Y position of this position in the local coordinate frame\n  217   * @param z Local Z position of this position in the local coordinate frame\n  218:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  219:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  220:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  221:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  222   */\n  223  #ifdef MAVLINK_USE_CONVENIENCE_FUNCTIONS\n  ...\n  390   * @brief Get field q from set_home_position message\n  391   *\n  392:  * @return World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  393   */\n  394  static inline uint16_t mavlink_msg_set_home_position_get_q(const mavlink_message_t* msg, float *q)\n  ...\n  400   * @brief Get field approach_x from set_home_position message\n  401   *\n  402:  * @return Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  403   */\n  404  static inline float mavlink_msg_set_home_position_get_approach_x(const mavlink_message_t* msg)\n  ...\n  410   * @brief Get field approach_y from set_home_position message\n  411   *\n  412:  * @return Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  413   */\n  414  static inline float mavlink_msg_set_home_position_get_approach_y(const mavlink_message_t* msg)\n  ...\n  420   * @brief Get field approach_z from set_home_position message\n  421   *\n  422:  * @return Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  423   */\n  424  static inline float mavlink_msg_set_home_position_get_approach_z(const mavlink_message_t* msg)\n\n/home/jakob/Github/ArduPilot-CG/Tools/LogAnalyzer/tests/TestBrownout.py:\n   19  		if \"EV\" in logdata.channels:\n   20  			# step through the arm/disarm events in order, to see if they're symmetrical\n   21: 			# note: it seems landing detection isn't robust enough to rely upon here, so we'll only consider arm+disarm, not takeoff+land\n   22  			for line,ev in logdata.channels[\"EV\"][\"Id\"].listData:\n   23  				if ev == 10:\n\n/home/jakob/Github/ArduPilot-CG/Tools/LogAnalyzer/tests/TestGPSGlitch.py:\n   33  \n   34  		# define and check different thresholds for WARN level and FAIL level\n   35: 		# TODO: for plane, only check after first instance of throttle > 0, or after takeoff if we can reliably detect it\n   36  		minSatsWARN = 6\n   37  		minSatsFAIL = 5\n\n/home/jakob/Github/ArduPilot-CG/Tools/Xplane/X-Plane.pl:\n  339  	  $control_mode == 11 && do { 	$control_mode_alpha = \"RTL\"; last SWITCH; };\n  340  	  $control_mode == 12 && do { 	$control_mode_alpha = \"LOITER\"; last SWITCH; };\n  341: 	  $control_mode == 13 && do { 	$control_mode_alpha = \"TAKEOFF\"; last SWITCH; };\n  342  	  $control_mode == 14 && do { 	$control_mode_alpha = \"LAND\"; last SWITCH; };\n  343  	}\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/aircraft/Rascal/README.Rascal:\n  145  F. GENERAL FLYING\n  146  \n  147: (1) For takeoff use full throttle, heading into wind.  Airplane loaded\n  148  will become airborne at approximately 39 M.P.H.  Best climb speed is\n  149  an indicated 55 M.P.H.\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/apm_unit_tests/dev/arducopter_Loiter.py:\n    6          arducopter.calibrate_level(mavproxy, mav) and\n    7          arducopter.arm_motors(mavproxy, mav) and  \n    8:         arducopter.takeoff(mavproxy,mav, alt_min=30, takeoff_throttle=1510)  and\n    9          arducopter.hover(mavproxy,mav, hover_throttle=1300) and\n   10          arducopter.loiter(mavproxy, mav, holdtime=45, maxaltchange=20)): # 45 second loiter\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/apm_unit_tests/dev/arducopter_RTL.py:\n    6          arducopter.calibrate_level(mavproxy, mav) and\n    7          arducopter.arm_motors(mavproxy, mav) and  \n    8:         arducopter.takeoff(mavproxy,mav, alt_min=80, takeoff_throttle=1510) and\n    9          arducopter.hover(mavproxy,mav, hover_throttle=1300) and\n   10          arducopter.fly_RTL(mavproxy, mav, side=80, timeout=80)):\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/apm_unit_tests/dev/arducopter_climb_descend.py:\n    6          arducopter.calibrate_level(mavproxy, mav) and\n    7          arducopter.arm_motors(mavproxy, mav) and  \n    8:         arducopter.takeoff(mavproxy,mav, alt_min=30, takeoff_throttle=1510) and\n    9          arducopter.change_alt(mavproxy, mav, alt_min=60) and\n   10          arducopter.change_alt(mavproxy, mav, alt_min=20)\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/apm_unit_tests/dev/arducopter_failsafe.py:\n    6          arducopter.calibrate_level(mavproxy, mav) and\n    7          arducopter.arm_motors(mavproxy, mav) and  \n    8:         arducopter.takeoff(mavproxy,mav, alt_min=80, takeoff_throttle=1510)  and\n    9          arducopter.hover(mavproxy,mav, hover_throttle=1300) and\n   10          arducopter.fly_failsafe(mavproxy, mav, side=80, timeout=120)\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/apm_unit_tests/mustpass/arducopter_takeoff.py:\n    6          arducopter.calibrate_level(mavproxy, mav) and\n    7          arducopter.arm_motors(mavproxy, mav) and  \n    8:         arducopter.takeoff(mavproxy,mav, alt_min=30, takeoff_throttle=1510)):\n    9          return True\n   10      return False\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/arducopter.py:\n   55  \n   56  \n   57: def takeoff(mavproxy, mav, alt_min = 30, takeoff_throttle=1700):\n   58:     '''takeoff get to 30m altitude'''\n   59      mavproxy.send('switch 6\\n') # stabilize mode\n   60      wait_mode(mav, 'STABILIZE')\n   61:     mavproxy.send('rc 3 %u\\n' % takeoff_throttle)\n   62      m = mav.recv_match(type='VFR_HUD', blocking=True)\n   63      if (m.alt < alt_min):\n   64          wait_altitude(mav, alt_min, (alt_min + 5))\n   65      hover(mavproxy, mav)\n   66:     print(\"TAKEOFF COMPLETE\")\n   67      return True\n   68  \n   ..\n  998              failed = True\n  999  \n 1000:         print(\"# Takeoff\")\n 1001:         if not takeoff(mavproxy, mav, 10):\n 1002:             failed_test_msg = \"takeoff failed\"\n 1003              print(failed_test_msg)\n 1004              failed = True\n ....\n 1036              failed = True\n 1037  \n 1038:         # Takeoff\n 1039:         print(\"# Takeoff\")\n 1040:         if not takeoff(mavproxy, mav, 10):\n 1041:             failed_test_msg = \"takeoff failed\"\n 1042              print(failed_test_msg)\n 1043              failed = True\n ....\n 1049              failed = True\n 1050  \n 1051:         # Takeoff\n 1052:         print(\"# Takeoff\")\n 1053:         if not takeoff(mavproxy, mav, 10):\n 1054:             failed_test_msg = \"takeoff failed\"\n 1055              print(failed_test_msg)\n 1056              failed = True\n ....\n 1072              failed = True\n 1073  \n 1074:         # Takeoff\n 1075:         print(\"# Takeoff\")\n 1076:         if not takeoff(mavproxy, mav, 10):\n 1077:             failed_test_msg = \"takeoff failed\"\n 1078              print(failed_test_msg)\n 1079              failed = True\n ....\n 1088              failed = True\n 1089  \n 1090:         # Takeoff\n 1091:         print(\"# Takeoff\")\n 1092:         if not takeoff(mavproxy, mav, 10):\n 1093:             failed_test_msg = \"takeoff failed\"\n 1094              print(failed_test_msg)\n 1095              failed = True\n ....\n 1117  \n 1118          # take-off ahead of next test\n 1119:         print(\"# Takeoff\")\n 1120:         if not takeoff(mavproxy, mav, 10):\n 1121:             failed_test_msg = \"takeoff failed\"\n 1122              print(failed_test_msg)\n 1123              failed = True\n ....\n 1159              failed = True\n 1160  \n 1161:         # Takeoff\n 1162:         print(\"# Takeoff\")\n 1163:         if not takeoff(mavproxy, mav, 10):\n 1164:             failed_test_msg = \"takeoff failed\"\n 1165              print(failed_test_msg)\n 1166              failed = True\n ....\n 1182              failed = True\n 1183  \n 1184:         # Takeoff\n 1185:         print(\"# Takeoff\")\n 1186:         if not takeoff(mavproxy, mav, 10):\n 1187:             failed_test_msg = \"takeoff failed\"\n 1188              print(failed_test_msg)\n 1189              failed = True\n ....\n 1203              failed = True\n 1204  \n 1205:         # Takeoff\n 1206:         print(\"# Takeoff\")\n 1207:         if not takeoff(mavproxy, mav, 10):\n 1208:             failed_test_msg = \"takeoff failed\"\n 1209              print(failed_test_msg)\n 1210              failed = True\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/arduplane.py:\n   15  homeloc = None\n   16  \n   17: def takeoff(mavproxy, mav):\n   18:     '''takeoff get to 30m altitude'''\n   19  \n   20      # wait for EKF to settle\n   ..\n   53      mavproxy.send('rc 2 1500\\n')\n   54  \n   55:     print(\"TAKEOFF COMPLETE\")\n   56      return True\n   57  \n   ..\n  509          homeloc = mav.location()\n  510          print(\"Home location: %s\" % homeloc)\n  511:         if not takeoff(mavproxy, mav):\n  512:             print(\"Failed takeoff\")\n  513              failed = True\n  514          if not fly_left_circuit(mavproxy, mav):\n\n/home/jakob/Github/ArduPilot-CG/Tools/autotest/jsb_sim/runsim.py:\n  312  \n  313          # only simulate wind above 5 meters, to prevent crashes while\n  314:         # waiting for takeoff\n  315          if tnow - last_wind_update > 0.1:\n  316              update_wind(wind)\n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_AttitudeControl/AC_PosControl.cpp:\n  224  }\n  225  \n  226: /// add_takeoff_climb_rate - adjusts alt target up or down using a climb rate in cm/s\n  227  ///     should be called continuously (with dt set to be the expected time between calls)\n  228  ///     almost no checks are performed on the input\n  229: void AC_PosControl::add_takeoff_climb_rate(float climb_rate_cms, float dt)\n  230  {\n  231      _pos_target.z += climb_rate_cms * dt;\n  ...\n  296  }\n  297  \n  298: /// init_takeoff - initialises target altitude if we are taking off\n  299: void AC_PosControl::init_takeoff()\n  300  {\n  301      const Vector3f& curr_pos = _inav.get_position();\n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_AttitudeControl/AC_PosControl.h:\n  131      void set_alt_target_from_climb_rate_ff(float climb_rate_cms, float dt, bool force_descend);\n  132  \n  133:     /// add_takeoff_climb_rate - adjusts alt target up or down using a climb rate in cm/s\n  134      ///     should be called continuously (with dt set to be the expected time between calls)\n  135      ///     almost no checks are performed on the input\n  136:     void add_takeoff_climb_rate(float climb_rate_cms, float dt);\n  137  \n  138      /// set_alt_target_to_current_alt - set altitude target to current altitude\n  ...\n  155      void get_stopping_point_z(Vector3f& stopping_point) const;\n  156  \n  157:     /// init_takeoff - initialises target altitude if we are taking off\n  158:     void init_takeoff();\n  159  \n  160      // is_active - returns true if the z-axis position controller has been run very recently\n  ...\n  319      //          set_alt_target\n  320      //          set_target_to_stopping_point_z\n  321:     //          init_takeoff\n  322      void pos_to_rate_z();\n  323  \n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_Fence/AC_Fence.cpp:\n   99  }\n  100  \n  101: /// pre_arm_check - returns true if all pre-takeoff checks have completed successfully\n  102  bool AC_Fence::pre_arm_check() const\n  103  {\n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_Fence/AC_Fence.h:\n   47      uint8_t get_enabled_fences() const;\n   48  \n   49:     /// pre_arm_check - returns true if all pre-takeoff checks have completed successfully\n   50      bool pre_arm_check() const;\n   51  \n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_WPNav/AC_WPNav.cpp:\n  537  \n  538  /// shift_wp_origin_to_current_pos - shifts the origin and destination so the origin starts at the current position\n  539: ///     used to reset the position just before takeoff\n  540  ///     relies on set_wp_destination or set_wp_origin_and_destination having been called first\n  541  void AC_WPNav::shift_wp_origin_to_current_pos()\n\n/home/jakob/Github/ArduPilot-CG/libraries/AC_WPNav/AC_WPNav.h:\n  162  \n  163      /// shift_wp_origin_to_current_pos - shifts the origin and destination so the origin starts at the current position\n  164:     ///     used to reset the position just before takeoff\n  165      ///     relies on set_wp_destination or set_wp_origin_and_destination having been called first\n  166      void shift_wp_origin_to_current_pos();\n\n/home/jakob/Github/ArduPilot-CG/libraries/APM_Control/TuningGuide.txt:\n   55  ------------------\n   56  \n   57: 1) Takeoff in manual and adjust the trims and throttle to a cruise\n   58     position so that the plane flies straight and level at a speed that\n   59     you are comfortable with. This will normally be somewhere between\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_AHRS/AP_AHRS_DCM.cpp:\n  841          // assume we are in a launch acceleration, and reduce the\n  842          // rp gain by 50% to reduce the impact of GPS lag on\n  843:         // takeoff attitude when using a catapult\n  844          _omega_P *= 0.5f;\n  845      }\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_AHRS/AP_AHRS_NavEKF.cpp:\n 1251  }\n 1252  \n 1253: void AP_AHRS_NavEKF::setTakeoffExpected(bool val)\n 1254  {\n 1255      switch (ekf_type()) {\n 1256  #if AP_AHRS_WITH_EKF1\n 1257          case EKF_TYPE1:\n 1258:             EKF1.setTakeoffExpected(val);\n 1259              break;\n 1260  #endif\n 1261          case EKF_TYPE2:\n 1262:             EKF2.setTakeoffExpected(val);\n 1263              break;\n 1264  #if CONFIG_HAL_BOARD == HAL_BOARD_SITL\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_AHRS/AP_AHRS_NavEKF.h:\n  215      bool get_mag_field_correction(Vector3f &ret) const;\n  216  \n  217:     void setTakeoffExpected(bool val);\n  218      void setTouchdownExpected(bool val);\n  219  \n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_Mission/AP_Mission.cpp:\n  114  }\n  115  \n  116: /// check mission starts with a takeoff command\n  117: bool AP_Mission::starts_with_takeoff_cmd()\n  118  {\n  119      Mission_Command cmd = {};\n  ...\n  132      }\n  133  \n  134:     if (cmd.id != MAV_CMD_NAV_TAKEOFF) {\n  135          return false;\n  136      }\n  ...\n  581          break;\n  582  \n  583:     case MAV_CMD_NAV_TAKEOFF:                           // MAV ID: 22\n  584          copy_location = true;                           // only altitude is used\n  585          cmd.p1 = packet.param1;                         // minimum pitch (plane only)\n  ...\n  747          break;\n  748  \n  749:     case MAV_CMD_NAV_VTOL_TAKEOFF:\n  750          copy_location = true;\n  751          break;\n  ...\n 1014          break;\n 1015  \n 1016:     case MAV_CMD_NAV_TAKEOFF:                           // MAV ID: 22\n 1017          copy_location = true;                           // only altitude is used\n 1018          packet.param1 = cmd.p1;                         // minimum pitch (plane only)\n ....\n 1182          break;\n 1183  \n 1184:     case MAV_CMD_NAV_VTOL_TAKEOFF:\n 1185          copy_location = true;\n 1186          break;\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_Mission/AP_Mission.h:\n  306      void start_or_resume();\n  307  \n  308:     /// check mission starts with a takeoff command\n  309:     bool starts_with_takeoff_cmd();\n  310  \n  311      /// reset - reset mission to the first command\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_Mission/examples/AP_Mission_test/AP_Mission_test.cpp:\n  179  \n  180      // Command #1 : take-off to 10m\n  181:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  182      cmd.content.location.options = 0;\n  183      cmd.p1 = 0;\n  ...\n  315  \n  316      // Command #2 : take-off to 10m\n  317:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  318      cmd.content.location.options = 0;\n  319      cmd.p1 = 0;\n  ...\n  359  \n  360      // Command #1 : take-off to 10m\n  361:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  362      cmd.content.location.options = 0;\n  363      cmd.p1 = 0;\n  ...\n  445  \n  446      // Command #3 : take-off to 10m\n  447:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  448      cmd.content.location.options = 0;\n  449      cmd.p1 = 0;\n  ...\n  500  \n  501      // Command #1 : take-off to 10m\n  502:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  503      cmd.content.location.options = 0;\n  504      cmd.p1 = 0;\n  ...\n  576  \n  577      // Command #1 : take-off to 10m\n  578:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  579      cmd.content.location.options = 0;\n  580      cmd.p1 = 0;\n  ...\n  697  \n  698      // Command #1 : take-off to 10m\n  699:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  700      cmd.content.location.options = 0;\n  701      cmd.p1 = 0;\n  ...\n  803  \n  804      // Command #1 : take-off to 10m\n  805:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  806      cmd.content.location.options = 0;\n  807      cmd.p1 = 0;\n  ...\n  908  \n  909      // Command #1 : take-off to 10m\n  910:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n  911      cmd.content.location.options = 0;\n  912      cmd.p1 = 0;\n  ...\n 1045  \n 1046      // Command #1 : take-off to 10m\n 1047:     cmd.id = MAV_CMD_NAV_TAKEOFF;\n 1048      cmd.content.location.options = 0;\n 1049      cmd.p1 = 0;\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF/AP_NavEKF.cpp:\n  743  }\n  744  \n  745: // called by vehicle code to specify that a takeoff is happening\n  746  // causes the EKF to compensate for expected barometer errors due to ground effect\n  747: void NavEKF::setTakeoffExpected(bool val)\n  748  {\n  749      if (core) {\n  750:         core->setTakeoffExpected(val);\n  751      }\n  752  }\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF/AP_NavEKF.h:\n  183      void getFlowDebug(float &varFlow, float &gndOffset, float &flowInnovX, float &flowInnovY, float &auxInnov, float &HAGL, float &rngInnov, float &range, float &gndOffsetErr) const;\n  184  \n  185:     // called by vehicle code to specify that a takeoff is happening\n  186      // causes the EKF to compensate for expected barometer errors due to ground effect\n  187:     void setTakeoffExpected(bool val);\n  188  \n  189      // called by vehicle code to specify that a touchdown is expected to happen\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF/AP_NavEKF_core.cpp:\n  642          // Check if the magnetic field states should be reset\n  643          if (vehicleArmed && !firstMagYawInit && (state.position.z  - posDownAtArming) < -1.5f && !assume_zero_sideslip() && deltaRot < 0.1745f) {\n  644:             // Do the first in-air yaw and earth mag field initialisation when the vehicle has gained 1.5m of altitude after arming if it is a non-fly forward vehicle (vertical takeoff)\n  645              // This is done to prevent magnetic field distoration from steel roofs and adjacent structures causing bad earth field and initial yaw values\n  646              // Do not do this alignment if the vehicle is rotating rapidly as timing erors in the mag data will cause significant errors\n  ...\n  650              firstMagYawInit = true;\n  651          } else if (vehicleArmed && !secondMagYawInit && (state.position.z - posDownAtArming) < -5.0f && !assume_zero_sideslip() && deltaRot < 0.1745f) {\n  652:             // Do the second and final yaw and earth mag field initialisation when the vehicle has gained 5.0m of altitude after arming if it is a non-fly forward vehicle (vertical takeoff)\n  653              // This second and final correction is needed for flight from large metal structures where the magnetic field distortion can extend up to 5m\n  654              // Do not do this alignment if the vehicle is rotating rapidly as timing erors in the mag data will cause significant errors\n  ...\n  697      bool tiltOK = (Tnb_flow.c.z > DCM33FlowMin);\n  698      // Constrain measurements to zero if we are using optical flow and are on the ground\n  699:     if (frontend._fusionModeGPS == 3 && !takeOffDetected && vehicleArmed) {\n  700          flowRadXYcomp[0]    = 0.0f;\n  701          flowRadXYcomp[1]    = 0.0f;\n  ...\n  988      }\n  989      // scale accel bias noise when disarmed to allow for faster bias estimation\n  990:     // inhibit bias estimation during takeoff with ground effect to prevent bad bias learning\n  991:     if (expectGndEffectTakeoff) {\n  992          processNoise[13] = 0.0f;\n  993      } else if (!vehicleArmed) {\n  ...\n 1676  \n 1677          // reduce weighting (increase observation noise) on baro if we are likely to be in ground effect\n 1678:         if ((getTakeoffExpected() || getTouchdownExpected()) && vehicleArmed) {\n 1679              R_OBS[5] *= gndEffectBaroScaler;\n 1680          }\n ....\n 1909                  // Don't update Z accel bias if off-level by greater than 60 degrees to avoid scale factor error effects\n 1910                  // Don't update if we are taking off with ground effect\n 1911:                 if ((obsIndex == 5 || obsIndex == 2) && prevTnb.c.z > 0.5f && !getTakeoffExpected()) {\n 1912                      Kfusion[13] = constrain_float(P[13][stateIndex]*SK,-1.0f,0.0f);\n 1913                  } else {\n ....\n 4036                  // filter offset to reduce effect of baro noise and other transient errors on estimate\n 4037                  baroHgtOffset = 0.1f * (_baro.get_altitude() + state.position.z) + 0.9f * baroHgtOffset;\n 4038:             } else if (vehicleArmed && takeOffDetected) {\n 4039                  // use baro measurement and correct for baro offset - failsafe use only as baro will drift\n 4040                  hgtMea = MAX(_baro.get_altitude() - baroHgtOffset, rngOnGnd);\n ....\n 4057          }\n 4058  \n 4059:         // filtered baro data used to provide a reference for takeoff\n 4060          // it is is reset to last height measurement on disarming in performArmingChecks()\n 4061:         if (!getTakeoffExpected()) {\n 4062              const float gndHgtFiltTC = 0.5f;\n 4063              const float dtBaro = msecHgtAvg*1.0e-3f;\n 4064              float alpha = constrain_float(dtBaro / (dtBaro+gndHgtFiltTC),0.0f,1.0f);\n 4065:             meaHgtAtTakeOff += (hgtMea-meaHgtAtTakeOff)*alpha;\n 4066:         } else if (vehicleArmed && getTakeoffExpected()) {\n 4067:             // If we are in takeoff mode, the height measurement is limited to be no less than the measurement at start of takeoff\n 4068              // This prevents negative baro disturbances due to copter downwash corrupting the EKF altitude during initial ascent\n 4069:             hgtMea = MAX(hgtMea, meaHgtAtTakeOff);\n 4070          }\n 4071  \n ....\n 4151      flowGyroBias.x = 0.99f * flowGyroBias.x + 0.01f * constrain_float((rawGyroRates.x - omegaAcrossFlowTime.x),-0.1f,0.1f);\n 4152      flowGyroBias.y = 0.99f * flowGyroBias.y + 0.01f * constrain_float((rawGyroRates.y - omegaAcrossFlowTime.y),-0.1f,0.1f);\n 4153:     // check for takeoff if relying on optical flow and zero measurements until takeoff detected\n 4154      // if we haven't taken off - constrain position and velocity states\n 4155      if (frontend._fusionModeGPS == 3) {\n 4156:         detectOptFlowTakeoff();\n 4157      }\n 4158      // recall vehicle states at mid sample time for flow observations allowing for delays\n ....\n 4258  \n 4259  // this function is used to do a forced alignment of the yaw angle to align with the horizontal velocity\n 4260: // vector from GPS. It is used to align the yaw angle after launch or takeoff.\n 4261  void NavEKF_core::alignYawGPS()\n 4262  {\n ....\n 4491      flowXfailed = false;\n 4492      validOrigin = false;\n 4493:     takeoffExpectedSet_ms = 0;\n 4494:     expectGndEffectTakeoff = false;\n 4495      touchdownExpectedSet_ms = 0;\n 4496      expectGndEffectTouchdown = false;\n ....\n 4676      status.flags.pred_horiz_pos_rel = (optFlowNavPossible || gpsNavPossible) && filterHealthy && gyroHealthy; // we should be able to estimate a relative position when we enter flight mode\n 4677      status.flags.pred_horiz_pos_abs = gpsNavPossible && filterHealthy && gyroHealthy; // we should be able to estimate an absolute position when we enter flight mode\n 4678:     status.flags.takeoff_detected = takeOffDetected; // takeoff for optical flow navigation has been detected\n 4679:     status.flags.takeoff = expectGndEffectTakeoff; // The EKF has been told to expect takeoff and is in a ground effect mitigation mode\n 4680      status.flags.touchdown = expectGndEffectTouchdown; // The EKF has been told to detect touchdown and is in a ground effect mitigation mode\n 4681      status.flags.using_gps = (imuSampleTime_ms - lastPosPassTime) < 4000;\n ....\n 4738          // zero stored velocities used to do dead-reckoning\n 4739          heldVelNE.zero();\n 4740:         // reset the flag that indicates takeoff for use by optical flow navigation\n 4741:         takeOffDetected = false;\n 4742          // set various  usage modes based on the condition at arming. These are then held until the vehicle is disarmed.\n 4743          if (!vehicleArmed) {\n ....\n 4749              lastKnownPositionNE.x = state.position.x;\n 4750              lastKnownPositionNE.y = state.position.y;\n 4751:             // initialise filtered altitude used to provide a takeoff reference to current baro on disarm\n 4752              // this reduces the time required for the filter to settle before the estimate can be used\n 4753:             meaHgtAtTakeOff = hgtMea;\n 4754              // reset the vertical position state to faster recover from baro errors experienced during touchdown\n 4755              state.position.z = -hgtMea;\n ....\n 4786              // store the range finder measurement which will be used as a reference to detect when we have taken off\n 4787              rangeAtArming = rngMea;\n 4788:             // set the time at which we arm to assist with takeoff detection\n 4789              timeAtArming_ms =  imuSampleTime_ms;\n 4790          } else { // arming when GPS usage is allowed\n ....\n 4862  }\n 4863  \n 4864: // determine if a takeoff is expected so that we can compensate for expected barometer errors due to ground effect\n 4865: bool NavEKF_core::getTakeoffExpected()\n 4866  {\n 4867:     if (expectGndEffectTakeoff && imuSampleTime_ms - takeoffExpectedSet_ms > gndEffectTimeout_ms) {\n 4868:         expectGndEffectTakeoff = false;\n 4869      }\n 4870  \n 4871:     return expectGndEffectTakeoff;\n 4872  }\n 4873  \n 4874: // called by vehicle code to specify that a takeoff is happening\n 4875  // causes the EKF to compensate for expected barometer errors due to ground effect\n 4876: void NavEKF_core::setTakeoffExpected(bool val)\n 4877  {\n 4878:     takeoffExpectedSet_ms = imuSampleTime_ms;\n 4879:     expectGndEffectTakeoff = val;\n 4880  }\n 4881  \n ....\n 5172  }\n 5173  \n 5174: // Detect takeoff for optical flow navigation\n 5175: void NavEKF_core::detectOptFlowTakeoff(void)\n 5176  {\n 5177:     if (vehicleArmed && !takeOffDetected && (imuSampleTime_ms - timeAtArming_ms) > 1000) {\n 5178:         takeOffDetected = (takeOffDetected || (rngMea > (rangeAtArming + 0.1f)));\n 5179      }\n 5180  }\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF/AP_NavEKF_core.h:\n  226      void getFlowDebug(float &varFlow, float &gndOffset, float &flowInnovX, float &flowInnovY, float &auxInnov, float &HAGL, float &rngInnov, float &range, float &gndOffsetErr) const;\n  227  \n  228:     // called by vehicle code to specify that a takeoff is happening\n  229      // causes the EKF to compensate for expected barometer errors due to ground effect\n  230:     void setTakeoffExpected(bool val);\n  231  \n  232      // called by vehicle code to specify that a touchdown is expected to happen\n  ...\n  475      void setOrigin();\n  476  \n  477:     // determine if a takeoff is expected so that we can compensate for expected barometer errors due to ground effect\n  478:     bool getTakeoffExpected();\n  479  \n  480      // determine if a touchdown is expected so that we can compensate for expected barometer errors due to ground effect\n  ...\n  489  \n  490      // check if the vehicle has taken off during optical flow navigation by looking at inertial and range finder data\n  491:     void detectOptFlowTakeoff(void);\n  492  \n  493      // align the NE earth magnetic field states with the published declination\n  ...\n  661      bool inhibitMagStates;          // true when magnetic field states and covariances are to remain constant\n  662      bool firstArmComplete;          // true when first transition out of static mode has been performed after start up\n  663:     bool firstMagYawInit;           // true when the first post takeoff initialisation of earth field and yaw angle has been performed\n  664:     bool secondMagYawInit;          // true when the second post takeoff initialisation of earth field and yaw angle has been performed\n  665      bool flowTimeout;               // true when optical flow measurements have time out\n  666      bool gpsNotAvailable;           // bool true when valid GPS data is not available\n  ...\n  768  \n  769      // Movement detector\n  770:     bool takeOffDetected;           // true when takeoff for optical flow navigation has been detected\n  771      float rangeAtArming;            // range finder measurement when armed\n  772      uint32_t timeAtArming_ms;       // time in msec that the vehicle armed\n  ...\n  777  \n  778      // baro ground effect\n  779:     bool expectGndEffectTakeoff;      // external state from ArduCopter - takeoff expected\n  780:     uint32_t takeoffExpectedSet_ms;   // system time at which expectGndEffectTakeoff was set\n  781      bool expectGndEffectTouchdown;    // external state from ArduCopter - touchdown expected\n  782      uint32_t touchdownExpectedSet_ms; // system time at which expectGndEffectTouchdown was set\n  783:     float meaHgtAtTakeOff;            // height measured at commencement of takeoff\n  784  \n  785      // monitoring IMU quality\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF/AP_Nav_Common.h:\n   28          uint16_t terrain_alt        : 1; // 6 - true if the terrain height estimate is valid\n   29          uint16_t const_pos_mode     : 1; // 7 - true if we are in const position mode\n   30:         uint16_t pred_horiz_pos_rel : 1; // 8 - true if filter expects it can produce a good relative horizontal position estimate - used before takeoff\n   31:         uint16_t pred_horiz_pos_abs : 1; // 9 - true if filter expects it can produce a good absolute horizontal position estimate - used before takeoff\n   32:         uint16_t takeoff_detected   : 1; // 10 - true if optical flow takeoff has been detected\n   33:         uint16_t takeoff            : 1; // 11 - true if filter is compensating for baro errors during takeoff\n   34          uint16_t touchdown          : 1; // 12 - true if filter is compensating for baro errors during touchdown\n   35          uint16_t using_gps          : 1; // 13 - true if we are using GPS position\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2.cpp:\n  985  }\n  986  \n  987: // called by vehicle code to specify that a takeoff is happening\n  988  // causes the EKF to compensate for expected barometer errors due to ground effect\n  989: void NavEKF2::setTakeoffExpected(bool val)\n  990  {\n  991      if (core) {\n  992          for (uint8_t i=0; i<num_cores; i++) {\n  993:             core[i].setTakeoffExpected(val);\n  994          }\n  995      }\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2.h:\n  195      void getFlowDebug(int8_t instance, float &varFlow, float &gndOffset, float &flowInnovX, float &flowInnovY, float &auxInnov, float &HAGL, float &rngInnov, float &range, float &gndOffsetErr);\n  196  \n  197:     // called by vehicle code to specify that a takeoff is happening\n  198      // causes the EKF to compensate for expected barometer errors due to ground effect\n  199:     void setTakeoffExpected(bool val);\n  200  \n  201      // called by vehicle code to specify that a touchdown is expected to happen\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp:\n  123  \n  124      // If on ground we clear the flag indicating that the magnetic field in-flight initialisation has been completed\n  125:     // because we want it re-done for each takeoff\n  126      if (onGround) {\n  127          finalInflightYawInit = false;\n  ...\n  169              lastKnownPositionNE.x = stateStruct.position.x;\n  170              lastKnownPositionNE.y = stateStruct.position.y;\n  171:             // initialise filtered altitude used to provide a takeoff reference to current baro on disarm\n  172              // this reduces the time required for the baro noise filter to settle before the filtered baro data can be used\n  173:             meaHgtAtTakeOff = baroDataDelayed.hgt;\n  174              // reset the vertical position state to faster recover from baro errors experienced during touchdown\n  175:             stateStruct.position.z = -meaHgtAtTakeOff;\n  176          } else if (frontend->_fusionModeGPS == 3) {\n  177              // We have commenced aiding, but GPS usage has been prohibited so use optical flow only\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp:\n   49          // check that we have reached a height where ground magnetic interference effects are insignificant\n   50          // and can perform a final reset of the yaw and field states\n   51:         finalResetRequest = (stateStruct.position.z  - posDownAtTakeoff) < -5.0f;\n   52  \n   53          // check for increasing height\n   ..\n  137  \n  138  // this function is used to do a forced re-alignment of the yaw angle to align with the horizontal velocity\n  139: // vector from GPS. It is used to align the yaw angle after launch or takeoff.\n  140  void NavEKF2_core::realignYawGPS()\n  141  {\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp:\n   73              // write data to buffer with time stamp to be fused when the fusion time horizon catches up with it\n   74              storedRange.push(rangeDataNew);\n   75:         } else if (!takeOffDetected) {\n   76:             // before takeoff we assume on-ground range value if there is no data\n   77              rangeDataNew.time_ms = imuSampleTime_ms;\n   78              rangeDataNew.rng = rngOnGnd;\n   ..\n  104          delTimeOF = 0.0f;\n  105      }\n  106:     // check for takeoff if relying on optical flow and zero measurements until takeoff detected\n  107      // if we haven't taken off - constrain position and velocity states\n  108      if (frontend->_fusionModeGPS == 3) {\n  109:         detectOptFlowTakeoff();\n  110      }\n  111      // calculate rotation matrices at mid sample time for flow observations\n  ...\n  511          baroDataNew.hgt = frontend->_baro.get_altitude();\n  512  \n  513:         // If we are in takeoff mode, the height measurement is limited to be no less than the measurement at start of takeoff\n  514          // This prevents negative baro disturbances due to copter downwash corrupting the EKF altitude during initial ascent\n  515:         if (isAiding && getTakeoffExpected()) {\n  516:             baroDataNew.hgt = MAX(baroDataNew.hgt, meaHgtAtTakeOff);\n  517          }\n  518  \n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_OptFlowFusion.cpp:\n   49      bool tiltOK = (Tnb_flow.c.z > frontend->DCM33FlowMin);\n   50      // Constrain measurements to zero if we are using optical flow and are on the ground\n   51:     if (frontend->_fusionModeGPS == 3 && !takeOffDetected && isAiding) {\n   52          ofDataDelayed.flowRadXYcomp.zero();\n   53          ofDataDelayed.flowRadXY.zero();\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp:\n  452  Return a filter function status that indicates:\n  453      Which outputs are valid\n  454:     If the filter has detected takeoff\n  455      If the filter has activated the mode that mitigates against ground effect static pressure errors\n  456      If GPS data is being used\n  ...\n  483      status.flags.pred_horiz_pos_rel = ((optFlowNavPossible || gpsNavPossible) && filterHealthy) || status.flags.horiz_pos_rel; // we should be able to estimate a relative position when we enter flight mode\n  484      status.flags.pred_horiz_pos_abs = (gpsNavPossible && filterHealthy) || status.flags.horiz_pos_abs; // we should be able to estimate an absolute position when we enter flight mode\n  485:     status.flags.takeoff_detected = takeOffDetected; // takeoff for optical flow navigation has been detected\n  486:     status.flags.takeoff = expectGndEffectTakeoff; // The EKF has been told to expect takeoff and is in a ground effect mitigation mode\n  487      status.flags.touchdown = expectGndEffectTouchdown; // The EKF has been told to detect touchdown and is in a ground effect mitigation mode\n  488      status.flags.using_gps = ((imuSampleTime_ms - lastPosPassTime_ms) < 4000) && (PV_AidingMode == AID_ABSOLUTE);\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_PosVelFusion.cpp:\n  642              calcFiltBaroOffset();\n  643          }\n  644:         // filtered baro data used to provide a reference for takeoff\n  645          // it is is reset to last height measurement on disarming in performArmingChecks()\n  646:         if (!getTakeoffExpected()) {\n  647              const float gndHgtFiltTC = 0.5f;\n  648              const float dtBaro = frontend->hgtAvg_ms*1.0e-3f;\n  649              float alpha = constrain_float(dtBaro / (dtBaro+gndHgtFiltTC),0.0f,1.0f);\n  650:             meaHgtAtTakeOff += (baroDataDelayed.hgt-meaHgtAtTakeOff)*alpha;\n  651          }\n  652      }\n  ...\n  682          posDownObsNoise = sq(constrain_float(frontend->_baroAltNoise, 0.1f, 10.0f));\n  683          // reduce weighting (increase observation noise) on baro if we are likely to be in ground effect\n  684:         if (getTakeoffExpected() || getTouchdownExpected()) {\n  685              posDownObsNoise *= frontend->gndEffectBaroScaler;\n  686          }\n  687:         // If we are in takeoff mode, the height measurement is limited to be no less than the measurement at start of takeoff\n  688          // This prevents negative baro disturbances due to copter downwash corrupting the EKF altitude during initial ascent\n  689:         if (motorsArmed && getTakeoffExpected()) {\n  690:             hgtMea = MAX(hgtMea, meaHgtAtTakeOff);\n  691          }\n  692      } else {\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp:\n  345  \n  346          // If height has increased since exiting on-ground, then we definitely are flying\n  347:         if (!onGround && ((stateStruct.position.z - posDownAtTakeoff) < -1.5f)) {\n  348              inFlight = true;\n  349          }\n  ...\n  360      prevInFlight = inFlight;\n  361  \n  362:     // Store vehicle height and range prior to takeoff for use in post takeoff checks\n  363      if (onGround) {\n  364          // store vertical position at start of flight to use as a reference for ground relative checks\n  365:         posDownAtTakeoff = stateStruct.position.z;\n  366          // store the range finder measurement which will be used as a reference to detect when we have taken off\n  367          rngAtStartOfFlight = rangeDataNew.rng;\n  ...\n  378  \n  379  \n  380: // determine if a takeoff is expected so that we can compensate for expected barometer errors due to ground effect\n  381: bool NavEKF2_core::getTakeoffExpected()\n  382  {\n  383:     if (expectGndEffectTakeoff && imuSampleTime_ms - takeoffExpectedSet_ms > frontend->gndEffectTimeout_ms) {\n  384:         expectGndEffectTakeoff = false;\n  385      }\n  386  \n  387:     return expectGndEffectTakeoff;\n  388  }\n  389  \n  390: // called by vehicle code to specify that a takeoff is happening\n  391  // causes the EKF to compensate for expected barometer errors due to ground effect\n  392: void NavEKF2_core::setTakeoffExpected(bool val)\n  393  {\n  394:     takeoffExpectedSet_ms = imuSampleTime_ms;\n  395:     expectGndEffectTakeoff = val;\n  396  }\n  397  \n  ...\n  415  }\n  416  \n  417: // Detect takeoff for optical flow navigation\n  418: void NavEKF2_core::detectOptFlowTakeoff(void)\n  419  {\n  420:     if (!onGround && !takeOffDetected && (imuSampleTime_ms - timeAtArming_ms) > 1000) {\n  421:         // we are no longer confidently on the ground so check the range finder and gyro for signs of takeoff\n  422          const AP_InertialSensor &ins = _ahrs->get_ins();\n  423          Vector3f angRateVec;\n  ...\n  431          }\n  432  \n  433:         takeOffDetected = (takeOffDetected || (angRateVec.length() > 0.1f) || (rangeDataNew.rng > (rngAtStartOfFlight + 0.1f)));\n  434      } else if (onGround) {\n  435:         // we are confidently on the ground so set the takeoff detected status to false\n  436:         takeOffDetected = false;\n  437      }\n  438  }\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_core.cpp:\n  194      gndOffsetValid =  false;\n  195      validOrigin = false;\n  196:     takeoffExpectedSet_ms = 0;\n  197:     expectGndEffectTakeoff = false;\n  198      touchdownExpectedSet_ms = 0;\n  199      expectGndEffectTouchdown = false;\n  ...\n  747      for (uint8_t i=9; i<=11; i++) processNoise[i] = dAngBiasSigma;\n  748      for (uint8_t i=12; i<=14; i++) processNoise[i] = dAngScaleSigma;\n  749:     if (expectGndEffectTakeoff) {\n  750          processNoise[15] = 0.0f;\n  751      } else {\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_NavEKF2/AP_NavEKF2_core.h:\n  184      void getFlowDebug(float &varFlow, float &gndOffset, float &flowInnovX, float &flowInnovY, float &auxInnov, float &HAGL, float &rngInnov, float &range, float &gndOffsetErr) const;\n  185  \n  186:     // called by vehicle code to specify that a takeoff is happening\n  187      // causes the EKF to compensate for expected barometer errors due to ground effect\n  188:     void setTakeoffExpected(bool val);\n  189  \n  190      // called by vehicle code to specify that a touchdown is expected to happen\n  ...\n  226      Return a filter function status that indicates:\n  227          Which outputs are valid\n  228:         If the filter has detected takeoff\n  229          If the filter has activated the mode that mitigates against ground effect static pressure errors\n  230          If GPS data is being used\n  ...\n  575      void setOrigin();\n  576  \n  577:     // determine if a takeoff is expected so that we can compensate for expected barometer errors due to ground effect\n  578:     bool getTakeoffExpected();\n  579  \n  580      // determine if a touchdown is expected so that we can compensate for expected barometer errors due to ground effect\n  ...\n  592  \n  593      // check if the vehicle has taken off during optical flow navigation by looking at inertial and range finder data\n  594:     void detectOptFlowTakeoff(void);\n  595  \n  596      // align the NE earth magnetic field states with the published declination\n  ...\n  725      uint32_t lastGpsVelFail_ms;     // time of last GPS vertical velocity consistency check fail\n  726      uint32_t lastGpsAidBadTime_ms;  // time in msec gps aiding was last detected to be bad\n  727:     float posDownAtTakeoff;         // flight vehicle vertical position sampled at transition from on-ground to in-air and used as a reference (m)\n  728      bool useGpsVertVel;             // true if GPS vertical velocity should be used\n  729      float yawResetAngle;            // Change in yaw angle due to last in-flight yaw reset in radians. A positive value means the yaw angle has increased.\n  ...\n  872  \n  873      // Movement detector\n  874:     bool takeOffDetected;           // true when takeoff for optical flow navigation has been detected\n  875      float rngAtStartOfFlight;       // range finder measurement at start of flight\n  876      uint32_t timeAtArming_ms;       // time in msec that the vehicle armed\n  877  \n  878      // baro ground effect\n  879:     bool expectGndEffectTakeoff;      // external state from ArduCopter - takeoff expected\n  880:     uint32_t takeoffExpectedSet_ms;   // system time at which expectGndEffectTakeoff was set\n  881      bool expectGndEffectTouchdown;    // external state from ArduCopter - touchdown expected\n  882      uint32_t touchdownExpectedSet_ms; // system time at which expectGndEffectTouchdown was set\n  883:     float meaHgtAtTakeOff;            // height measured at commencement of takeoff\n  884  \n  885:     // control of post takeoff magentic field and heading resets\n  886:     bool finalInflightYawInit;      // true when the final post takeoff initialisation of yaw angle has been performed\n  887:     bool finalInflightMagInit;      // true when the final post takeoff initialisation of magnetic field states been performed\n  888      bool magStateResetRequest;      // true if magnetic field states need to be reset using the magneteomter measurements\n  889      bool magYawResetRequest;        // true if the vehicle yaw and magnetic field states need to be reset using the magnetometer measurements\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_SpdHgtControl/AP_SpdHgtControl.h:\n   28  	 */\n   29  	enum FlightStage {\n   30: 		FLIGHT_TAKEOFF       = 1,\n   31          FLIGHT_VTOL          = 2,\n   32          FLIGHT_NORMAL        = 3,\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_TECS/AP_TECS.cpp:\n  220  \n  221      // @Param: TKOFF_IGAIN\n  222:     // @DisplayName: Controller integrator during takeoff\n  223:     // @Description: This is the integrator gain on the control loop during takeoff. When set to 0 then TECS_INTEG_GAIN is used. Increase to increase the rate at which speed and height offsets are trimmed out. Typically values higher than TECS_INTEG_GAIN work best\n  224      // @Range: 0.0 0.5\n  225      // @Increment: 0.02\n  226      // @User: Advanced\n  227:     AP_GROUPINFO(\"TKOFF_IGAIN\", 25, AP_TECS, _integGain_takeoff, 0),\n  228  \n  229      // @Param: LAND_PDAMP\n  ...\n  649          // Set integrator to a max throttle value during climbout\n  650          _integTHR_state = _integTHR_state + (_STE_error * _get_i_gain()) * _DT * K_STE2Thr;\n  651:         if (_flight_stage == AP_TECS::FLIGHT_TAKEOFF || _flight_stage == AP_TECS::FLIGHT_LAND_ABORT)\n  652          {\n  653              _integTHR_state = integ_max;\n  ...\n  674  {\n  675      float i_gain = _integGain;\n  676:     if (_flight_stage == FLIGHT_TAKEOFF) {\n  677:         if (!is_zero(_integGain_takeoff)) {\n  678:             i_gain = _integGain_takeoff;\n  679          }\n  680      } else if (_flags.is_doing_auto_land) {\n  ...\n  757      if (!_ahrs.airspeed_sensor_enabled()) {\n  758          SKE_weighting = 0.0f;\n  759:     } else if ( _flags.underspeed || _flight_stage == AP_TECS::FLIGHT_TAKEOFF || _flight_stage == AP_TECS::FLIGHT_LAND_ABORT) {\n  760          SKE_weighting = 2.0f;\n  761      } else if (_flags.is_doing_auto_land) {\n  ...\n  806      // 5deg of saturation. This allows for some pitch variation due to gusts before the\n  807      // integrator is clipped. Otherwise the effectiveness of the integrator will be reduced in turbulence\n  808:     // During climbout/takeoff, bias the demanded pitch angle so that zero speed error produces a pitch angle\n  809      // demand equal to the minimum value (which is )set by the mission plan during this mode). Otherwise the\n  810      // integrator has to catch up before the nose can be raised to reduce speed during climbout.\n  ...\n  821      temp += SEBdot_error * pitch_damp;\n  822  \n  823:     if (_flight_stage == AP_TECS::FLIGHT_TAKEOFF || _flight_stage == AP_TECS::FLIGHT_LAND_ABORT) {\n  824          temp += _PITCHminf * gainInv;\n  825      }\n  ...\n  883          // small time constant\n  884      }\n  885:     else if (_flight_stage == AP_TECS::FLIGHT_TAKEOFF || _flight_stage == AP_TECS::FLIGHT_LAND_ABORT)\n  886      {\n  887          _PITCHminf          = 0.000174533f * ptchMinCO_cd;\n  ...\n  931      _update_speed(load_factor);\n  932  \n  933:     if (aparm.takeoff_throttle_max != 0 &&\n  934:             (_flight_stage == AP_TECS::FLIGHT_TAKEOFF || _flight_stage == AP_TECS::FLIGHT_LAND_ABORT)) {\n  935:         _THRmaxf  = aparm.takeoff_throttle_max * 0.01f;\n  936      } else {\n  937          _THRmaxf  = aparm.throttle_max * 0.01f;\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_TECS/AP_TECS.h:\n  137      AP_Float _land_throttle_damp;\n  138      AP_Float _integGain;\n  139:     AP_Float _integGain_takeoff;\n  140      AP_Float _integGain_land;\n  141      AP_Float _vertAccLim;\n\n/home/jakob/Github/ArduPilot-CG/libraries/AP_Vehicle/AP_Vehicle.h:\n   33          AP_Int8 throttle_slewrate;\n   34          AP_Int8 throttle_cruise;\n   35:         AP_Int8 takeoff_throttle_max;\n   36          AP_Int16 airspeed_min;\n   37          AP_Int16 airspeed_max;\n\n/home/jakob/Github/ArduPilot-CG/module.mk:\n    1  # Auto-generated file - do not edit\n    2  MODULE_COMMAND = ArduPilot\n    3: SRCS = /home/jakob/Github/ArduPilot-CG/ArduCopter/adsb.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/AP_State.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/ArduCopter.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/arming_checks.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/Attitude.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/baro_ground_effect.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/capabilities.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/commands.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/commands_logic.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/compassmot.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/compat.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_acro.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_althold.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_auto.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_autotune.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_brake.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_circle.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_drift.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_flip.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_guided.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_land.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_loiter.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_poshold.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_rtl.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_sport.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_stabilize.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/control_throw.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/Copter.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/crash_check.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/ekf_check.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/esc_calibration.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/events.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/failsafe.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/fence.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/flight_mode.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/GCS_Mavlink.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/heli_control_acro.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/heli_control_stabilize.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/heli.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/inertia.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/land_detector.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/landing_gear.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/leds.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/Log.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/motors.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/motor_test.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/navigation.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/Parameters.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/perf_info.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/position_vector.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/precision_landing.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/radio.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/sensors.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/setup.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/tuning.cpp /home/jakob/Github/ArduPilot-CG/ArduCopter/UserCode.cpp libraries/AP_Common/AP_Common.cpp libraries/AP_Common/c++.cpp libraries/AP_Common/Location.cpp libraries/AP_Menu/AP_Menu.cpp libraries/AP_Param/AP_Param.cpp libraries/StorageManager/StorageManager.cpp libraries/GCS_MAVLink/GCS_Common.cpp libraries/GCS_MAVLink/GCS_Logs.cpp libraries/GCS_MAVLink/GCS_MAVLink.cpp libraries/GCS_MAVLink/GCS_serial_control.cpp libraries/GCS_MAVLink/GCS_Signing.cpp libraries/GCS_MAVLink/MAVLink_routing.cpp libraries/AP_SerialManager/AP_SerialManager.cpp libraries/AP_GPS/AP_GPS.cpp libraries/AP_GPS/AP_GPS_ERB.cpp libraries/AP_GPS/AP_GPS_GSOF.cpp libraries/AP_GPS/AP_GPS_MTK19.cpp libraries/AP_GPS/AP_GPS_MTK.cpp libraries/AP_GPS/AP_GPS_NMEA.cpp libraries/AP_GPS/AP_GPS_PX4.cpp libraries/AP_GPS/AP_GPS_QURT.cpp libraries/AP_GPS/AP_GPS_SBF.cpp libraries/AP_GPS/AP_GPS_SBP.cpp libraries/AP_GPS/AP_GPS_SIRF.cpp libraries/AP_GPS/AP_GPS_UBLOX.cpp libraries/AP_GPS/GPS_Backend.cpp libraries/DataFlash/DataFlash_Backend.cpp libraries/DataFlash/DataFlash_Block.cpp libraries/DataFlash/DataFlash.cpp libraries/DataFlash/DataFlash_File.cpp libraries/DataFlash/DataFlash_MAVLink.cpp libraries/DataFlash/DataFlash_SITL.cpp libraries/DataFlash/DFMessageWriter.cpp libraries/DataFlash/LogFile.cpp libraries/AP_ADC/AP_ADC_ADS1115.cpp libraries/AP_ADC/AP_ADC_ADS7844.cpp libraries/AP_ADC/AP_ADC.cpp libraries/AP_Baro/AP_Baro_Backend.cpp libraries/AP_Baro/AP_Baro_BMP085.cpp libraries/AP_Baro/AP_Baro.cpp libraries/AP_Baro/AP_Baro_HIL.cpp libraries/AP_Baro/AP_Baro_MS5611.cpp libraries/AP_Baro/AP_Baro_PX4.cpp libraries/AP_Baro/AP_Baro_qflight.cpp libraries/AP_Baro/AP_Baro_QURT.cpp libraries/AP_Compass/AP_Compass_AK8963.cpp libraries/AP_Compass/AP_Compass_Backend.cpp libraries/AP_Compass/AP_Compass_Calibration.cpp libraries/AP_Compass/AP_Compass.cpp libraries/AP_Compass/AP_Compass_HIL.cpp libraries/AP_Compass/AP_Compass_HMC5843.cpp libraries/AP_Compass/AP_Compass_LSM303D.cpp libraries/AP_Compass/AP_Compass_LSM9DS1.cpp libraries/AP_Compass/AP_Compass_PX4.cpp libraries/AP_Compass/AP_Compass_qflight.cpp libraries/AP_Compass/AP_Compass_QURT.cpp libraries/AP_Compass/CompassCalibrator.cpp libraries/AP_Compass/Compass_learn.cpp libraries/AP_Math/AP_GeodesicGrid.cpp libraries/AP_Math/AP_Math.cpp libraries/AP_Math/edc.cpp libraries/AP_Math/location.cpp libraries/AP_Math/matrix3.cpp libraries/AP_Math/matrix_alg.cpp libraries/AP_Math/polygon.cpp libraries/AP_Math/quaternion.cpp libraries/AP_Math/vector2.cpp libraries/AP_Math/vector3.cpp libraries/AP_InertialSensor/AP_InertialSensor_Backend.cpp libraries/AP_InertialSensor/AP_InertialSensor.cpp libraries/AP_InertialSensor/AP_InertialSensor_HIL.cpp libraries/AP_InertialSensor/AP_InertialSensor_L3G4200D.cpp libraries/AP_InertialSensor/AP_InertialSensor_LSM9DS0.cpp libraries/AP_InertialSensor/AP_InertialSensor_MPU6000.cpp libraries/AP_InertialSensor/AP_InertialSensor_MPU9250.cpp libraries/AP_InertialSensor/AP_InertialSensor_PX4.cpp libraries/AP_InertialSensor/AP_InertialSensor_qflight.cpp libraries/AP_InertialSensor/AP_InertialSensor_QURT.cpp libraries/AP_InertialSensor/AP_InertialSensor_SITL.cpp libraries/AP_InertialSensor/AP_InertialSensor_UserInteract_MAVLink.cpp libraries/AP_InertialSensor/AP_InertialSensor_UserInteract_Stream.cpp libraries/AP_InertialSensor/AuxiliaryBus.cpp libraries/AP_AccelCal/AccelCalibrator.cpp libraries/AP_AccelCal/AP_AccelCal.cpp libraries/AP_AHRS/AP_AHRS.cpp libraries/AP_AHRS/AP_AHRS_DCM.cpp libraries/AP_AHRS/AP_AHRS_NavEKF.cpp libraries/AP_NavEKF/AP_NavEKF_core.cpp libraries/AP_NavEKF/AP_NavEKF.cpp libraries/AP_NavEKF2/AP_NavEKF2_AirDataFusion.cpp libraries/AP_NavEKF2/AP_NavEKF2_Control.cpp libraries/AP_NavEKF2/AP_NavEKF2_core.cpp libraries/AP_NavEKF2/AP_NavEKF2.cpp libraries/AP_NavEKF2/AP_NavEKF2_MagFusion.cpp libraries/AP_NavEKF2/AP_NavEKF2_Measurements.cpp libraries/AP_NavEKF2/AP_NavEKF2_OptFlowFusion.cpp libraries/AP_NavEKF2/AP_NavEKF2_Outputs.cpp libraries/AP_NavEKF2/AP_NavEKF2_PosVelFusion.cpp libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp libraries/AP_NavEKF2/AP_NavEKF_GyroBias.cpp libraries/AP_Mission/AP_Mission.cpp libraries/AP_Rally/AP_Rally.cpp libraries/AC_PID/AC_HELI_PID.cpp libraries/AC_PID/AC_P.cpp libraries/AC_PID/AC_PI_2D.cpp libraries/AC_PID/AC_PID.cpp libraries/AC_AttitudeControl/AC_AttitudeControl.cpp libraries/AC_AttitudeControl/AC_AttitudeControl_Heli.cpp libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.cpp libraries/AC_AttitudeControl/AC_PosControl.cpp libraries/AC_AttitudeControl/ControlMonitor.cpp libraries/RC_Channel/RC_Channel_aux.cpp libraries/RC_Channel/RC_Channel.cpp libraries/AP_Motors/AP_MotorsAirship.cpp libraries/AP_Motors/AP_Motors_Class.cpp libraries/AP_Motors/AP_MotorsCoax.cpp libraries/AP_Motors/AP_MotorsHeli.cpp libraries/AP_Motors/AP_MotorsHeli_RSC.cpp libraries/AP_Motors/AP_MotorsHeli_Single.cpp libraries/AP_Motors/AP_MotorsHexa.cpp libraries/AP_Motors/AP_MotorsMatrix.cpp libraries/AP_Motors/AP_MotorsMulticopter.cpp libraries/AP_Motors/AP_MotorsOcta.cpp libraries/AP_Motors/AP_MotorsOctaQuad.cpp libraries/AP_Motors/AP_MotorsQuad.cpp libraries/AP_Motors/AP_MotorsSingle.cpp libraries/AP_Motors/AP_MotorsTri.cpp libraries/AP_Motors/AP_MotorsY6.cpp libraries/AP_RangeFinder/AP_RangeFinder_analog.cpp libraries/AP_RangeFinder/AP_RangeFinder_BBB_PRU.cpp libraries/AP_RangeFinder/AP_RangeFinder_Bebop.cpp libraries/AP_RangeFinder/AP_RangeFinder_LightWareI2C.cpp libraries/AP_RangeFinder/AP_RangeFinder_LightWareSerial.cpp libraries/AP_RangeFinder/AP_RangeFinder_MAVLink.cpp libraries/AP_RangeFinder/AP_RangeFinder_MaxsonarI2CXL.cpp libraries/AP_RangeFinder/AP_RangeFinder_PulsedLightLRF.cpp libraries/AP_RangeFinder/AP_RangeFinder_PX4.cpp libraries/AP_RangeFinder/AP_RangeFinder_PX4_PWM.cpp libraries/AP_RangeFinder/RangeFinder_Backend.cpp libraries/AP_RangeFinder/RangeFinder.cpp libraries/AP_OpticalFlow/AP_OpticalFlow_HIL.cpp libraries/AP_OpticalFlow/AP_OpticalFlow_Linux.cpp libraries/AP_OpticalFlow/AP_OpticalFlow_Onboard.cpp libraries/AP_OpticalFlow/AP_OpticalFlow_PX4.cpp libraries/AP_OpticalFlow/OpticalFlow_backend.cpp libraries/AP_OpticalFlow/OpticalFlow.cpp libraries/AP_RSSI/AP_RSSI.cpp libraries/Filter/DerivativeFilter.cpp libraries/Filter/LowPassFilter2p.cpp libraries/Filter/LowPassFilter.cpp libraries/AP_Relay/AP_Relay.cpp libraries/AP_ServoRelayEvents/AP_ServoRelayEvents.cpp libraries/AP_Camera/AP_Camera.cpp libraries/AP_Mount/AP_Mount_Alexmos.cpp libraries/AP_Mount/AP_Mount_Backend.cpp libraries/AP_Mount/AP_Mount.cpp libraries/AP_Mount/AP_Mount_Servo.cpp libraries/AP_Mount/AP_Mount_SoloGimbal.cpp libraries/AP_Mount/AP_Mount_SToRM32.cpp libraries/AP_Mount/AP_Mount_SToRM32_serial.cpp libraries/AP_Mount/SoloGimbal.cpp libraries/AP_Mount/SoloGimbalEKF.cpp libraries/AP_Mount/SoloGimbal_Parameters.cpp libraries/AP_Airspeed/Airspeed_Calibration.cpp libraries/AP_Airspeed/AP_Airspeed_analog.cpp libraries/AP_Airspeed/AP_Airspeed.cpp libraries/AP_Airspeed/AP_Airspeed_I2C.cpp libraries/AP_Airspeed/AP_Airspeed_PX4.cpp libraries/AP_InertialNav/AP_InertialNav_NavEKF.cpp libraries/AC_WPNav/AC_Circle.cpp libraries/AC_WPNav/AC_WPNav.cpp libraries/AP_Declination/AP_Declination.cpp libraries/AC_Fence/AC_Fence.cpp libraries/AC_Fence/AC_PolyFence_loader.cpp libraries/AC_Avoidance/AC_Avoid.cpp libraries/AP_Scheduler/AP_Scheduler.cpp libraries/AP_RCMapper/AP_RCMapper.cpp libraries/AP_Notify/AP_BoardLED.cpp libraries/AP_Notify/AP_Notify.cpp libraries/AP_Notify/Buzzer.cpp libraries/AP_Notify/DiscreteRGBLed.cpp libraries/AP_Notify/Display.cpp libraries/AP_Notify/Display_SSD1306_I2C.cpp libraries/AP_Notify/ExternalLED.cpp libraries/AP_Notify/NavioLED.cpp libraries/AP_Notify/NavioLED_I2C.cpp libraries/AP_Notify/OreoLED_PX4.cpp libraries/AP_Notify/RCOutputRGBLed.cpp libraries/AP_Notify/RGBLed.cpp libraries/AP_Notify/ToneAlarm_Linux.cpp libraries/AP_Notify/ToneAlarm_PX4.cpp libraries/AP_Notify/ToneAlarm_PX4_Solo.cpp libraries/AP_Notify/ToshibaLED.cpp libraries/AP_Notify/ToshibaLED_I2C.cpp libraries/AP_Notify/ToshibaLED_PX4.cpp libraries/AP_Notify/VRBoard_LED.cpp libraries/AP_BattMonitor/AP_BattMonitor_Analog.cpp libraries/AP_BattMonitor/AP_BattMonitor_Backend.cpp libraries/AP_BattMonitor/AP_BattMonitor_Bebop.cpp libraries/AP_BattMonitor/AP_BattMonitor.cpp libraries/AP_BattMonitor/AP_BattMonitor_SMBus_I2C.cpp libraries/AP_BattMonitor/AP_BattMonitor_SMBus_PX4.cpp libraries/AP_BoardConfig/AP_BoardConfig.cpp libraries/AP_Frsky_Telem/AP_Frsky_Telem.cpp libraries/AC_Sprayer/AC_Sprayer.cpp libraries/AP_EPM/AP_EPM.cpp libraries/AP_Parachute/AP_Parachute.cpp libraries/AP_LandingGear/AP_LandingGear.cpp libraries/AP_Terrain/AP_Terrain.cpp libraries/AP_Terrain/TerrainGCS.cpp libraries/AP_Terrain/TerrainIO.cpp libraries/AP_Terrain/TerrainMission.cpp libraries/AP_Terrain/TerrainUtil.cpp libraries/AP_RPM/AP_RPM.cpp libraries/AP_RPM/RPM_Backend.cpp libraries/AP_RPM/RPM_PX4_PWM.cpp libraries/AP_RPM/RPM_SITL.cpp libraries/AC_PrecLand/AC_PrecLand_Companion.cpp libraries/AC_PrecLand/AC_PrecLand.cpp libraries/AC_PrecLand/AC_PrecLand_IRLock.cpp libraries/AP_IRLock/AP_IRLock_PX4.cpp libraries/AP_IRLock/IRLock.cpp libraries/AC_InputManager/AC_InputManager.cpp libraries/AC_InputManager/AC_InputManager_Heli.cpp libraries/AP_ADSB/AP_ADSB.cpp libraries/AP_HAL/HAL.cpp libraries/AP_HAL/UARTDriver.cpp libraries/AP_HAL/Util.cpp libraries/AP_HAL_Empty/AnalogIn.cpp libraries/AP_HAL_Empty/GPIO.cpp libraries/AP_HAL_Empty/HAL_Empty_Class.cpp libraries/AP_HAL_Empty/I2CDriver.cpp libraries/AP_HAL_Empty/PrivateMember.cpp libraries/AP_HAL_Empty/RCInput.cpp libraries/AP_HAL_Empty/RCOutput.cpp libraries/AP_HAL_Empty/Scheduler.cpp libraries/AP_HAL_Empty/Semaphores.cpp libraries/AP_HAL_Empty/SPIDriver.cpp libraries/AP_HAL_Empty/Storage.cpp libraries/AP_HAL_Empty/UARTDriver.cpp libraries/AP_HAL_PX4/AnalogIn.cpp libraries/AP_HAL_PX4/GPIO.cpp libraries/AP_HAL_PX4/HAL_PX4_Class.cpp libraries/AP_HAL_PX4/I2CDriver.cpp libraries/AP_HAL_PX4/NSHShellStream.cpp libraries/AP_HAL_PX4/px4_param.cpp libraries/AP_HAL_PX4/RCInput.cpp libraries/AP_HAL_PX4/RCOutput.cpp libraries/AP_HAL_PX4/Scheduler.cpp libraries/AP_HAL_PX4/Semaphores.cpp libraries/AP_HAL_PX4/Storage.cpp libraries/AP_HAL_PX4/system.cpp libraries/AP_HAL_PX4/UARTDriver.cpp libraries/AP_HAL_PX4/Util.cpp libraries/AP_HAL/utility/dsm.cpp libraries/AP_HAL/utility/ftoa_engine.cpp libraries/AP_HAL/utility/getopt_cpp.cpp libraries/AP_HAL/utility/Print.cpp libraries/AP_HAL/utility/print_vprintf.cpp libraries/AP_HAL/utility/RingBuffer.cpp libraries/AP_HAL/utility/Socket.cpp libraries/AP_HAL/utility/utoa_invert.cpp\n    4  MODULE_STACKSIZE = 4096\n    5  EXTRACXXFLAGS = -Wframe-larger-than=1300\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.bin:\n    <binary>\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf:\n    <binary>\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build/firmware.elf.map:\n 2146   .text._ZN6Copter6do_RTLEv\n 2147                  0x0000000000000000        0x4 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2148:  .text._ZN6Copter10do_takeoffERKN10AP_Mission15Mission_CommandE\n 2149                  0x0000000000000000        0x6 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2150:  .text._ZN6Copter14verify_takeoffEv\n 2151                  0x0000000000000000        0xc /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2152   .text._ZN6Copter23verify_loiter_unlimitedEv\n ....\n 2846   .text._ZN14AP_AHRS_NavEKF13setInhibitGPSEv\n 2847                  0x0000000000000000       0x24 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2848:  .text._ZN14AP_AHRS_NavEKF18setTakeoffExpectedEb\n 2849                  0x0000000000000000       0x1e /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2850   .text._ZN14AP_AHRS_NavEKF20setTouchdownExpectedEb\n ....\n 2938   .text._ZN11NavEKF_core12setOriginLLHER8Location\n 2939                  0x0000000000000000       0x38 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2940:  .text._ZN11NavEKF_core18getTakeoffExpectedEv\n 2941                  0x0000000000000000       0x2c /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2942:  .text._ZN11NavEKF_core18setTakeoffExpectedEb\n 2943                  0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2944   .text._ZN11NavEKF_core20getTouchdownExpectedEv\n ....\n 2946   .text._ZN11NavEKF_core20setTouchdownExpectedEb\n 2947                  0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2948:  .text._ZN11NavEKF_core20detectOptFlowTakeoffEv\n 2949                  0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 2950   .text._ZNK11NavEKF_core13getQuaternionER10Quaternion\n ....\n 3062   .text._ZNK6NavEKF11use_compassEv\n 3063                  0x0000000000000000        0xa /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 3064:  .text._ZN6NavEKF18setTakeoffExpectedEb\n 3065                  0x0000000000000000        0xa /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 3066   .text._ZN6NavEKF20setTouchdownExpectedEb\n ....\n 3102   .text._ZNK7NavEKF213getQuaternionER10Quaternion\n 3103                  0x0000000000000000       0x14 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 3104:  .text._ZN7NavEKF218setTakeoffExpectedEb\n 3105                  0x0000000000000000       0x2e /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 3106   .text._ZN7NavEKF220setTouchdownExpectedEb\n ....\n 3112   .text._ZNK12NavEKF2_core7getHAGLERf\n 3113                  0x0000000000000000       0x38 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 3114:  .text._ZN12NavEKF2_core18setTakeoffExpectedEb\n 3115                  0x0000000000000000       0x1a /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 3116   .text._ZN12NavEKF2_core20setTouchdownExpectedEb\n ....\n 19760   .text._ZN6Copter21update_throttle_hoverEv\n 19761                  0x0000000008005a0c       0xb8 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19762:  .text._ZN6Copter20set_throttle_takeoffEv\n 19763                  0x0000000008005ac4        0xa /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19764   *fill*         0x0000000008005ace        0x2 \n .....\n 19767   .text._ZN6Copter28get_pilot_desired_climb_rateEf\n 19768                  0x0000000008005b58       0xe0 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19769:  .text._ZN6Copter24get_non_takeoff_throttleEv\n 19770                  0x0000000008005c38       0x28 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19771:  .text._ZN6Copter28get_takeoff_trigger_throttleEv\n 19772                  0x0000000008005c60       0x1c /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19773:  .text._ZN6Copter24get_throttle_pre_takeoffEf\n 19774                  0x0000000008005c7c       0x9c /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19775   .text._ZN6Copter40set_accel_throttle_I_from_pilot_throttleEf\n .....\n 19898   .text._ZN6Copter9auto_initEb\n 19899                  0x0000000008007f0c       0x84 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19900:  .text._ZN6Copter18auto_takeoff_startERK8Location\n 19901                  0x0000000008007f90       0x9c /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19902:  .text._ZN6Copter16auto_takeoff_runEv\n 19903                  0x000000000800802c       0xdc /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 19904   .text._ZN6Copter15auto_land_startERK7Vector3IfE\n .....\n 20006   .text._ZN6Copter8flip_runEv\n 20007                  0x000000000800b3f0      0x318 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20008:  .text._ZN6Copter20guided_takeoff_startEf\n 20009                  0x000000000800b708       0x58 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20010   .text._ZN6Copter24guided_vel_control_startEv\n .....\n 20013   .text._ZN6Copter19guided_set_velocityERK7Vector3IfE\n 20014                  0x000000000800b7ac       0x58 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20015:  .text._ZN6Copter18guided_takeoff_runEv\n 20016                  0x000000000800b804       0xcc /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20017   .text._ZN6Copter22guided_pos_control_runEv\n .....\n 20626   .text._ZN6Copter11position_okEv\n 20627                  0x0000000008016e76       0x22 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20628:  .text._ZN6Copter29current_mode_has_user_takeoffEb\n 20629                  0x0000000008016e98       0x2e /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20630   *fill*         0x0000000008016ec6        0x2 \n 20631:  .text._ZN6Copter19takeoff_timer_startEf\n 20632                  0x0000000008016ec8       0x94 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20633:  .text._ZN6Copter15do_user_takeoffEfb\n 20634                  0x0000000008016f5c       0xa0 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20635:  .text._ZN6Copter12takeoff_stopEv\n 20636                  0x0000000008016ffc       0x10 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20637:  .text._ZN6Copter23takeoff_get_climb_ratesERfS0_\n 20638                  0x000000000801700c      0x124 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 20639   .text._ZN6Copter14terrain_updateEv\n .....\n 22679   .text._ZNK6AP_HAL4Util14get_soft_armedEv.isra.0\n 22680                  0x0000000008032b62        0x6 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 22681:  .text._ZN11NavEKF_core20detectOptFlowTakeoffEv.part.19\n 22682                  0x0000000008032b68       0x50 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 22683   .text._ZN10QuaternionC2Ev\n .....\n 23219   .text._ZN12NavEKF2_core20calcGpsGoodForFlightEv\n 23220                  0x00000000080472a8      0x1e0 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23221:  .text._ZN12NavEKF2_core18getTakeoffExpectedEv\n 23222                  0x0000000008047488       0x30 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23223   .text._ZN12NavEKF2_core20getTouchdownExpectedEv\n 23224                  0x00000000080474b8       0x30 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23225:  .text._ZN12NavEKF2_core20detectOptFlowTakeoffEv\n 23226                  0x00000000080474e8      0x118 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23227   .text._ZN12NavEKF2_core18calcGpsGoodToAlignEv\n .....\n 23271   .text._ZN10AP_Mission12get_next_cmdEtRNS_15Mission_CommandEb\n 23272                  0x0000000008048ef2       0xbe /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23273:  .text._ZN10AP_Mission23starts_with_takeoff_cmdEv\n 23274                  0x0000000008048fb0       0x44 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23275   .text._ZN10AP_Mission16get_next_nav_cmdEtRNS_15Mission_CommandE\n .....\n 23449   .text._ZN13AC_PosControl33set_alt_target_from_climb_rate_ffEffb\n 23450                  0x000000000804b62c      0x178 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23451:  .text._ZN13AC_PosControl22add_takeoff_climb_rateEff\n 23452                  0x000000000804b7a4        0xe /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23453   *fill*         0x000000000804b7b2        0x2 \n .....\n 23456   .text._ZNK13AC_PosControl13get_alt_errorEv\n 23457                  0x000000000804b840       0x1c /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23458:  .text._ZN13AC_PosControl12init_takeoffEv\n 23459                  0x000000000804b85c       0x60 /home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build//home/jakob/Github/ArduPilot-CG/module.pre.o\n 23460   .text._ZNK13AC_PosControl11is_active_zEv\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Build/px4fmu-v2_APM.build/home/jakob/Github/ArduPilot-CG/module.pre.o.map:\n 32898   .debug_macro   0x0000000000000000       0x12 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 32899   .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 32900:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32901:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32902:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32903:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32904:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32905:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32906:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32907:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32908:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32909:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32910:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32911:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32912:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32913:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32914:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32915:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32916:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32917:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32918:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32919:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32920:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32921:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32922:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32923:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32924:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32925:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32926:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32927:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32928:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32929:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32930:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32931:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32932:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32933:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32934:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32935:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32936:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32937:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32938:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32939:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32940:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32941:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32942:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32943:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32944:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32945:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32946:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32947:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32948:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32949:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32950:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32951:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32952:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32953:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32954:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32955:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32956:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32957:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32958:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32959:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32960:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32961:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32962:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32963:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32964:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32965:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32966:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32967:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32968:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32969:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32970:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32971:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32972:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32973:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32974:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32975:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32976:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32977:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32978:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32979:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32980:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32981:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32982:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32983:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32984:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32985:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32986:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32987:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32988:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32989:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32990:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32991:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32992:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32993:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32994:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32995:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32996:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32997:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32998:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 32999:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33000:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33001:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33002:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33003:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33004:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33005:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33006:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33007:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33008:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33009:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33010:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33011:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33012:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33013:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33014:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33015:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33016:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33017:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33018:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33019:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33020:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33021:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33022:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33023:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33024:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33025:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33026:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33027:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33028:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33029:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33030:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33031:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33032:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33033:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33034:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33035:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33036:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33037:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33038:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33039:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33040:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33041:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33042:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33043:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33044:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33045:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33046:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33047:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33048:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33049:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33050:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33051:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33052:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33053:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33054:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33055:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33056:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33057:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33058:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33059:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33060:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33061:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33062:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33063:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33064:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33065:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33066:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33067:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33068:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33069:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33070:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33071:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33072:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33073:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33074:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33075:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33076:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33077:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33078:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33079:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33080:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33081:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33082:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33083:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33084:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33085:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33086:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33087:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33088:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33089:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33090:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33091:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33092:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33093:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33094:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33095:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33096:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33097:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33098:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33099:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33100:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33101:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33102:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33103:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33104:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33105:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33106:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33107:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33108:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33109:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33110:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33111:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33112:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33113:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33114:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33115:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33116:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33117:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33118:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33119:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33120:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33121:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33122:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33123:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33124:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33125:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33126:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33127:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33128:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33129:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33130:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33131:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33132:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33133:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33134:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33135:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33136:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33137:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33138:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33139:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33140:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33141:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33142:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33143:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33144:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33145:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33146:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33147:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33148:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33149:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33150:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33151:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33152:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33153:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33154:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33155:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33156:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33157:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33158:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33159:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33160:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33161:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33162:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33163:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33164:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33165:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33166:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33167:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33168:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33169:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33170:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33171:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33172:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33173:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33174:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33175:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33176:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33177:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33178:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33179:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33180:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33181:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33182:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33183:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33184:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33185:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33186:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33187:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33188:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33189:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33190:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33191:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33192:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33193:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33194:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33195:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33196:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33197:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33198:  .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33199:  .debug_macro   0x0000000000000000      0x946 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33200:  .debug_macro   0x0000000000000000       0x22 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33201:  .debug_macro   0x0000000000000000      0x8b4 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33202:  .debug_macro   0x0000000000000000       0xc9 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33203:  .debug_macro   0x0000000000000000       0x58 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33204:  .debug_macro   0x0000000000000000       0x22 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33205:  .debug_macro   0x0000000000000000       0x2e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33206:  .debug_macro   0x0000000000000000       0x9c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33207:  .debug_macro   0x0000000000000000      0x281 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33208:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33209:  .debug_macro   0x0000000000000000       0x88 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33210:  .debug_macro   0x0000000000000000      0x14e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33211:  .debug_macro   0x0000000000000000      0x125 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33212:  .debug_macro   0x0000000000000000       0x5d /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33213:  .debug_macro   0x0000000000000000       0x58 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33214:  .debug_macro   0x0000000000000000       0x4c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33215:  .debug_macro   0x0000000000000000       0x49 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33216:  .debug_macro   0x0000000000000000      0x106 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33217:  .debug_macro   0x0000000000000000       0x23 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33218:  .debug_macro   0x0000000000000000       0x28 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33219:  .debug_macro   0x0000000000000000       0xd1 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33220:  .debug_macro   0x0000000000000000       0x98 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33221:  .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33222:  .debug_macro   0x0000000000000000       0x59 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33223:  .debug_macro   0x0000000000000000      0x11b /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33224:  .debug_macro   0x0000000000000000       0x46 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33225:  .debug_macro   0x0000000000000000      0x27f /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33226:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33227:  .debug_macro   0x0000000000000000      0x195 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33228:  .debug_macro   0x0000000000000000       0x8a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33229:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33230:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33231:  .debug_macro   0x0000000000000000       0x39 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33232:  .debug_macro   0x0000000000000000       0xb4 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33233:  .debug_macro   0x0000000000000000       0x41 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33234:  .debug_macro   0x0000000000000000       0x4d /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33235:  .debug_macro   0x0000000000000000       0x22 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33236:  .debug_macro   0x0000000000000000       0xef /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33237:  .debug_macro   0x0000000000000000      0x337 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33238:  .debug_macro   0x0000000000000000       0x19 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33239:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33240:  .debug_macro   0x0000000000000000      0x238 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33241:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33242:  .debug_macro   0x0000000000000000       0x18 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33243:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33244:  .debug_macro   0x0000000000000000       0x2e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33245:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33246:  .debug_macro   0x0000000000000000       0x82 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33247:  .debug_macro   0x0000000000000000       0x5e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33248:  .debug_macro   0x0000000000000000       0xaa /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33249:  .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33250:  .debug_macro   0x0000000000000000       0xd9 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33251:  .debug_macro   0x0000000000000000      0x167 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33252:  .debug_macro   0x0000000000000000       0x66 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33253:  .debug_macro   0x0000000000000000       0x94 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33254:  .debug_macro   0x0000000000000000       0x24 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33255:  .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33256:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33257:  .debug_macro   0x0000000000000000       0xb8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33258:  .debug_macro   0x0000000000000000       0x28 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33259:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33260:  .debug_macro   0x0000000000000000       0xa5 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33261:  .debug_macro   0x0000000000000000      0x113 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33262:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33263:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33264:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33265:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33266:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33267:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33268:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33269:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33270:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33271:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33272:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33273:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33274:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33275:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33276:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33277:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33278:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33279:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33280:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33281:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33282:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33283:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33284:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33285:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33286:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33287:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33288:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33289:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33290:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33291:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33292:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33293:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33294:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33295:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33296:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33297:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33298:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33299:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33300:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33301:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33302:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33303:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33304:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33305:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33306:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33307:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33308:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33309:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33310:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33311:  .debug_macro   0x0000000000000000      0x110 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33312:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33313:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33314:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33315:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33316:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33317:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33318:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33319:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33320:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33321:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33322:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33323:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33324:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33325:  .debug_macro   0x0000000000000000       0x52 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33326:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33327:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33328:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33329:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33330:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33331:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33332:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33333:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33334:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33335:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33336:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33337:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33338:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33339:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33340:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33341:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33342:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33343:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33344:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33345:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33346:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33347:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33348:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33349:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33350:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33351:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33352:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33353:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33354:  .debug_macro   0x0000000000000000       0x40 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33355:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33356:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33357:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33358:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33359:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33360:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33361:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33362:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33363:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33364:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33365:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33366:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33367:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33368:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33369:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33370:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33371:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33372:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33373:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33374:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33375:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33376:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33377:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33378:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33379:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33380:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33381:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33382:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33383:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33384:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33385:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33386:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33387:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33388:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33389:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33390:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33391:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33392:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33393:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33394:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33395:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33396:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33397:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33398:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33399:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33400:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33401:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33402:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33403:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33404:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33405:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33406:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33407:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33408:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33409:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33410:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33411:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33412:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33413:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33414:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33415:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33416:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33417:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33418:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33419:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33420:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33421:  .debug_macro   0x0000000000000000       0x40 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33422:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33423:  .debug_macro   0x0000000000000000       0x52 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33424:  .debug_macro   0x0000000000000000       0x46 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33425:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33426:  .debug_macro   0x0000000000000000       0x46 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33427:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33428:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33429:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33430:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33431:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33432:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33433:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33434:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33435:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33436:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33437:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33438:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33439:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33440:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33441:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33442:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33443:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33444:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33445:  .debug_macro   0x0000000000000000       0x2e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33446:  .debug_macro   0x0000000000000000       0x7c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33447:  .debug_macro   0x0000000000000000       0x17 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33448:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33449:  .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33450:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33451:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33452:  .debug_macro   0x0000000000000000       0x82 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33453:  .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33454:  .debug_macro   0x0000000000000000       0x22 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33455:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33456:  .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33457:  .debug_macro   0x0000000000000000       0x3a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33458:  .debug_macro   0x0000000000000000       0x28 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33459:  .debug_macro   0x0000000000000000       0x3e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33460:  .debug_macro   0x0000000000000000       0x34 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33461:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33462:  .debug_macro   0x0000000000000000       0x82 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33463:  .debug_macro   0x0000000000000000       0x64 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33464:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33465:  .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33466:  .debug_macro   0x0000000000000000       0x5e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33467:  .debug_macro   0x0000000000000000       0x64 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33468:  .debug_macro   0x0000000000000000       0x28 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33469:  .debug_macro   0x0000000000000000       0x28 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33470:  .debug_macro   0x0000000000000000       0x28 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33471:  .debug_macro   0x0000000000000000       0x29 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33472:  .debug_macro   0x0000000000000000       0x22 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33473:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33474:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33475:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33476:  .debug_macro   0x0000000000000000       0x89 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33477:  .debug_macro   0x0000000000000000       0x40 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33478:  .debug_macro   0x0000000000000000       0x6a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33479:  .debug_macro   0x0000000000000000       0x76 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33480:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33481:  .debug_macro   0x0000000000000000       0x2e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33482:  .debug_macro   0x0000000000000000       0x4c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33483:  .debug_macro   0x0000000000000000       0x52 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33484:  .debug_macro   0x0000000000000000       0x16 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33485:  .debug_macro   0x0000000000000000       0x7c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33486:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33487:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33488:  .debug_macro   0x0000000000000000       0xee /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33489:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33490:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33491:  .debug_macro   0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33492:  .debug_macro   0x0000000000000000      0x57a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33493:  .debug_macro   0x0000000000000000      0x31a /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33494:  .debug_macro   0x0000000000000000       0x22 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33495:  .debug_macro   0x0000000000000000       0x40 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33496:  .debug_macro   0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33497:  .debug_macro   0x0000000000000000       0x12 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 33498   .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 33499   .group         0x0000000000000000        0x8 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n .....\n 118262  LOAD /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 118263  LOAD /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 118264: LOAD /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 118265  LOAD /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 118266  LOAD /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 118708   .text          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 118709   .text          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 118710:  .text          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 118711   .text          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 118712   .text          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 119551                  0x0000000000000000                Copter::update_throttle_hover()\n 119552  \n 119553: .text._ZN6Copter20set_throttle_takeoffEv\n 119554                  0x0000000000000000        0xa\n 119555:  .text._ZN6Copter20set_throttle_takeoffEv\n 119556                  0x0000000000000000        0xa /home/jakob/Github/ArduPilot-CG/ArduCopter/Attitude.cpp.o\n 119557:                 0x0000000000000000                Copter::set_throttle_takeoff()\n 119558  \n 119559  .text._ZN6Copter26get_pilot_desired_throttleEs\n .....\n 119569                  0x0000000000000000                Copter::get_pilot_desired_climb_rate(float)\n 119570  \n 119571: .text._ZN6Copter24get_non_takeoff_throttleEv\n 119572                  0x0000000000000000       0x28\n 119573:  .text._ZN6Copter24get_non_takeoff_throttleEv\n 119574                  0x0000000000000000       0x28 /home/jakob/Github/ArduPilot-CG/ArduCopter/Attitude.cpp.o\n 119575:                 0x0000000000000000                Copter::get_non_takeoff_throttle()\n 119576  \n 119577: .text._ZN6Copter28get_takeoff_trigger_throttleEv\n 119578                  0x0000000000000000       0x1c\n 119579:  .text._ZN6Copter28get_takeoff_trigger_throttleEv\n 119580                  0x0000000000000000       0x1c /home/jakob/Github/ArduPilot-CG/ArduCopter/Attitude.cpp.o\n 119581:                 0x0000000000000000                Copter::get_takeoff_trigger_throttle()\n 119582  \n 119583: .text._ZN6Copter24get_throttle_pre_takeoffEf\n 119584                  0x0000000000000000       0x9c\n 119585:  .text._ZN6Copter24get_throttle_pre_takeoffEf\n 119586                  0x0000000000000000       0x9c /home/jakob/Github/ArduPilot-CG/ArduCopter/Attitude.cpp.o\n 119587:                 0x0000000000000000                Copter::get_throttle_pre_takeoff(float)\n 119588  \n 119589  .text._ZN6Copter40set_accel_throttle_I_from_pilot_throttleEf\n .....\n 119695                  0x0000000000000000                Copter::do_RTL()\n 119696  \n 119697: .text._ZN6Copter10do_takeoffERKN10AP_Mission15Mission_CommandE\n 119698                  0x0000000000000000        0x6\n 119699:  .text._ZN6Copter10do_takeoffERKN10AP_Mission15Mission_CommandE\n 119700                  0x0000000000000000        0x6 /home/jakob/Github/ArduPilot-CG/ArduCopter/commands_logic.cpp.o\n 119701:                 0x0000000000000000                Copter::do_takeoff(AP_Mission::Mission_Command const&)\n 119702  \n 119703  .text._ZN6Copter9do_nav_wpERKN10AP_Mission15Mission_CommandE\n .....\n 119767                  0x0000000000000000                Copter::do_guided_limits(AP_Mission::Mission_Command const&)\n 119768  \n 119769: .text._ZN6Copter14verify_takeoffEv\n 119770                  0x0000000000000000        0xc\n 119771:  .text._ZN6Copter14verify_takeoffEv\n 119772                  0x0000000000000000        0xc /home/jakob/Github/ArduPilot-CG/ArduCopter/commands_logic.cpp.o\n 119773:                 0x0000000000000000                Copter::verify_takeoff()\n 119774  \n 119775  .text._ZN6Copter11verify_landEv\n .....\n 119983                  0x0000000000000000                Copter::auto_init(bool)\n 119984  \n 119985: .text._ZN6Copter18auto_takeoff_startERK8Location\n 119986                  0x0000000000000000       0x9c\n 119987:  .text._ZN6Copter18auto_takeoff_startERK8Location\n 119988                  0x0000000000000000       0x9c /home/jakob/Github/ArduPilot-CG/ArduCopter/control_auto.cpp.o\n 119989:                 0x0000000000000000                Copter::auto_takeoff_start(Location const&)\n 119990  \n 119991: .text._ZN6Copter16auto_takeoff_runEv\n 119992                  0x0000000000000000       0xdc\n 119993:  .text._ZN6Copter16auto_takeoff_runEv\n 119994                  0x0000000000000000       0xdc /home/jakob/Github/ArduPilot-CG/ArduCopter/control_auto.cpp.o\n 119995:                 0x0000000000000000                Copter::auto_takeoff_run()\n 119996  \n 119997  .text._ZN6Copter19auto_wp_run_headingEv\n .....\n 120318                  0x0000000000000000                Copter::flip_run()\n 120319  \n 120320: .text._ZN6Copter20guided_takeoff_startEf\n 120321                  0x0000000000000000       0x58\n 120322:  .text._ZN6Copter20guided_takeoff_startEf\n 120323                  0x0000000000000000       0x58 /home/jakob/Github/ArduPilot-CG/ArduCopter/control_guided.cpp.o\n 120324:                 0x0000000000000000                Copter::guided_takeoff_start(float)\n 120325  \n 120326  .text._ZN6Copter24guided_vel_control_startEv\n .....\n 120336                  0x0000000000000000                Copter::guided_set_velocity(Vector3<float> const&)\n 120337  \n 120338: .text._ZN6Copter18guided_takeoff_runEv\n 120339                  0x0000000000000000       0xcc\n 120340:  .text._ZN6Copter18guided_takeoff_runEv\n 120341                  0x0000000000000000       0xcc /home/jakob/Github/ArduPilot-CG/ArduCopter/control_guided.cpp.o\n 120342:                 0x0000000000000000                Copter::guided_takeoff_run()\n 120343  \n 120344  .text._ZN6Copter22guided_pos_control_runEv\n .....\n 122163                  0x0000000000000000                Copter::position_ok()\n 122164  \n 122165: .text._ZN6Copter29current_mode_has_user_takeoffEb\n 122166                  0x0000000000000000       0x2e\n 122167:  .text._ZN6Copter29current_mode_has_user_takeoffEb\n 122168:                 0x0000000000000000       0x2e /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 122169:                 0x0000000000000000                Copter::current_mode_has_user_takeoff(bool)\n 122170  \n 122171: .text._ZN6Copter19takeoff_timer_startEf\n 122172                  0x0000000000000000       0x94\n 122173:  .text._ZN6Copter19takeoff_timer_startEf\n 122174:                 0x0000000000000000       0x94 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 122175:                 0x0000000000000000                Copter::takeoff_timer_start(float)\n 122176  \n 122177: .text._ZN6Copter15do_user_takeoffEfb\n 122178                  0x0000000000000000       0xa0\n 122179:  .text._ZN6Copter15do_user_takeoffEfb\n 122180:                 0x0000000000000000       0xa0 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 122181:                 0x0000000000000000                Copter::do_user_takeoff(float, bool)\n 122182  \n 122183: .text._ZN6Copter12takeoff_stopEv\n 122184                  0x0000000000000000       0x10\n 122185:  .text._ZN6Copter12takeoff_stopEv\n 122186:                 0x0000000000000000       0x10 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 122187:                 0x0000000000000000                Copter::takeoff_stop()\n 122188  \n 122189: .text._ZN6Copter23takeoff_get_climb_ratesERfS0_\n 122190                  0x0000000000000000      0x124\n 122191:  .text._ZN6Copter23takeoff_get_climb_ratesERfS0_\n 122192:                 0x0000000000000000      0x124 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 122193:                 0x0000000000000000                Copter::takeoff_get_climb_rates(float&, float&)\n 122194  \n 122195  .text._ZN6Copter14terrain_updateEv\n .....\n 130117                  0x0000000000000000                AP_AHRS_NavEKF::get_variances(float&, float&, float&, Vector3<float>&, float&, Vector2<float>&) const\n 130118  \n 130119: .text._ZN14AP_AHRS_NavEKF18setTakeoffExpectedEb\n 130120                  0x0000000000000000       0x1e\n 130121:  .text._ZN14AP_AHRS_NavEKF18setTakeoffExpectedEb\n 130122                  0x0000000000000000       0x1e libraries/AP_AHRS/AP_AHRS_NavEKF.cpp.o\n 130123:                 0x0000000000000000                AP_AHRS_NavEKF::setTakeoffExpected(bool)\n 130124  \n 130125  .text._ZN14AP_AHRS_NavEKF20setTouchdownExpectedEb\n .....\n 130233                  0x0000000000000000        0x2 libraries/AP_NavEKF/AP_NavEKF_core.cpp.o\n 130234  \n 130235: .text._ZN11NavEKF_core20detectOptFlowTakeoffEv.part.19\n 130236                  0x0000000000000000       0x50\n 130237:  .text._ZN11NavEKF_core20detectOptFlowTakeoffEv.part.19\n 130238                  0x0000000000000000       0x50 libraries/AP_NavEKF/AP_NavEKF_core.cpp.o\n 130239  \n .....\n 130621                  0x0000000000000000                NavEKF_core::setOriginLLH(Location&)\n 130622  \n 130623: .text._ZN11NavEKF_core18getTakeoffExpectedEv\n 130624                  0x0000000000000000       0x2c\n 130625:  .text._ZN11NavEKF_core18getTakeoffExpectedEv\n 130626                  0x0000000000000000       0x2c libraries/AP_NavEKF/AP_NavEKF_core.cpp.o\n 130627:                 0x0000000000000000                NavEKF_core::getTakeoffExpected()\n 130628  \n 130629: .text._ZN11NavEKF_core18setTakeoffExpectedEb\n 130630                  0x0000000000000000       0x1c\n 130631:  .text._ZN11NavEKF_core18setTakeoffExpectedEb\n 130632                  0x0000000000000000       0x1c libraries/AP_NavEKF/AP_NavEKF_core.cpp.o\n 130633:                 0x0000000000000000                NavEKF_core::setTakeoffExpected(bool)\n 130634  \n 130635  .text._ZN11NavEKF_core20getTouchdownExpectedEv\n .....\n 130651                  0x0000000000000000                NavEKF_core::prearm_failure_reason() const\n 130652  \n 130653: .text._ZN11NavEKF_core20detectOptFlowTakeoffEv\n 130654                  0x0000000000000000       0x10\n 130655:  .text._ZN11NavEKF_core20detectOptFlowTakeoffEv\n 130656                  0x0000000000000000       0x10 libraries/AP_NavEKF/AP_NavEKF_core.cpp.o\n 130657:                 0x0000000000000000                NavEKF_core::detectOptFlowTakeoff()\n 130658  \n 130659  .text._ZNK11NavEKF_core13getQuaternionER10Quaternion\n .....\n 131295                  0x0000000000000000                NavEKF::getFlowDebug(float&, float&, float&, float&, float&, float&, float&, float&, float&) const\n 131296  \n 131297: .text._ZN6NavEKF18setTakeoffExpectedEb\n 131298                  0x0000000000000000        0xa\n 131299:  .text._ZN6NavEKF18setTakeoffExpectedEb\n 131300                  0x0000000000000000        0xa libraries/AP_NavEKF/AP_NavEKF.cpp.o\n 131301:                 0x0000000000000000                NavEKF::setTakeoffExpected(bool)\n 131302  \n 131303  .text._ZN6NavEKF20setTouchdownExpectedEb\n .....\n 131981                  0x0000000000000000                NavEKF2::getFlowDebug(signed char, float&, float&, float&, float&, float&, float&, float&, float&, float&)\n 131982  \n 131983: .text._ZN7NavEKF218setTakeoffExpectedEb\n 131984                  0x0000000000000000       0x2e\n 131985:  .text._ZN7NavEKF218setTakeoffExpectedEb\n 131986                  0x0000000000000000       0x2e libraries/AP_NavEKF2/AP_NavEKF2.cpp.o\n 131987:                 0x0000000000000000                NavEKF2::setTakeoffExpected(bool)\n 131988  \n 131989  .text._ZN7NavEKF220setTouchdownExpectedEb\n .....\n 132523                  0x0000000000000000                NavEKF2_core::calcGpsGoodForFlight()\n 132524  \n 132525: .text._ZN12NavEKF2_core18getTakeoffExpectedEv\n 132526                  0x0000000000000000       0x30\n 132527:  .text._ZN12NavEKF2_core18getTakeoffExpectedEv\n 132528                  0x0000000000000000       0x30 libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp.o\n 132529:                 0x0000000000000000                NavEKF2_core::getTakeoffExpected()\n 132530  \n 132531: .text._ZN12NavEKF2_core18setTakeoffExpectedEb\n 132532                  0x0000000000000000       0x1a\n 132533:  .text._ZN12NavEKF2_core18setTakeoffExpectedEb\n 132534                  0x0000000000000000       0x1a libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp.o\n 132535:                 0x0000000000000000                NavEKF2_core::setTakeoffExpected(bool)\n 132536  \n 132537  .text._ZN12NavEKF2_core20getTouchdownExpectedEv\n .....\n 132547                  0x0000000000000000                NavEKF2_core::setTouchdownExpected(bool)\n 132548  \n 132549: .text._ZN12NavEKF2_core20detectOptFlowTakeoffEv\n 132550                  0x0000000000000000      0x118\n 132551:  .text._ZN12NavEKF2_core20detectOptFlowTakeoffEv\n 132552                  0x0000000000000000      0x118 libraries/AP_NavEKF2/AP_NavEKF2_VehicleStatus.cpp.o\n 132553:                 0x0000000000000000                NavEKF2_core::detectOptFlowTakeoff()\n 132554  \n 132555  .text._ZN12NavEKF2_core18calcGpsGoodToAlignEv\n .....\n 132702                  0x0000000000000000                AP_Mission::get_next_cmd(unsigned short, AP_Mission::Mission_Command&, bool)\n 132703  \n 132704: .text._ZN10AP_Mission23starts_with_takeoff_cmdEv\n 132705                  0x0000000000000000       0x44\n 132706:  .text._ZN10AP_Mission23starts_with_takeoff_cmdEv\n 132707                  0x0000000000000000       0x44 libraries/AP_Mission/AP_Mission.cpp.o\n 132708:                 0x0000000000000000                AP_Mission::starts_with_takeoff_cmd()\n 132709  \n 132710  .text._ZN10AP_Mission16get_next_nav_cmdEtRNS_15Mission_CommandE\n .....\n 133423                  0x0000000000000000                AC_PosControl::set_alt_target_from_climb_rate_ff(float, float, bool)\n 133424  \n 133425: .text._ZN13AC_PosControl22add_takeoff_climb_rateEff\n 133426                  0x0000000000000000        0xe\n 133427:  .text._ZN13AC_PosControl22add_takeoff_climb_rateEff\n 133428                  0x0000000000000000        0xe libraries/AC_AttitudeControl/AC_PosControl.cpp.o\n 133429:                 0x0000000000000000                AC_PosControl::add_takeoff_climb_rate(float, float)\n 133430  \n 133431  .text._ZN13AC_PosControl26relax_alt_hold_controllersEf\n .....\n 133441                  0x0000000000000000                AC_PosControl::get_alt_error() const\n 133442  \n 133443: .text._ZN13AC_PosControl12init_takeoffEv\n 133444                  0x0000000000000000       0x60\n 133445:  .text._ZN13AC_PosControl12init_takeoffEv\n 133446                  0x0000000000000000       0x60 libraries/AC_AttitudeControl/AC_PosControl.cpp.o\n 133447:                 0x0000000000000000                AC_PosControl::init_takeoff()\n 133448  \n 133449  .text._ZNK13AC_PosControl11is_active_zEv\n .....\n 143962   .data          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 143963   .data          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 143964:  .data          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 143965   .data          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 143966   .data          0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 144367   .bss           0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 144368   .bss           0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 144369:  .bss           0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 144370   .bss           0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 144371   .bss           0x0000000000000000        0x0 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 145830   .comment       0x00000000000017d6       0x71 /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 145831   .comment       0x0000000000001847       0x71 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 145832:  .comment       0x00000000000018b8       0x71 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 145833   .comment       0x0000000000001929       0x71 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 145834   .comment       0x000000000000199a       0x71 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 149576                  0x00000000000014d0       0xc0 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 149577   .debug_aranges\n 149578:                 0x0000000000001590       0x40 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 149579   .debug_aranges\n 149580                  0x00000000000015d0       0x30 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n .....\n 150171   .debug_info    0x0000000000216524     0xe556 /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 150172   .debug_info    0x0000000000224a7a    0x11a8c /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 150173:  .debug_info    0x0000000000236506     0xd9d9 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 150174   .debug_info    0x0000000000243edf     0xbf9e /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 150175   .debug_info    0x000000000024fe7d     0x8e22 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 150497   .debug_abbrev  0x000000000001cbbf      0xa5d /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 150498   .debug_abbrev  0x000000000001d61c      0xc23 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 150499:  .debug_abbrev  0x000000000001e23f      0xa14 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 150500   .debug_abbrev  0x000000000001ec53      0x912 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 150501   .debug_abbrev  0x000000000001f565      0xb19 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 150823   .debug_line    0x00000000000d08fd     0x3f1c /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 150824   .debug_line    0x00000000000d4819     0x3f27 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 150825:  .debug_line    0x00000000000d8740     0x3ca5 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 150826   .debug_line    0x00000000000dc3e5     0x3bd2 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 150827   .debug_line    0x00000000000dffb7     0x3e94 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 151145   .debug_frame   0x0000000000004210      0x138 /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 151146   .debug_frame   0x0000000000004348      0x1e8 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 151147:  .debug_frame   0x0000000000004530       0xb4 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 151148   .debug_frame   0x00000000000045e4       0x5c /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 151149   .debug_frame   0x0000000000004640      0x1fc /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 151444   .debug_str     0x00000000010eccb6    0x55d7d /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 151445   .debug_str     0x0000000001142a33    0x58e28 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 151446:  .debug_str     0x000000000119b85b    0x55493 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 151447   .debug_str     0x00000000011f0cee    0x532e9 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 151448   .debug_str     0x0000000001243fd7    0x4d8b8 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 151766   .debug_loc     0x000000000001aa3d      0xe8d /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 151767   .debug_loc     0x000000000001b8ca      0x89b /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 151768:  .debug_loc     0x000000000001c165      0x391 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 151769   .debug_loc     0x000000000001c4f6       0xd9 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 151770   .debug_loc     0x000000000001c5cf      0xc37 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 152075   .debug_ranges  0x0000000000004390      0x128 /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 152076   .debug_ranges  0x00000000000044b8      0x238 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 152077:  .debug_ranges  0x00000000000046f0       0xb8 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 152078   .debug_ranges  0x00000000000047a8       0x38 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 152079   .debug_ranges  0x00000000000047e0      0x208 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 152374   .debug_macro   0x00000000000349a2      0xf8f /home/jakob/Github/ArduPilot-CG/ArduCopter/switches.cpp.o\n 152375   .debug_macro   0x0000000000035931      0xf98 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 152376:  .debug_macro   0x00000000000368c9      0xf89 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 152377   .debug_macro   0x0000000000037852      0xf89 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n 152378   .debug_macro   0x00000000000387db      0xf88 /home/jakob/Github/ArduPilot-CG/ArduCopter/test.cpp.o\n .....\n 152761                  0x0000000000000b63       0x35 /home/jakob/Github/ArduPilot-CG/ArduCopter/system.cpp.o\n 152762   .ARM.attributes\n 152763:                 0x0000000000000b98       0x35 /home/jakob/Github/ArduPilot-CG/ArduCopter/takeoff.cpp.o\n 152764   .ARM.attributes\n 152765                  0x0000000000000bcd       0x35 /home/jakob/Github/ArduPilot-CG/ArduCopter/terrain.cpp.o\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Images/px4fmu-v2_APM.bin:\n    <binary>\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/ROMFS/px4fmu_common/init.d/4030_solo:\n   24      param set INAV_W_Z_GPS_V    0.8\n   25  \n   26:     # takeoff, land and RTL settings\n   27:     param set MIS_TAKEOFF_ALT   4.0\n   28      param set COM_DISARM_LAND   1\n   29      param set RTL_LAND_DELAY    1\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/Tools/mavlink_px4.py:\n  288  MAV_CMD_NAV_RETURN_TO_LAUNCH = 20 # Return to launch location\n  289  MAV_CMD_NAV_LAND = 21 # Land at location\n  290: MAV_CMD_NAV_TAKEOFF = 22 # Takeoff from ground / hand\n  291  MAV_CMD_NAV_ROI = 80 # Sets the region of interest (ROI) for a sensor set or the vehicle\n  292                          # itself. This can then be used by the\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/nuttx_mindpx-v2_default.cmake:\n  129  	lib/launchdetection\n  130  	lib/terrain_estimation\n  131: 	lib/runway_takeoff\n  132  	lib/tailsitter_recovery\n  133  	platforms/nuttx\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/nuttx_px4fmu-v1_default.cmake:\n  113  	lib/launchdetection\n  114  	lib/terrain_estimation\n  115: 	lib/runway_takeoff\n  116  	lib/tailsitter_recovery\n  117  	platforms/nuttx\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/nuttx_px4fmu-v2_default.cmake:\n  123  	lib/launchdetection\n  124  	lib/terrain_estimation\n  125: 	lib/runway_takeoff\n  126  	lib/tailsitter_recovery\n  127  	platforms/nuttx\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/nuttx_px4fmu-v2_ekf2.cmake:\n  122  	lib/launchdetection\n  123  	lib/terrain_estimation\n  124: 	lib/runway_takeoff\n  125  	lib/tailsitter_recovery\n  126  	platforms/nuttx\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/nuttx_px4fmu-v4_default.cmake:\n  123  	lib/launchdetection\n  124  	lib/terrain_estimation\n  125: 	lib/runway_takeoff\n  126  	lib/tailsitter_recovery\n  127  	platforms/nuttx\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/posix_eagle_default.cmake:\n   53  	lib/geo_lookup\n   54  	lib/terrain_estimation\n   55: 	lib/runway_takeoff\n   56  	lib/tailsitter_recovery\n   57  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/posix_rpi2_default.cmake:\n   43  	lib/launchdetection\n   44  	lib/terrain_estimation\n   45: 	lib/runway_takeoff\n   46  	lib/tailsitter_recovery\n   47  )\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/posix_rpi2_release.cmake:\n   52  	lib/launchdetection\n   53  	lib/terrain_estimation\n   54: 	lib/runway_takeoff\n   55  	lib/tailsitter_recovery\n   56  )\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/posix_sitl_default.cmake:\n   60  	lib/launchdetection\n   61  	lib/terrain_estimation\n   62: 	lib/runway_takeoff\n   63  	lib/tailsitter_recovery\n   64  	examples/px4_simple_app\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/posix_sitl_ekf2.cmake:\n   60  	lib/launchdetection\n   61  	lib/terrain_estimation\n   62: 	lib/runway_takeoff\n   63  	lib/tailsitter_recovery\n   64  	examples/px4_simple_app\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/qurt_eagle_default.cmake:\n   75  	lib/conversion\n   76  	lib/terrain_estimation\n   77: 	lib/runway_takeoff\n   78  	lib/tailsitter_recovery\n   79  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/qurt_eagle_hil.cmake:\n   50  	lib/conversion\n   51  	lib/terrain_estimation\n   52: 	lib/runway_takeoff\n   53  	lib/tailsitter_recovery\n   54  	modules/controllib\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/qurt_eagle_release.cmake:\n   82  	lib/conversion\n   83  	lib/terrain_estimation\n   84: 	lib/runway_takeoff\n   85  	lib/tailsitter_recovery\n   86  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/cmake/configs/qurt_eagle_travis.cmake:\n   65  	lib/ecl\n   66  	lib/terrain_estimation\n   67: 	lib/runway_takeoff\n   68  	lib/tailsitter_recovery\n   69  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/ASLUAV/ASLUAV.h:\n   46  	MAV_CMD_NAV_RETURN_TO_LAUNCH=20, /* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n   47  	MAV_CMD_NAV_LAND=21, /* Land at location |Abort Alt| Empty| Empty| Desired yaw angle| Latitude| Longitude| Altitude|  */\n   48: 	MAV_CMD_NAV_TAKEOFF=22, /* Takeoff from ground / hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  */\n   49  	MAV_CMD_NAV_LAND_LOCAL=23, /* Land at local position (local frame only) |Landing target number (if available)| Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land| Landing descend rate [ms^-1]| Desired yaw angle [rad]| Y-axis position [m]| X-axis position [m]| Z-axis / ground level position [m]|  */\n   50: 	MAV_CMD_NAV_TAKEOFF_LOCAL=24, /* Takeoff from local position (local frame only) |Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]| Empty| Takeoff ascend rate [ms^-1]| Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these| Y-axis position [m]| X-axis position [m]| Z-axis position [m]|  */\n   51  	MAV_CMD_NAV_FOLLOW=25, /* Vehicle following, i.e. this waypoint represents the position of a moving vehicle |Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation| Ground speed of vehicle to be followed| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  */\n   52  	MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT=30, /* Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached. |Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. | Empty| Empty| Empty| Empty| Empty| Desired altitude in meters|  */\n   ..\n   57  	MAV_CMD_NAV_PATHPLANNING=81, /* Control autonomous path planning on the MAV. |0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning| 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid| Empty| Yaw angle at goal, in compass degrees, [0..360]| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   58  	MAV_CMD_NAV_SPLINE_WAYPOINT=82, /* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   59: 	MAV_CMD_NAV_VTOL_TAKEOFF=84, /* Takeoff from ground using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   60  	MAV_CMD_NAV_VTOL_LAND=85, /* Land using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   61  	MAV_CMD_NAV_GUIDED_ENABLE=92, /* hand control over to an external controller |On / Off (> 0.5f on)| Empty| Empty| Empty| Empty| Empty| Empty|  */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/ardupilotmega/ardupilotmega.h:\n   46  	MAV_CMD_NAV_RETURN_TO_LAUNCH=20, /* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n   47  	MAV_CMD_NAV_LAND=21, /* Land at location |Abort Alt| Empty| Empty| Desired yaw angle| Latitude| Longitude| Altitude|  */\n   48: 	MAV_CMD_NAV_TAKEOFF=22, /* Takeoff from ground / hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  */\n   49  	MAV_CMD_NAV_LAND_LOCAL=23, /* Land at local position (local frame only) |Landing target number (if available)| Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land| Landing descend rate [ms^-1]| Desired yaw angle [rad]| Y-axis position [m]| X-axis position [m]| Z-axis / ground level position [m]|  */\n   50: 	MAV_CMD_NAV_TAKEOFF_LOCAL=24, /* Takeoff from local position (local frame only) |Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]| Empty| Takeoff ascend rate [ms^-1]| Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these| Y-axis position [m]| X-axis position [m]| Z-axis position [m]|  */\n   51  	MAV_CMD_NAV_FOLLOW=25, /* Vehicle following, i.e. this waypoint represents the position of a moving vehicle |Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation| Ground speed of vehicle to be followed| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  */\n   52  	MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT=30, /* Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached. |Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. | Empty| Empty| Empty| Empty| Empty| Desired altitude in meters|  */\n   ..\n   58  	MAV_CMD_NAV_SPLINE_WAYPOINT=82, /* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   59  	MAV_CMD_NAV_ALTITUDE_WAIT=83, /* Mission command to wait for an altitude or downwards vertical speed. This is meant for high altitude balloon launches, allowing the aircraft to be idle until either an altitude is reached or a negative vertical speed is reached (indicating early balloon burst). The wiggle time is how often to wiggle the control surfaces to prevent them seizing up. |altitude (m)| descent speed (m/s)| Wiggle Time (s)| Empty| Empty| Empty| Empty|  */\n   60: 	MAV_CMD_NAV_VTOL_TAKEOFF=84, /* Takeoff from ground using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   61  	MAV_CMD_NAV_VTOL_LAND=85, /* Land using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   62  	MAV_CMD_NAV_GUIDED_ENABLE=92, /* hand control over to an external controller |On / Off (> 0.5f on)| Empty| Empty| Empty| Empty| Empty| Empty|  */\n   ..\n  123  	MAV_CMD_POWER_OFF_INITIATED=42000, /* A system wide power-off event has been initiated. |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  124  	MAV_CMD_SOLO_BTN_FLY_CLICK=42001, /* FLY button has been clicked. |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  125: 	MAV_CMD_SOLO_BTN_FLY_HOLD=42002, /* FLY button has been held for 1.5 seconds. |Takeoff altitude| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  126  	MAV_CMD_SOLO_BTN_PAUSE_CLICK=42003, /* PAUSE button has been clicked. |1 if Solo is in a shot mode, 0 otherwise| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  127  	MAV_CMD_DO_START_MAG_CAL=42424, /* Initiate a magnetometer calibration |uint8_t bitmask of magnetometers (0 means all)| Automatically retry on failure (0=no retry, 1=retry).| Save without user input (0=require input, 1=autosave).| Delay (seconds)| Autoreboot (0=user reboot, 1=autoreboot)| Empty| Empty|  */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/autoquad/autoquad.h:\n   73  	MAV_CMD_NAV_RETURN_TO_LAUNCH=20, /* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n   74  	MAV_CMD_NAV_LAND=21, /* Land at location |Abort Alt| Empty| Empty| Desired yaw angle| Latitude| Longitude| Altitude|  */\n   75: 	MAV_CMD_NAV_TAKEOFF=22, /* Takeoff from ground / hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  */\n   76  	MAV_CMD_NAV_LAND_LOCAL=23, /* Land at local position (local frame only) |Landing target number (if available)| Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land| Landing descend rate [ms^-1]| Desired yaw angle [rad]| Y-axis position [m]| X-axis position [m]| Z-axis / ground level position [m]|  */\n   77: 	MAV_CMD_NAV_TAKEOFF_LOCAL=24, /* Takeoff from local position (local frame only) |Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]| Empty| Takeoff ascend rate [ms^-1]| Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these| Y-axis position [m]| X-axis position [m]| Z-axis position [m]|  */\n   78  	MAV_CMD_NAV_FOLLOW=25, /* Vehicle following, i.e. this waypoint represents the position of a moving vehicle |Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation| Ground speed of vehicle to be followed| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  */\n   79  	MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT=30, /* Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached. |Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. | Empty| Empty| Empty| Empty| Empty| Desired altitude in meters|  */\n   ..\n   84  	MAV_CMD_NAV_PATHPLANNING=81, /* Control autonomous path planning on the MAV. |0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning| 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid| Empty| Yaw angle at goal, in compass degrees, [0..360]| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   85  	MAV_CMD_NAV_SPLINE_WAYPOINT=82, /* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   86: 	MAV_CMD_NAV_VTOL_TAKEOFF=84, /* Takeoff from ground using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   87  	MAV_CMD_NAV_VTOL_LAND=85, /* Land using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   88  	MAV_CMD_NAV_GUIDED_ENABLE=92, /* hand control over to an external controller |On / Off (> 0.5f on)| Empty| Empty| Empty| Empty| Empty| Empty|  */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/common/common.h:\n  358  	MAV_CMD_NAV_RETURN_TO_LAUNCH=20, /* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n  359  	MAV_CMD_NAV_LAND=21, /* Land at location |Abort Alt| Empty| Empty| Desired yaw angle| Latitude| Longitude| Altitude|  */\n  360: 	MAV_CMD_NAV_TAKEOFF=22, /* Takeoff from ground / hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  */\n  361  	MAV_CMD_NAV_LAND_LOCAL=23, /* Land at local position (local frame only) |Landing target number (if available)| Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land| Landing descend rate [ms^-1]| Desired yaw angle [rad]| Y-axis position [m]| X-axis position [m]| Z-axis / ground level position [m]|  */\n  362: 	MAV_CMD_NAV_TAKEOFF_LOCAL=24, /* Takeoff from local position (local frame only) |Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]| Empty| Takeoff ascend rate [ms^-1]| Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these| Y-axis position [m]| X-axis position [m]| Z-axis position [m]|  */\n  363  	MAV_CMD_NAV_FOLLOW=25, /* Vehicle following, i.e. this waypoint represents the position of a moving vehicle |Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation| Ground speed of vehicle to be followed| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  */\n  364  	MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT=30, /* Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached. |Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. | Empty| Empty| Empty| Empty| Empty| Desired altitude in meters|  */\n  ...\n  369  	MAV_CMD_NAV_PATHPLANNING=81, /* Control autonomous path planning on the MAV. |0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning| 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid| Empty| Yaw angle at goal, in compass degrees, [0..360]| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n  370  	MAV_CMD_NAV_SPLINE_WAYPOINT=82, /* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n  371: 	MAV_CMD_NAV_VTOL_TAKEOFF=84, /* Takeoff from ground using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n  372  	MAV_CMD_NAV_VTOL_LAND=85, /* Land using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n  373  	MAV_CMD_NAV_GUIDED_ENABLE=92, /* hand control over to an external controller |On / Off (> 0.5f on)| Empty| Empty| Empty| Empty| Empty| Empty|  */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/common/mavlink_msg_home_position.h:\n   11   float y; /*< Local Y position of this position in the local coordinate frame*/\n   12   float z; /*< Local Z position of this position in the local coordinate frame*/\n   13:  float q[4]; /*< World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground*/\n   14:  float approach_x; /*< Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   15:  float approach_y; /*< Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   16:  float approach_z; /*< Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   17  } mavlink_home_position_t;\n   18  \n   ..\n   54   * @param y Local Y position of this position in the local coordinate frame\n   55   * @param z Local Z position of this position in the local coordinate frame\n   56:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n   57:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   58:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   59:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   60   * @return length of the message in bytes (excluding serial stream start sign)\n   61   */\n   ..\n  111   * @param y Local Y position of this position in the local coordinate frame\n  112   * @param z Local Z position of this position in the local coordinate frame\n  113:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  114:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  115:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  116:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  117   * @return length of the message in bytes (excluding serial stream start sign)\n  118   */\n  ...\n  194   * @param y Local Y position of this position in the local coordinate frame\n  195   * @param z Local Z position of this position in the local coordinate frame\n  196:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  197:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  198:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  199:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  200   */\n  201  #ifdef MAVLINK_USE_CONVENIENCE_FUNCTIONS\n  ...\n  356   * @brief Get field q from home_position message\n  357   *\n  358:  * @return World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  359   */\n  360  static inline uint16_t mavlink_msg_home_position_get_q(const mavlink_message_t* msg, float *q)\n  ...\n  366   * @brief Get field approach_x from home_position message\n  367   *\n  368:  * @return Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  369   */\n  370  static inline float mavlink_msg_home_position_get_approach_x(const mavlink_message_t* msg)\n  ...\n  376   * @brief Get field approach_y from home_position message\n  377   *\n  378:  * @return Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  379   */\n  380  static inline float mavlink_msg_home_position_get_approach_y(const mavlink_message_t* msg)\n  ...\n  386   * @brief Get field approach_z from home_position message\n  387   *\n  388:  * @return Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  389   */\n  390  static inline float mavlink_msg_home_position_get_approach_z(const mavlink_message_t* msg)\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/common/mavlink_msg_set_home_position.h:\n   11   float y; /*< Local Y position of this position in the local coordinate frame*/\n   12   float z; /*< Local Z position of this position in the local coordinate frame*/\n   13:  float q[4]; /*< World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground*/\n   14:  float approach_x; /*< Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   15:  float approach_y; /*< Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   16:  float approach_z; /*< Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.*/\n   17   uint8_t target_system; /*< System ID.*/\n   18  } mavlink_set_home_position_t;\n   ..\n   57   * @param y Local Y position of this position in the local coordinate frame\n   58   * @param z Local Z position of this position in the local coordinate frame\n   59:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n   60:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   61:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   62:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n   63   * @return length of the message in bytes (excluding serial stream start sign)\n   64   */\n   ..\n  117   * @param y Local Y position of this position in the local coordinate frame\n  118   * @param z Local Z position of this position in the local coordinate frame\n  119:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  120:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  121:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  122:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  123   * @return length of the message in bytes (excluding serial stream start sign)\n  124   */\n  ...\n  203   * @param y Local Y position of this position in the local coordinate frame\n  204   * @param z Local Z position of this position in the local coordinate frame\n  205:  * @param q World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  206:  * @param approach_x Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  207:  * @param approach_y Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  208:  * @param approach_z Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  209   */\n  210  #ifdef MAVLINK_USE_CONVENIENCE_FUNCTIONS\n  ...\n  379   * @brief Get field q from set_home_position message\n  380   *\n  381:  * @return World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground\n  382   */\n  383  static inline uint16_t mavlink_msg_set_home_position_get_q(const mavlink_message_t* msg, float *q)\n  ...\n  389   * @brief Get field approach_x from set_home_position message\n  390   *\n  391:  * @return Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  392   */\n  393  static inline float mavlink_msg_set_home_position_get_approach_x(const mavlink_message_t* msg)\n  ...\n  399   * @brief Get field approach_y from set_home_position message\n  400   *\n  401:  * @return Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  402   */\n  403  static inline float mavlink_msg_set_home_position_get_approach_y(const mavlink_message_t* msg)\n  ...\n  409   * @brief Get field approach_z from set_home_position message\n  410   *\n  411:  * @return Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.\n  412   */\n  413  static inline float mavlink_msg_set_home_position_get_approach_z(const mavlink_message_t* msg)\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/matrixpilot/matrixpilot.h:\n   63  	MAV_CMD_NAV_RETURN_TO_LAUNCH=20, /* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n   64  	MAV_CMD_NAV_LAND=21, /* Land at location |Abort Alt| Empty| Empty| Desired yaw angle| Latitude| Longitude| Altitude|  */\n   65: 	MAV_CMD_NAV_TAKEOFF=22, /* Takeoff from ground / hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  */\n   66  	MAV_CMD_NAV_LAND_LOCAL=23, /* Land at local position (local frame only) |Landing target number (if available)| Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land| Landing descend rate [ms^-1]| Desired yaw angle [rad]| Y-axis position [m]| X-axis position [m]| Z-axis / ground level position [m]|  */\n   67: 	MAV_CMD_NAV_TAKEOFF_LOCAL=24, /* Takeoff from local position (local frame only) |Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]| Empty| Takeoff ascend rate [ms^-1]| Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these| Y-axis position [m]| X-axis position [m]| Z-axis position [m]|  */\n   68  	MAV_CMD_NAV_FOLLOW=25, /* Vehicle following, i.e. this waypoint represents the position of a moving vehicle |Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation| Ground speed of vehicle to be followed| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  */\n   69  	MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT=30, /* Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached. |Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. | Empty| Empty| Empty| Empty| Empty| Desired altitude in meters|  */\n   ..\n   74  	MAV_CMD_NAV_PATHPLANNING=81, /* Control autonomous path planning on the MAV. |0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning| 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid| Empty| Yaw angle at goal, in compass degrees, [0..360]| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   75  	MAV_CMD_NAV_SPLINE_WAYPOINT=82, /* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   76: 	MAV_CMD_NAV_VTOL_TAKEOFF=84, /* Takeoff from ground using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   77  	MAV_CMD_NAV_VTOL_LAND=85, /* Land using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   78  	MAV_CMD_NAV_GUIDED_ENABLE=92, /* hand control over to an external controller |On / Off (> 0.5f on)| Empty| Empty| Empty| Empty| Empty| Empty|  */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/message_definitions/ardupilotmega.xml:\n   75              <entry name=\"MAV_CMD_SOLO_BTN_FLY_HOLD\" value=\"42002\">\n   76                  <description>FLY button has been held for 1.5 seconds.</description>\n   77:                 <param index=\"1\">Takeoff altitude</param>\n   78                  <param index=\"2\">Empty</param>\n   79                  <param index=\"3\">Empty</param>\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/message_definitions/common.xml:\n  627                      <param index=\"7\">Altitude</param>\n  628                 </entry>\n  629:                <entry value=\"22\" name=\"MAV_CMD_NAV_TAKEOFF\">\n  630:                     <description>Takeoff from ground / hand</description>\n  631                      <param index=\"1\">Minimum pitch (if airspeed sensor present), desired pitch without sensor</param>\n  632                      <param index=\"2\">Empty</param>\n  ...\n  647                      <param index=\"7\">Z-axis / ground level position [m]</param>\n  648                 </entry>\n  649:                <entry value=\"24\" name=\"MAV_CMD_NAV_TAKEOFF_LOCAL\">\n  650:                     <description>Takeoff from local position (local frame only)</description>\n  651                      <param index=\"1\">Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]</param>\n  652                      <param index=\"2\">Empty</param>\n  653:                     <param index=\"3\">Takeoff ascend rate [ms^-1]</param>\n  654                      <param index=\"4\">Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these</param>\n  655                      <param index=\"5\">Y-axis position [m]</param>\n  ...\n  737                      <param index=\"7\">Altitude/Z of goal</param>\n  738                 </entry>\n  739:                <entry value=\"84\" name=\"MAV_CMD_NAV_VTOL_TAKEOFF\">\n  740:                     <description>Takeoff from ground using VTOL mode</description>\n  741                      <param index=\"1\">Empty</param>\n  742                      <param index=\"2\">Empty</param>\n  ...\n 3094          </message>\n 3095          <message id=\"242\" name=\"HOME_POSITION\">\n 3096:                <description>This message can be requested by sending the MAV_CMD_GET_HOME_POSITION command. The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitely set by the operator before or after. The position the system will return to and land on. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>\n 3097                 <field type=\"int32_t\" name=\"latitude\">Latitude (WGS84), in degrees * 1E7</field>\n 3098                 <field type=\"int32_t\" name=\"longitude\">Longitude (WGS84, in degrees * 1E7</field>\n ....\n 3101                 <field type=\"float\" name=\"y\">Local Y position of this position in the local coordinate frame</field>\n 3102                 <field type=\"float\" name=\"z\">Local Z position of this position in the local coordinate frame</field>\n 3103:                <field type=\"float[4]\" name=\"q\">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>\n 3104:                <field type=\"float\" name=\"approach_x\">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3105:                <field type=\"float\" name=\"approach_y\">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3106:                <field type=\"float\" name=\"approach_z\">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3107          </message>\n 3108          <message id=\"243\" name=\"SET_HOME_POSITION\">\n 3109:                <description>The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitely set by the operator before or after. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>\n 3110                 <field type=\"uint8_t\" name=\"target_system\">System ID.</field>\n 3111                 <field type=\"int32_t\" name=\"latitude\">Latitude (WGS84), in degrees * 1E7</field>\n ....\n 3115                 <field type=\"float\" name=\"y\">Local Y position of this position in the local coordinate frame</field>\n 3116                 <field type=\"float\" name=\"z\">Local Z position of this position in the local coordinate frame</field>\n 3117:                <field type=\"float[4]\" name=\"q\">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>\n 3118:                <field type=\"float\" name=\"approach_x\">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3119:                <field type=\"float\" name=\"approach_y\">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3120:                <field type=\"float\" name=\"approach_z\">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3121          </message>\n 3122          <message id=\"244\" name=\"MESSAGE_INTERVAL\">\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/mavlink/include/mavlink/v1.0/slugs/slugs.h:\n   46  	MAV_CMD_NAV_RETURN_TO_LAUNCH=20, /* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  */\n   47  	MAV_CMD_NAV_LAND=21, /* Land at location |Abort Alt| Empty| Empty| Desired yaw angle| Latitude| Longitude| Altitude|  */\n   48: 	MAV_CMD_NAV_TAKEOFF=22, /* Takeoff from ground / hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  */\n   49  	MAV_CMD_NAV_LAND_LOCAL=23, /* Land at local position (local frame only) |Landing target number (if available)| Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land| Landing descend rate [ms^-1]| Desired yaw angle [rad]| Y-axis position [m]| X-axis position [m]| Z-axis / ground level position [m]|  */\n   50: 	MAV_CMD_NAV_TAKEOFF_LOCAL=24, /* Takeoff from local position (local frame only) |Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]| Empty| Takeoff ascend rate [ms^-1]| Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these| Y-axis position [m]| X-axis position [m]| Z-axis position [m]|  */\n   51  	MAV_CMD_NAV_FOLLOW=25, /* Vehicle following, i.e. this waypoint represents the position of a moving vehicle |Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation| Ground speed of vehicle to be followed| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  */\n   52  	MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT=30, /* Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached. |Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. | Empty| Empty| Empty| Empty| Empty| Desired altitude in meters|  */\n   ..\n   57  	MAV_CMD_NAV_PATHPLANNING=81, /* Control autonomous path planning on the MAV. |0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning| 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid| Empty| Yaw angle at goal, in compass degrees, [0..360]| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   58  	MAV_CMD_NAV_SPLINE_WAYPOINT=82, /* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal|  */\n   59: 	MAV_CMD_NAV_VTOL_TAKEOFF=84, /* Takeoff from ground using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   60  	MAV_CMD_NAV_VTOL_LAND=85, /* Land using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  */\n   61  	MAV_CMD_NAV_GUIDED_ENABLE=92, /* hand control over to an external controller |On / Off (> 0.5f on)| Empty| Empty| Empty| Empty| Empty| Empty|  */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/msg/fw_virtual_attitude_setpoint.msg:\n   32  bool yaw_reset_integral				# Reset yaw integral part (navigation logic change)\n   33  \n   34: bool fw_control_yaw					# control heading with rudder (used for auto takeoff on runway)\n   35  bool disable_mc_yaw_control			# control yaw for mc (used for vtol weather-vane mode)\n   36  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/msg/home_position.msg:\n   11  \n   12  float32 yaw				# Yaw angle in radians\n   13: float32 direction_x		# Takeoff direction in NED X\n   14: float32 direction_y		# Takeoff direction in NED Y\n   15: float32 direction_z		# Takeoff direction in NED Z\n   16  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/msg/mc_virtual_attitude_setpoint.msg:\n   32  bool yaw_reset_integral				# Reset yaw integral part (navigation logic change)\n   33  \n   34: bool fw_control_yaw					# control heading with rudder (used for auto takeoff on runway)\n   35  bool disable_mc_yaw_control			# control yaw for mc (used for vtol weather-vane mode)\n   36  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/msg/position_setpoint.msg:\n    4  uint8 SETPOINT_TYPE_VELOCITY=1	# velocity setpoint\n    5  uint8 SETPOINT_TYPE_LOITER=2	# loiter setpoint\n    6: uint8 SETPOINT_TYPE_TAKEOFF=3	# takeoff setpoint\n    7  uint8 SETPOINT_TYPE_LAND=4	# land setpoint, altitude must be ignored, descend until landing\n    8  uint8 SETPOINT_TYPE_IDLE=5	# do nothing, switch off motors or keep at idle speed (MC)\n    .\n   30  float32 loiter_radius		# loiter radius (only for fixed wing), in m\n   31  int8 loiter_direction		# loiter direction: 1 = CW, -1 = CCW\n   32: float32 pitch_min		# minimal pitch angle for fixed wing takeoff waypoints\n   33  float32 a_x			# acceleration x setpoint\n   34  float32 a_y			# acceleration y setpoint\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/msg/tecs_status.msg:\n    1  uint8 TECS_MODE_NORMAL = 0\n    2  uint8 TECS_MODE_UNDERSPEED = 1\n    3: uint8 TECS_MODE_TAKEOFF = 2\n    4  uint8 TECS_MODE_LAND = 3\n    5  uint8 TECS_MODE_LAND_THROTTLELIM = 4\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/msg/vehicle_attitude_setpoint.msg:\n   32  bool yaw_reset_integral				# Reset yaw integral part (navigation logic change)\n   33  \n   34: bool fw_control_yaw					# control heading with rudder (used for auto takeoff on runway)\n   35  bool disable_mc_yaw_control			# control yaw for mc (used for vtol weather-vane mode)\n   36  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/msg/vehicle_command.msg:\n    9  uint32 VEHICLE_CMD_NAV_RETURN_TO_LAUNCH = 20		# Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty| \n   10  uint32 VEHICLE_CMD_NAV_LAND = 21			# Land at location |Empty| Empty| Empty| Desired yaw angle.| Latitude| Longitude| Altitude| \n   11: uint32 VEHICLE_CMD_NAV_TAKEOFF = 22			# Takeoff from ground / hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude| \n   12  uint32 VEHICLE_CMD_NAV_ROI = 80				# Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras. |Region of intereset mode. (see MAV_ROI enum)| MISSION index/ target ID. (see MAV_ROI enum)| ROI index (allows a vehicle to manage multiple ROI's)| Empty| x the location of the fixed ROI (see MAV_FRAME)| y| z| \n   13  uint32 VEHICLE_CMD_NAV_PATHPLANNING = 81		# Control autonomous path planning on the MAV. |0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning| 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid| Empty| Yaw angle at goal, in compass degrees, [0..360]| Latitude/X of goal| Longitude/Y of goal| Altitude/Z of goal| \n   14: uint32 VEHICLE_CMD_NAV_VTOL_TAKEOFF = 84		# Takeoff from ground / hand and transition to fixed wing |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|\n   15  uint32 VEHICLE_CMD_NAV_VTOL_LAND = 85			# Transition to MC and land at location |Empty| Empty| Empty| Desired yaw angle.| Latitude| Longitude| Altitude|\n   16  uint32 VEHICLE_CMD_NAV_GUIDED_LIMITS = 90		# set limits for external control |timeout - maximum time (in seconds) that external controller will be allowed to control vehicle. 0 means no timeout| absolute altitude min (in meters, AMSL) - if vehicle moves below this alt, the command will be aborted and the mission will continue.  0 means no lower altitude limit| absolute altitude max (in meters)- if vehicle moves above this alt, the command will be aborted and the mission will continue.  0 means no upper altitude limit| horizontal move limit (in meters, AMSL) - if vehicle moves more than this distance from it's location at the moment the command was executed, the command will be aborted and the mission will continue. 0 means no horizontal altitude limit| Empty| Empty| Empty| \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/msg/vehicle_status.msg:\n   10  uint8 MAIN_STATE_STAB = 8\n   11  uint8 MAIN_STATE_RATTITUDE = 9\n   12: uint8 MAIN_STATE_AUTO_TAKEOFF = 10\n   13  uint8 MAIN_STATE_AUTO_LAND = 11\n   14  uint8 MAIN_STATE_AUTO_FOLLOW_TARGET = 12\n   ..\n   47  uint8 NAVIGATION_STATE_STAB = 15		# Stabilized mode\n   48  uint8 NAVIGATION_STATE_RATTITUDE = 16		# Rattitude (aka \"flip\") mode\n   49: uint8 NAVIGATION_STATE_AUTO_TAKEOFF = 17	# Takeoff\n   50  uint8 NAVIGATION_STATE_AUTO_LAND = 18		# Land\n   51  uint8 NAVIGATION_STATE_AUTO_FOLLOW_TARGET = 19	# Auto Follow\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/posix-configs/SITL/init/rcS_gazebo_iris:\n   28  param set RTL_DESCEND_ALT 10.0\n   29  param set RTL_LAND_DELAY 0\n   30: param set MIS_TAKEOFF_ALT 2.5\n   31  param set MC_ROLLRATE_P 0.25\n   32  param set MC_PITCHRATE_P 0.25\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/posix-configs/SITL/init/rcS_gazebo_iris_opt_flow:\n   28  param set RTL_DESCEND_ALT 10.0\n   29  param set RTL_LAND_DELAY 0\n   30: param set MIS_TAKEOFF_ALT 2.5\n   31  param set MC_ROLLRATE_P 0.25\n   32  param set MC_PITCHRATE_P 0.25\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/posix-configs/SITL/init/rcS_jmavsim_iris:\n   37  param set RTL_DESCEND_ALT 10.0\n   38  param set RTL_LAND_DELAY 0\n   39: param set MIS_TAKEOFF_ALT 2.5\n   40  param set MPC_HOLD_MAX_Z 2.0\n   41  param set MPC_HOLD_XY_DZ 0.1\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/ecl/l1/ecl_l1_pos_controller.h:\n  199  	 *\n  200  	 * This is typically needed for maximum-lift-demand situations,\n  201: 	 * such as takeoff or near stall. Introduced in [2].\n  202  	 */\n  203  	void navigate_level_flight(float current_heading);\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/external_lgpl/tecs/tecs.cpp:\n  428  	// A SKE_weighting of 0 provides 100% priority to height control. This is used when no airspeed measurement is available\n  429  	// A SKE_weighting of 2 provides 100% priority to speed control. This is used when an underspeed condition is detected\n  430: 	// or during takeoff/climbout where a minimum pitch angle is set to ensure height is gained. In this instance, if airspeed\n  431  	// rises above the demanded value, the pitch angle will be increased by the TECS controller.\n  432  	float SKE_weighting = constrain(_spdWeight, 0.0f, 2.0f);\n  ...\n  462  	// 5deg of saturation. This allows for some pitch variation due to gusts before the\n  463  	// integrator is clipped. Otherwise the effectiveness of the integrator will be reduced in turbulence\n  464: 	// During climbout/takeoff, bias the demanded pitch angle so that zero speed error produces a pitch angle\n  465  	// demand equal to the minimum value (which is )set by the mission plan during this mode). Otherwise the\n  466  	// integrator has to catch up before the nose can be raised to reduce speed during climbout.\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/launchdetection/LaunchDetector.cpp:\n   49  	activeLaunchDetectionMethodIndex(-1),\n   50  	launchdetection_on(this, \"ALL_ON\"),\n   51: 	throttlePreTakeoff(nullptr, \"FW_THR_IDLE\")\n   52  {\n   53  	/* init all detectors */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/launchdetection/LaunchDetector.h:\n   63  	bool launchDetectionEnabled() { return (bool)launchdetection_on.get(); };\n   64  \n   65: 	float getThrottlePreTakeoff() {return throttlePreTakeoff.get(); }\n   66  \n   67  	/* Returns a maximum pitch in deg. Different launch methods may impose upper pitch limits during launch */\n   ..\n   79  	LaunchMethod *launchMethods[1];\n   80  	control::BlockParamInt launchdetection_on;\n   81: 	control::BlockParamFloat throttlePreTakeoff;\n   82  \n   83  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/launchdetection/LaunchMethod.h:\n   49  	LAUNCHDETECTION_RES_DETECTED_ENABLECONTROL = 1, /**< Launch has been detected, the controller should\n   50  							  control the attitude. However any motors should not throttle\n   51: 							  up and still be set to 'throttlePreTakeoff'.\n   52  							  For instance this is used to have a delay for the motor\n   53  							  when launching a fixed wing aircraft from a bungee */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/runway_takeoff/CMakeLists.txt:\n   32  ############################################################################\n   33  px4_add_module(\n   34: 	MODULE lib__runway_takeoff\n   35  	COMPILE_FLAGS\n   36  		-Os\n   37  	SRCS\n   38: 		RunwayTakeoff.cpp\n   39  	DEPENDS\n   40  		platforms__common\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/runway_takeoff/RunwayTakeoff.cpp:\n   32   ****************************************************************************/\n   33  /**\n   34:  * @file RunwayTakeoff.cpp\n   35:  * Runway takeoff handling for fixed-wing UAVs with steerable wheels.\n   36   *\n   37   * @author Roman Bapst <roman@px4.io>\n   ..\n   43  #include <math.h>\n   44  \n   45: #include \"RunwayTakeoff.h\"\n   46  #include <controllib/blocks.hpp>\n   47  #include <controllib/block/BlockParam.hpp>\n   ..\n   49  #include <mathlib/mathlib.h>\n   50  \n   51: namespace runwaytakeoff\n   52  {\n   53  \n   54: RunwayTakeoff::RunwayTakeoff() :\n   55  	SuperBlock(NULL, \"RWTO\"),\n   56  	_state(),\n   ..\n   61  	_throttle_ramp_time(2 * 1e6),\n   62  	_start_wp(),\n   63: 	_runway_takeoff_enabled(this, \"TKOFF\"),\n   64  	_heading_mode(this, \"HDG\"),\n   65  	_nav_alt(this, \"NAV_ALT\"),\n   66: 	_takeoff_throttle(this, \"MAX_THR\"),\n   67  	_runway_pitch_sp(this, \"PSP\"),\n   68: 	_max_takeoff_pitch(this, \"MAX_PITCH\"),\n   69: 	_max_takeoff_roll(this, \"MAX_ROLL\"),\n   70  	_min_airspeed_scaling(this, \"AIRSPD_SCL\"),\n   71  	_airspeed_min(this, \"FW_AIRSPD_MIN\", false),\n   ..\n   76  }\n   77  \n   78: RunwayTakeoff::~RunwayTakeoff()\n   79  {\n   80  \n   81  }\n   82  \n   83: void RunwayTakeoff::init(float yaw, double current_lat, double current_lon)\n   84  {\n   85  	_init_yaw = yaw;\n   86  	_initialized = true;\n   87: 	_state = RunwayTakeoffState::THROTTLE_RAMP;\n   88  	_initialized_time = hrt_absolute_time();\n   89  	_climbout = true; // this is true until climbout is finished\n   ..\n   92  }\n   93  \n   94: void RunwayTakeoff::update(float airspeed, float alt_agl,\n   95  			   double current_lat, double current_lon, orb_advert_t *mavlink_log_pub)\n   96  {\n   97  \n   98  	switch (_state) {\n   99: 	case RunwayTakeoffState::THROTTLE_RAMP:\n  100  		if (hrt_elapsed_time(&_initialized_time) > _throttle_ramp_time) {\n  101: 			_state = RunwayTakeoffState::CLAMPED_TO_RUNWAY;\n  102  		}\n  103  \n  104  		break;\n  105  \n  106: 	case RunwayTakeoffState::CLAMPED_TO_RUNWAY:\n  107  		if (airspeed > _airspeed_min.get() * _min_airspeed_scaling.get()) {\n  108: 			_state = RunwayTakeoffState::TAKEOFF;\n  109: 			mavlink_log_info(mavlink_log_pub, \"#Takeoff airspeed reached\");\n  110  		}\n  111  \n  112  		break;\n  113  \n  114: 	case RunwayTakeoffState::TAKEOFF:\n  115  		if (alt_agl > _nav_alt.get()) {\n  116: 			_state = RunwayTakeoffState::CLIMBOUT;\n  117  \n  118  			/*\n  119  			 * If we started in heading hold mode, move the navigation start WP to the current location now.\n  120: 			 * The navigator will take this as starting point to navigate towards the takeoff WP.\n  121  			 */\n  122  			if (_heading_mode.get() == 0) {\n  ...\n  130  		break;\n  131  \n  132: 	case RunwayTakeoffState::CLIMBOUT:\n  133  		if (alt_agl > _climbout_diff.get()) {\n  134  			_climbout = false;\n  135: 			_state = RunwayTakeoffState::FLY;\n  136  			mavlink_log_info(mavlink_log_pub, \"#Navigating to waypoint\");\n  137  		}\n  ...\n  147   * Returns true as long as we're below navigation altitude\n  148   */\n  149: bool RunwayTakeoff::controlYaw()\n  150  {\n  151  	// keep controlling yaw directly until we start navigation\n  152: 	return _state < RunwayTakeoffState::CLIMBOUT;\n  153  }\n  154  \n  ...\n  159   * use the one from TECS\n  160   */\n  161: float RunwayTakeoff::getPitch(float tecsPitch)\n  162  {\n  163: 	if (_state <= RunwayTakeoffState::CLAMPED_TO_RUNWAY) {\n  164  		return math::radians(_runway_pitch_sp.get());\n  165  	}\n  ...\n  171   * Returns the roll setpoint to use.\n  172   */\n  173: float RunwayTakeoff::getRoll(float navigatorRoll)\n  174  {\n  175  	// until we have enough ground clearance, set roll to 0\n  176: 	if (_state < RunwayTakeoffState::CLIMBOUT) {\n  177  		return 0.0f;\n  178  	}\n  179  \n  180  	// allow some roll during climbout\n  181: 	else if (_state < RunwayTakeoffState::FLY) {\n  182  		return math::constrain(navigatorRoll,\n  183: 				       math::radians(-_max_takeoff_roll.get()),\n  184: 				       math::radians(_max_takeoff_roll.get()));\n  185  	}\n  186  \n  ...\n  194   * runway. When it has enough ground clearance we start navigation towards WP.\n  195   */\n  196: float RunwayTakeoff::getYaw(float navigatorYaw)\n  197  {\n  198: 	if (_heading_mode.get() == 0 && _state < RunwayTakeoffState::CLIMBOUT) {\n  199  		return _init_yaw;\n  200  \n  ...\n  210   * parameter value, then it returns the TECS throttle.\n  211   */\n  212: float RunwayTakeoff::getThrottle(float tecsThrottle)\n  213  {\n  214  	switch (_state) {\n  215: 	case RunwayTakeoffState::THROTTLE_RAMP: {\n  216  			float throttle = hrt_elapsed_time(&_initialized_time) / (float)_throttle_ramp_time *\n  217: 					 _takeoff_throttle.get();\n  218: 			return throttle < _takeoff_throttle.get() ?\n  219  			       throttle :\n  220: 			       _takeoff_throttle.get();\n  221  		}\n  222  \n  223: 	case RunwayTakeoffState::CLAMPED_TO_RUNWAY:\n  224: 		return _takeoff_throttle.get();\n  225  \n  226  	default:\n  ...\n  229  }\n  230  \n  231: bool RunwayTakeoff::resetIntegrators()\n  232  {\n  233  	// reset integrators if we're still on runway\n  234: 	return _state < RunwayTakeoffState::TAKEOFF;\n  235  }\n  236  \n  ...\n  242   * Otherwise use the minimum that is enforced generally (parameter).\n  243   */\n  244: float RunwayTakeoff::getMinPitch(float sp_min, float climbout_min, float min)\n  245  {\n  246: 	if (_state < RunwayTakeoffState::FLY) {\n  247  		return math::max(sp_min, climbout_min);\n  248  	}\n  ...\n  258   * Limited by parameter (if set) until climbout is done.\n  259   */\n  260: float RunwayTakeoff::getMaxPitch(float max)\n  261  {\n  262  	// use max pitch from parameter if set (> 0.1)\n  263: 	if (_state < RunwayTakeoffState::FLY && _max_takeoff_pitch.get() > 0.1f) {\n  264: 		return _max_takeoff_pitch.get();\n  265  	}\n  266  \n  ...\n  273   * Returns the \"previous\" (start) WP for navigation.\n  274   */\n  275: math::Vector<2> RunwayTakeoff::getStartWP()\n  276  {\n  277  	return _start_wp;\n  278  }\n  279  \n  280: void RunwayTakeoff::reset()\n  281  {\n  282  	_initialized = false;\n  283: 	_state = RunwayTakeoffState::THROTTLE_RAMP;\n  284  }\n  285  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/runway_takeoff/RunwayTakeoff.h:\n   32   ****************************************************************************/\n   33  /**\n   34:  * @file RunwayTakeoff.h\n   35:  * Runway takeoff handling for fixed-wing UAVs with steerable wheels.\n   36   *\n   37   * @author Roman Bapst <roman@px4.io>\n   ..\n   39   */\n   40  \n   41: #ifndef RUNWAYTAKEOFF_H\n   42: #define RUNWAYTAKEOFF_H\n   43  \n   44  #include <stdbool.h>\n   ..\n   52  #include <mathlib/mathlib.h>\n   53  \n   54: namespace runwaytakeoff\n   55  {\n   56  \n   57: enum RunwayTakeoffState {\n   58  	THROTTLE_RAMP = 0, /**< ramping up throttle */\n   59  	CLAMPED_TO_RUNWAY = 1, /**< clamped to runway, controlling yaw directly (wheel or rudder) */\n   60: 	TAKEOFF = 2, /**< taking off, get ground clearance, roll 0 */\n   61  	CLIMBOUT = 3, /**< climbout to safe height before navigation, roll limited */\n   62: 	FLY = 4 /**< fly towards takeoff waypoint */\n   63  };\n   64  \n   65: class __EXPORT RunwayTakeoff : public control::SuperBlock\n   66  {\n   67  public:\n   68: 	RunwayTakeoff();\n   69: 	~RunwayTakeoff();\n   70  \n   71  	void init(float yaw, double current_lat, double current_lon);\n   72  	void update(float airspeed, float alt_agl, double current_lat, double current_lon, orb_advert_t *mavlink_log_pub);\n   73  \n   74: 	RunwayTakeoffState getState() { return _state; };\n   75  	bool isInitialized() { return _initialized; };\n   76  \n   77: 	bool runwayTakeoffEnabled() { return (bool)_runway_takeoff_enabled.get(); };\n   78  	float getMinAirspeedScaling() { return _min_airspeed_scaling.get(); };\n   79  	float getInitYaw() { return _init_yaw; };\n   ..\n   95  private:\n   96  	/** state variables **/\n   97: 	RunwayTakeoffState _state;\n   98  	bool _initialized;\n   99  	hrt_abstime _initialized_time;\n  ...\n  104  \n  105  	/** parameters **/\n  106: 	control::BlockParamInt _runway_takeoff_enabled;\n  107  	control::BlockParamInt _heading_mode;\n  108  	control::BlockParamFloat _nav_alt;\n  109: 	control::BlockParamFloat _takeoff_throttle;\n  110  	control::BlockParamFloat _runway_pitch_sp;\n  111: 	control::BlockParamFloat _max_takeoff_pitch;\n  112: 	control::BlockParamFloat _max_takeoff_roll;\n  113  	control::BlockParamFloat _min_airspeed_scaling;\n  114  	control::BlockParamFloat _airspeed_min;\n  ...\n  119  }\n  120  \n  121: #endif // RUNWAYTAKEOFF_H\n  122  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/lib/runway_takeoff/runway_takeoff_params.c:\n   33  \n   34  /**\n   35:  * @file runway_takeoff_params.c\n   36   *\n   37:  * Parameters for runway takeoff\n   38   *\n   39   * @author Andreas Antener <andreas@uaventure.com>\n   ..\n   41  \n   42  /**\n   43:  * Enable or disable runway takeoff with landing gear\n   44   *\n   45   * 0: disabled, 1: enabled\n   46   *\n   47   * @boolean\n   48:  * @group Runway Takeoff\n   49   */\n   50  PARAM_DEFINE_INT32(RWTO_TKOFF, 0);\n   51  \n   52  /**\n   53:  * Specifies which heading should be held during runnway takeoff.\n   54   *\n   55:  * 0: airframe heading, 1: heading towards takeoff waypoint\n   56   *\n   57   * @value 0 Airframe\n   ..\n   59   * @min 0\n   60   * @max 1\n   61:  * @group Runway Takeoff\n   62   */\n   63  PARAM_DEFINE_INT32(RWTO_HDG, 0);\n   ..\n   72   * @min 0.0\n   73   * @max 100.0\n   74:  * @group Runway Takeoff\n   75   */\n   76  PARAM_DEFINE_FLOAT(RWTO_NAV_ALT, 5.0);\n   77  \n   78  /**\n   79:  * Max throttle during runway takeoff.\n   80   * (Can be used to test taxi on runway)\n   81   *\n   82   * @min 0.0\n   83   * @max 1.0\n   84:  * @group Runway Takeoff\n   85   */\n   86  PARAM_DEFINE_FLOAT(RWTO_MAX_THR, 1.0);\n   87  \n   88  /**\n   89:  * Pitch setpoint during taxi / before takeoff airspeed is reached.\n   90   * A taildragger with stearable wheel might need to pitch up\n   91   * a little to keep it's wheel on the ground before airspeed\n   92:  * to takeoff is reached.\n   93   *\n   94   * @unit deg\n   95   * @min 0.0\n   96   * @max 20.0\n   97:  * @group Runway Takeoff\n   98   */\n   99  PARAM_DEFINE_FLOAT(RWTO_PSP, 0.0);\n  100  \n  101  /**\n  102:  * Max pitch during takeoff.\n  103   * Fixed-wing settings are used if set to 0. Note that there is also a minimum\n  104:  * pitch of 10 degrees during takeoff, so this must be larger if set.\n  105   *\n  106   * @unit deg\n  107   * @min 0.0\n  108   * @max 60.0\n  109:  * @group Runway Takeoff\n  110   */\n  111  PARAM_DEFINE_FLOAT(RWTO_MAX_PITCH, 20.0);\n  ...\n  119   * @min 0.0\n  120   * @max 60.0\n  121:  * @group Runway Takeoff\n  122   */\n  123  PARAM_DEFINE_FLOAT(RWTO_MAX_ROLL, 25.0);\n  124  \n  125  /**\n  126:  * Min. airspeed scaling factor for takeoff.\n  127   * Pitch up will be commanded when the following airspeed is reached:\n  128   * FW_AIRSPD_MIN * RWTO_AIRSPD_SCL\n  ...\n  130   * @min 0.0\n  131   * @max 2.0\n  132:  * @group Runway Takeoff\n  133   */\n  134  PARAM_DEFINE_FLOAT(RWTO_AIRSPD_SCL, 1.3);\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/commander/commander.cpp:\n  410  	}\n  411  \n  412: 	if (!strcmp(argv[1], \"takeoff\")) {\n  413  \n  414  		/* see if we got a home position */\n  ...\n  421  				cmd.target_component = status.component_id;\n  422  \n  423: 				cmd.command = vehicle_command_s::VEHICLE_CMD_NAV_TAKEOFF;\n  424  				// cmd.param1 = 0.25f; /* minimum pitch */\n  425  				// /* param 2-3 unused */\n  ...\n  437  \n  438  		} else {\n  439: 			warnx(\"rejecting takeoff, no position lock yet. Please retry..\");\n  440  		}\n  441  \n  ...\n  486  			} else if (!strcmp(argv[2], \"rattitude\")) {\n  487  				new_main_state = vehicle_status_s::MAIN_STATE_RATTITUDE;\n  488: 			} else if (!strcmp(argv[2], \"auto:takeoff\")) {\n  489: 				new_main_state = vehicle_status_s::MAIN_STATE_AUTO_TAKEOFF;\n  490  			} else if (!strcmp(argv[2], \"auto:land\")) {\n  491  				new_main_state = vehicle_status_s::MAIN_STATE_AUTO_LAND;\n  ...\n  535  	}\n  536  \n  537: 	PX4_INFO(\"usage: commander {start|stop|status|calibrate|check|arm|disarm|takeoff|land|mode}\\n\");\n  538  }\n  539  \n  ...\n  696  							main_ret = main_state_transition(status_local, vehicle_status_s::MAIN_STATE_AUTO_RTL);\n  697  							break;\n  698: 						case PX4_CUSTOM_SUB_MODE_AUTO_TAKEOFF:\n  699: 							main_ret = main_state_transition(status_local, vehicle_status_s::MAIN_STATE_AUTO_TAKEOFF);\n  700  							break;\n  701  						case PX4_CUSTOM_SUB_MODE_AUTO_LAND:\n  ...\n  981  		break;\n  982  \n  983: 	case vehicle_command_s::VEHICLE_CMD_NAV_TAKEOFF: {\n  984  			/* ok, home set, use it to take off */\n  985: 			if (TRANSITION_CHANGED == main_state_transition(&status, vehicle_status_s::MAIN_STATE_AUTO_TAKEOFF)) {\n  986  				warnx(\"taking off!\");\n  987  			} else {\n  988: 				warnx(\"takeoff denied\");\n  989  			}\n  990  \n  ...\n 1173  	// nav_states_str[vehicle_status_s::NAVIGATION_STATE_AUTO_LOITER]		= \"AUTO_LOITER\";\n 1174  	// nav_states_str[vehicle_status_s::NAVIGATION_STATE_AUTO_RTL]		= \"AUTO_RTL\";\n 1175: 	// nav_states_str[vehicle_status_s::NAVIGATION_STATE_AUTO_TAKEOFF]		= \"AUTO_TAKEOFF\";\n 1176  	// nav_states_str[vehicle_status_s::NAVIGATION_STATE_AUTO_RCRECOVER]		= \"AUTO_RCRECOVER\";\n 1177  	// nav_states_str[vehicle_status_s::NAVIGATION_STATE_AUTO_RTGS]		= \"AUTO_RTGS\";\n ....\n 1903  \n 1904  				} else {\n 1905: 					mavlink_and_console_log_info(&mavlink_log_pub, \"TAKEOFF DETECTED\");\n 1906  				}\n 1907  			}\n ....\n 2007  				mavlink_log_critical(&mavlink_log_pub, \"LOW BATTERY, RETURN TO LAND ADVISED\");\n 2008  			} else {\n 2009: 				mavlink_log_critical(&mavlink_log_pub, \"LOW BATTERY, TAKEOFF DISCOURAGED\");\n 2010  			}\n 2011  			status.battery_warning = vehicle_status_s::VEHICLE_BATTERY_WARNING_LOW;\n ....\n 2489  		}\n 2490  \n 2491: 		/* reset main state after takeoff or land has been completed */\n 2492  		/* only switch back to at least altitude controlled modes */\n 2493  		if (status.main_state_prev == vehicle_status_s::MAIN_STATE_POSCTL ||\n 2494  			status.main_state_prev == vehicle_status_s::MAIN_STATE_ALTCTL) {\n 2495  \n 2496: 			if ((status.main_state == vehicle_status_s::MAIN_STATE_AUTO_TAKEOFF\n 2497  					&& mission_result.finished) ||\n 2498  				(status.main_state == vehicle_status_s::MAIN_STATE_AUTO_LAND\n ....\n 3212  	case vehicle_status_s::NAVIGATION_STATE_AUTO_MISSION:\n 3213  	case vehicle_status_s::NAVIGATION_STATE_AUTO_LOITER:\n 3214: 	case vehicle_status_s::NAVIGATION_STATE_AUTO_TAKEOFF:\n 3215  		control_mode.flag_control_manual_enabled = false;\n 3216  		control_mode.flag_control_auto_enabled = true;\n ....\n 3448  			if (cmd.command == vehicle_command_s::VEHICLE_CMD_DO_SET_MODE ||\n 3449  			    cmd.command == vehicle_command_s::VEHICLE_CMD_COMPONENT_ARM_DISARM ||\n 3450: 			    cmd.command == vehicle_command_s::VEHICLE_CMD_NAV_TAKEOFF ||\n 3451  			    cmd.command == vehicle_command_s::VEHICLE_CMD_DO_SET_SERVO ||\n 3452  			    cmd.command == vehicle_command_s::VEHICLE_CMD_DO_CHANGE_SPEED) {\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/commander/commander_params.c:\n  353   * @value 3 Mission\n  354   * @value 4 Hold\n  355:  * @value 10 Takeoff\n  356   * @value 11 Land\n  357   * @value 5 Return\n  ...\n  375   * @value 3 Mission\n  376   * @value 4 Hold\n  377:  * @value 10 Takeoff\n  378   * @value 11 Land\n  379   * @value 5 Return\n  ...\n  397   * @value 3 Mission\n  398   * @value 4 Hold\n  399:  * @value 10 Takeoff\n  400   * @value 11 Land\n  401   * @value 5 Return\n  ...\n  419   * @value 3 Mission\n  420   * @value 4 Hold\n  421:  * @value 10 Takeoff\n  422   * @value 11 Land\n  423   * @value 5 Return\n  ...\n  441   * @value 3 Mission\n  442   * @value 4 Hold\n  443:  * @value 10 Takeoff\n  444   * @value 11 Land\n  445   * @value 5 Return\n  ...\n  463   * @value 3 Mission\n  464   * @value 4 Hold\n  465:  * @value 10 Takeoff\n  466   * @value 11 Land\n  467   * @value 5 Return\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/commander/px4_custom_mode.h:\n   57  enum PX4_CUSTOM_SUB_MODE_AUTO {\n   58  	PX4_CUSTOM_SUB_MODE_AUTO_READY = 1,\n   59: 	PX4_CUSTOM_SUB_MODE_AUTO_TAKEOFF,\n   60  	PX4_CUSTOM_SUB_MODE_AUTO_LOITER,\n   61  	PX4_CUSTOM_SUB_MODE_AUTO_MISSION,\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/commander/state_machine_helper.cpp:\n  371  	case vehicle_status_s::MAIN_STATE_AUTO_MISSION:\n  372  	case vehicle_status_s::MAIN_STATE_AUTO_RTL:\n  373: 	case vehicle_status_s::MAIN_STATE_AUTO_TAKEOFF:\n  374  	case vehicle_status_s::MAIN_STATE_AUTO_LAND:\n  375  		/* need global position and home position */\n  ...\n  794  		break;\n  795  \n  796: 	case vehicle_status_s::MAIN_STATE_AUTO_TAKEOFF:\n  797  		/* require global position and home */\n  798  \n  ...\n  811  			}\n  812  		} else {\n  813: 			status->nav_state = vehicle_status_s::NAVIGATION_STATE_AUTO_TAKEOFF;\n  814  		}\n  815  		break;\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/fw_pos_control_l1/fw_pos_control_l1_main.cpp:\n   98  #include \"mtecs/mTecs.h\"\n   99  #include <platforms/px4_defines.h>\n  100: #include <runway_takeoff/RunwayTakeoff.h>\n  101  #include <vtol_att_control/vtol_type.h>\n  102  \n  ...\n  185  \n  186  	float	_hold_alt;				/**< hold altitude for altitude mode */\n  187: 	float	_takeoff_ground_alt;				/**< ground altitude at which plane was launched */\n  188  	float	_hdg_hold_yaw;				/**< hold heading for velocity mode */\n  189  	bool	_hdg_hold_enabled;			/**< heading hold enabled */\n  ...\n  212  	hrt_abstime _time_went_in_air;	/**< time at which the plane went in the air */\n  213  \n  214: 	runwaytakeoff::RunwayTakeoff _runway_takeoff;\n  215  \n  216: 	/* takeoff/launch states */\n  217  	LaunchDetectionResult launch_detection_state;\n  218  \n  ...\n  420  \n  421  	/**\n  422: 	 * Return the terrain estimate during takeoff or takeoff_alt if terrain estimate is not available\n  423  	 */\n  424: 	float		get_terrain_altitude_takeoff(float takeoff_alt, const struct vehicle_global_position_s &global_pos);\n  425  \n  426  	/**\n  427: 	 * Check if we are in a takeoff situation\n  428  	 */\n  429: 	bool in_takeoff_situation();\n  430  \n  431  	/**\n  432: 	 * Do takeoff help when in altitude controlled modes\n  433  	 * @param hold_altitude altitude setpoint for controller\n  434  	 * @param pitch_limit_min minimum pitch allowed\n  435  	 */\n  436: 	void 		do_takeoff_help(float *hold_altitude, float *pitch_limit_min);\n  437  \n  438  	/**\n  ...\n  469  \n  470  	/*\n  471: 	 * Reset takeoff state\n  472  	 */\n  473: 	void		reset_takeoff_state();\n  474  \n  475  	/*\n  ...\n  544  \n  545  	_hold_alt(0.0f),\n  546: 	_takeoff_ground_alt(0.0f),\n  547  	_hdg_hold_yaw(0.0f),\n  548  	_hdg_hold_enabled(false),\n  ...\n  566  	_was_in_air(false),\n  567  	_time_went_in_air(0),\n  568: 	_runway_takeoff(),\n  569  	launch_detection_state(LAUNCHDETECTION_RES_NONE),\n  570  	last_manual(false),\n  ...\n  774  	_mTecs.updateParams();\n  775  \n  776: 	_runway_takeoff.updateParams();\n  777  \n  778  	return OK;\n  ...\n 1075  }\n 1076  \n 1077: float FixedwingPositionControl::get_terrain_altitude_takeoff(float takeoff_alt,\n 1078  		const struct vehicle_global_position_s &global_pos)\n 1079  {\n ....\n 1082  	}\n 1083  \n 1084: 	return takeoff_alt;\n 1085  }\n 1086  \n ....\n 1151  }\n 1152  \n 1153: bool FixedwingPositionControl::in_takeoff_situation()\n 1154  {\n 1155: 	const hrt_abstime delta_takeoff = 10000000;\n 1156  	const float throttle_threshold = 0.1f;\n 1157  \n 1158: 	if (hrt_elapsed_time(&_time_went_in_air) < delta_takeoff && _manual.z > throttle_threshold\n 1159: 	    && _global_pos.alt <= _takeoff_ground_alt + _parameters.climbout_diff) {\n 1160  		return true;\n 1161  	}\n ....\n 1164  }\n 1165  \n 1166: void FixedwingPositionControl::do_takeoff_help(float *hold_altitude, float *pitch_limit_min)\n 1167  {\n 1168: 	/* demand \"climbout_diff\" m above ground if user switched into this mode during takeoff */\n 1169: 	if (in_takeoff_situation()) {\n 1170: 		*hold_altitude = _takeoff_ground_alt + _parameters.climbout_diff;\n 1171  		*pitch_limit_min = math::radians(10.0f);\n 1172  \n ....\n 1229  		_was_in_air = true;\n 1230  		_time_went_in_air = hrt_absolute_time();\n 1231: 		_takeoff_ground_alt = _global_pos.alt;\n 1232  	}\n 1233  \n ....\n 1336  			}\n 1337  \n 1338: 			if (in_takeoff_situation() ||\n 1339  			    ((_global_pos.alt < pos_sp_triplet.current.alt + _parameters.climbout_diff)\n 1340  			     && _nav_capabilities.abort_landing == true)) {\n ....\n 1591  			}\n 1592  \n 1593: 		} else if (pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_TAKEOFF) {\n 1594  \n 1595: 			if (_runway_takeoff.runwayTakeoffEnabled()) {\n 1596: 				if (!_runway_takeoff.isInitialized()) {\n 1597  					math::Quaternion q(&_ctrl_state.q[0]);\n 1598  					math::Vector<3> euler = q.to_euler();\n 1599: 					_runway_takeoff.init(euler(2), _global_pos.lat, _global_pos.lon);\n 1600  \n 1601: 					/* need this already before takeoff is detected\n 1602: 					 * doesn't matter if it gets reset when takeoff is detected eventually */\n 1603: 					_takeoff_ground_alt = _global_pos.alt;\n 1604  \n 1605: 					mavlink_log_info(&_mavlink_log_pub, \"#Takeoff on runway\");\n 1606  				}\n 1607  \n 1608: 				float terrain_alt = get_terrain_altitude_takeoff(_takeoff_ground_alt, _global_pos);\n 1609  \n 1610: 				// update runway takeoff helper\n 1611: 				_runway_takeoff.update(\n 1612  					_ctrl_state.airspeed,\n 1613  					_global_pos.alt - terrain_alt,\n ....\n 1617  \n 1618  				/*\n 1619: 				 * Update navigation: _runway_takeoff returns the start WP according to mode and phase.\n 1620  				 * If we use the navigator heading or not is decided later.\n 1621  				 */\n 1622: 				_l1_control.navigate_waypoints(_runway_takeoff.getStartWP(), curr_wp, current_position, ground_speed_2d);\n 1623  \n 1624  				// update tecs\n 1625: 				float takeoff_pitch_max_deg = _runway_takeoff.getMaxPitch(_parameters.pitch_limit_max);\n 1626: 				float takeoff_pitch_max_rad = math::radians(takeoff_pitch_max_deg);\n 1627  \n 1628  				tecs_update_pitch_throttle(pos_sp_triplet.current.alt,\n 1629  							   calculate_target_airspeed(\n 1630: 								   _runway_takeoff.getMinAirspeedScaling() * _parameters.airspeed_min),\n 1631  							   eas2tas,\n 1632  							   math::radians(_parameters.pitch_limit_min),\n 1633: 							   takeoff_pitch_max_rad,\n 1634  							   _parameters.throttle_min,\n 1635: 							   _parameters.throttle_max, // XXX should we also set runway_takeoff_throttle here?\n 1636  							   _parameters.throttle_cruise,\n 1637: 							   _runway_takeoff.climbout(),\n 1638: 							   math::radians(_runway_takeoff.getMinPitch(\n 1639  									   pos_sp_triplet.current.pitch_min,\n 1640  									   10.0f,\n ....\n 1642  							   _global_pos.alt,\n 1643  							   ground_speed,\n 1644: 							   tecs_status_s::TECS_MODE_TAKEOFF,\n 1645: 							   takeoff_pitch_max_deg != _parameters.pitch_limit_max);\n 1646  \n 1647  				// assign values\n 1648: 				_att_sp.roll_body = _runway_takeoff.getRoll(_l1_control.nav_roll());\n 1649: 				_att_sp.yaw_body = _runway_takeoff.getYaw(_l1_control.nav_bearing());\n 1650: 				_att_sp.fw_control_yaw = _runway_takeoff.controlYaw();\n 1651: 				_att_sp.pitch_body = _runway_takeoff.getPitch(get_tecs_pitch());\n 1652  \n 1653  				// reset integrals except yaw (which also counts for the wheel controller)\n 1654: 				_att_sp.roll_reset_integral = _runway_takeoff.resetIntegrators();\n 1655: 				_att_sp.pitch_reset_integral = _runway_takeoff.resetIntegrators();\n 1656  \n 1657  				/*warnx(\"yaw: %.4f, roll: %.4f, pitch: %.4f\", (double)_att_sp.yaw_body,\n ....\n 1677  \n 1678  				} else	{\n 1679: 					/* no takeoff detection --> fly */\n 1680  					launch_detection_state = LAUNCHDETECTION_RES_DETECTED_ENABLEMOTORS;\n 1681  				}\n ....\n 1690  \n 1691  					/* Select throttle: only in LAUNCHDETECTION_RES_DETECTED_ENABLEMOTORS we want to use\n 1692: 					 * full throttle, otherwise we use the preTakeOff Throttle */\n 1693: 					float takeoff_throttle = launch_detection_state !=\n 1694  								 LAUNCHDETECTION_RES_DETECTED_ENABLEMOTORS ?\n 1695: 								 launchDetector.getThrottlePreTakeoff() : _parameters.throttle_max;\n 1696  \n 1697  					/* select maximum pitch: the launchdetector may impose another limit for the pitch\n 1698  					 * depending on the state of the launch */\n 1699: 					float takeoff_pitch_max_deg = launchDetector.getPitchMax(_parameters.pitch_limit_max);\n 1700: 					float takeoff_pitch_max_rad = math::radians(takeoff_pitch_max_deg);\n 1701  \n 1702  					/* apply minimum pitch and limit roll if target altitude is not within climbout_diff\n 1703  					 * meters */\n 1704  					if (_parameters.climbout_diff > 0.001f && altitude_error > _parameters.climbout_diff) {\n 1705: 						/* enforce a minimum of 10 degrees pitch up on takeoff, or take parameter */\n 1706  						tecs_update_pitch_throttle(pos_sp_triplet.current.alt,\n 1707  									   calculate_target_airspeed(1.3f * _parameters.airspeed_min),\n 1708  									   eas2tas,\n 1709  									   math::radians(_parameters.pitch_limit_min),\n 1710: 									   takeoff_pitch_max_rad,\n 1711: 									   _parameters.throttle_min, takeoff_throttle,\n 1712  									   _parameters.throttle_cruise,\n 1713  									   true,\n ....\n 1716  									   _global_pos.alt,\n 1717  									   ground_speed,\n 1718: 									   tecs_status_s::TECS_MODE_TAKEOFF,\n 1719: 									   takeoff_pitch_max_deg != _parameters.pitch_limit_max);\n 1720  \n 1721  						/* limit roll motion to ensure enough lift */\n ....\n 1730  									   math::radians(_parameters.pitch_limit_max),\n 1731  									   _parameters.throttle_min,\n 1732: 									   takeoff_throttle,\n 1733  									   _parameters.throttle_cruise,\n 1734  									   false,\n ....\n 1759  		}\n 1760  \n 1761: 		/* reset takeoff/launch state */\n 1762: 		if (pos_sp_triplet.current.type != position_setpoint_s::SETPOINT_TYPE_TAKEOFF) {\n 1763: 			reset_takeoff_state();\n 1764  		}\n 1765  \n ....\n 1805  		*/\n 1806  		float pitch_limit_min;\n 1807: 		do_takeoff_help(&_hold_alt, &pitch_limit_min);\n 1808  \n 1809  \n ....\n 1839  			}\n 1840  \n 1841: 			/* user tries to do a takeoff in heading hold mode, reset the yaw setpoint on every iteration\n 1842  			  to make sure the plane does not start rolling\n 1843  			*/\n 1844: 			if (in_takeoff_situation()) {\n 1845  				_hdg_hold_enabled = false;\n 1846  				_yaw_lock_engaged = true;\n ....\n 1877  				_att_sp.yaw_body = _l1_control.nav_bearing();\n 1878  \n 1879: 				if (in_takeoff_situation()) {\n 1880  					/* limit roll motion to ensure enough lift */\n 1881  					_att_sp.roll_body = math::constrain(_att_sp.roll_body, math::radians(-15.0f),\n ....\n 1921  		*/\n 1922  		float pitch_limit_min;\n 1923: 		do_takeoff_help(&_hold_alt, &pitch_limit_min);\n 1924  \n 1925  		/* throttle limiting */\n ....\n 1962  		setpoint = false;\n 1963  \n 1964: 		/* reset landing and takeoff state */\n 1965  		if (!last_manual) {\n 1966  			reset_landing_state();\n 1967: 			reset_takeoff_state();\n 1968  		}\n 1969  	}\n ....\n 1975  \n 1976  	} else if (_control_mode_current ==  FW_POSCTRL_MODE_AUTO && // launchdetector only available in auto\n 1977: 		   pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_TAKEOFF &&\n 1978  		   launch_detection_state != LAUNCHDETECTION_RES_DETECTED_ENABLEMOTORS &&\n 1979: 		   !_runway_takeoff.runwayTakeoffEnabled()) {\n 1980  		/* making sure again that the correct thrust is used,\n 1981  		 * without depending on library calls for safety reasons.\n 1982: 		   the pre-takeoff throttle and the idle throttle normally map to the same parameter. */\n 1983: 		_att_sp.thrust = (launchDetector.launchDetectionEnabled()) ? launchDetector.getThrottlePreTakeoff() : _parameters.throttle_idle;\n 1984  \n 1985  	} else if (_control_mode_current ==  FW_POSCTRL_MODE_AUTO &&\n 1986: 		   pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_TAKEOFF &&\n 1987: 		   _runway_takeoff.runwayTakeoffEnabled()) {\n 1988: 		_att_sp.thrust = _runway_takeoff.getThrottle(math::min(get_tecs_thrust(), throttle_max));\n 1989  \n 1990  	} else if (_control_mode_current ==  FW_POSCTRL_MODE_AUTO &&\n ....\n 2005  	}\n 2006  \n 2007: 	/* During a takeoff waypoint while waiting for launch the pitch sp is set\n 2008  	 * already (not by tecs) */\n 2009  	if (!(_control_mode_current ==  FW_POSCTRL_MODE_AUTO && (\n 2010: 		      (pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_TAKEOFF &&\n 2011  		       (launch_detection_state == LAUNCHDETECTION_RES_NONE ||\n 2012: 			_runway_takeoff.runwayTakeoffEnabled())) ||\n 2013  		      (pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_LAND &&\n 2014  		       land_noreturn_vertical))\n ....\n 2188  }\n 2189  \n 2190: void FixedwingPositionControl::reset_takeoff_state()\n 2191  {\n 2192  	launch_detection_state = LAUNCHDETECTION_RES_NONE;\n 2193  	launchDetector.reset();\n 2194: 	_runway_takeoff.reset();\n 2195  }\n 2196  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/fw_pos_control_l1/fw_pos_control_l1_params.c:\n  190   * If the altitude error exceeds this parameter, the system will climb out\n  191   * with maximum throttle and minimum airspeed until it is closer than this\n  192:  * distance to the desired altitude. Mostly used for takeoff waypoints / modes.\n  193   * Set to 0 to disable climbout mode (not recommended).\n  194   *\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/fw_pos_control_l1/mtecs/mTecs.cpp:\n   67  	_throttleSp(0.0f),\n   68  	_pitchSp(0.0f),\n   69: 	_BlockOutputLimiterTakeoffThrottle(this, \"TKF_THR\"),\n   70: 	_BlockOutputLimiterTakeoffPitch(this, \"TKF_PIT\", true),\n   71  	_BlockOutputLimiterUnderspeedThrottle(this, \"USP_THR\"),\n   72  	_BlockOutputLimiterUnderspeedPitch(this, \"USP_PIT\", true),\n   ..\n  206  	}\n  207  \n  208: 	/* Check airspeed: if below safe value switch to underspeed mode (if not in land or takeoff mode) */\n  209: 	if (mode != MTECS_MODE_LAND && mode != MTECS_MODE_TAKEOFF && airspeedFiltered < _airspeedMin.get()) {\n  210  		mode = MTECS_MODE_UNDERSPEED;\n  211  	}\n  ...\n  214  	BlockOutputLimiter *outputLimiterThrottle = &_controlTotalEnergy.getOutputLimiter();\n  215  	BlockOutputLimiter *outputLimiterPitch = &_controlEnergyDistribution.getOutputLimiter();\n  216: 	if (mode == MTECS_MODE_TAKEOFF) {\n  217: 		outputLimiterThrottle = &_BlockOutputLimiterTakeoffThrottle;\n  218: 		outputLimiterPitch = &_BlockOutputLimiterTakeoffPitch;\n  219  	} else if (mode == MTECS_MODE_LAND) {\n  220  		// only limit pitch but do not limit throttle\n  ...\n  229  \n  230  	/* Apply override given by the limitOverride argument (this is used for limits which are not given by\n  231: 	 * parameters such as pitch limits with takeoff waypoints or throttle limits when the launchdetector\n  232  	 * is running) */\n  233  	limitOverride.applyOverride(*outputLimiterThrottle, *outputLimiterPitch);\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/fw_pos_control_l1/mtecs/mTecs.h:\n   62  	MTECS_MODE_NORMAL = 0,\n   63  	MTECS_MODE_UNDERSPEED = 1,\n   64: 	MTECS_MODE_TAKEOFF = 2,\n   65  	MTECS_MODE_LAND = 3,\n   66  	MTECS_MODE_LAND_THROTTLELIM = 4,\n   ..\n  145  \n  146  	/* Output Limits in special modes */\n  147: 	BlockOutputLimiter _BlockOutputLimiterTakeoffThrottle;	    /**< Throttle Limits during takeoff */\n  148: 	BlockOutputLimiter _BlockOutputLimiterTakeoffPitch;	    /**< Pitch Limit during takeoff */\n  149  	BlockOutputLimiter _BlockOutputLimiterUnderspeedThrottle;   /**< Throttle Limits when underspeed is detected */\n  150  	BlockOutputLimiter _BlockOutputLimiterUnderspeedPitch;	    /**< Pitch Limit when underspeed is detected */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/fw_pos_control_l1/mtecs/mTecs_blocks.h:\n  146  };\n  147  \n  148: /* A combination of feed forward, P and I gain using the output limiter with the option to provide a special output limiter (for example for takeoff)*/\n  149  class BlockFFPILimitedCustom: public BlockFFPILimited\n  150  {\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/fw_pos_control_l1/mtecs/mTecs_params.c:\n  290  \n  291  /**\n  292:  * Minimal throttle during takeoff\n  293   *\n  294   * @min 0.0\n  ...\n  299  \n  300  /**\n  301:  * Maximal throttle during takeoff\n  302   *\n  303   * @min 0.0\n  ...\n  308  \n  309  /**\n  310:  * Minimal pitch during takeoff\n  311   *\n  312   * @min -90.0\n  ...\n  318  \n  319  /**\n  320:  * Maximal pitch during takeoff\n  321   *\n  322   * @min -90.0\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/land_detector/LandDetector.cpp:\n  108  		// publish the land detected broadcast\n  109  		orb_publish(ORB_ID(vehicle_land_detected), (orb_advert_t)_landDetectedPub, &_landDetected);\n  110: 		//warnx(\"in air status changed: %s\", (_landDetected.landed) ? \"LANDED\" : \"TAKEOFF\");\n  111  	}\n  112  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mavlink/mavlink_messages.cpp:\n  165  			break;\n  166  \n  167: 		case vehicle_status_s::NAVIGATION_STATE_AUTO_TAKEOFF:\n  168  			*mavlink_base_mode |= MAV_MODE_FLAG_AUTO_ENABLED\n  169  			                      | MAV_MODE_FLAG_STABILIZE_ENABLED\n  170  					      | MAV_MODE_FLAG_GUIDED_ENABLED;\n  171  			custom_mode.main_mode = PX4_CUSTOM_MAIN_MODE_AUTO;\n  172: 			custom_mode.sub_mode = PX4_CUSTOM_SUB_MODE_AUTO_TAKEOFF;\n  173  			break;\n  174  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mavlink/mavlink_mission.cpp:\n  797  \n  798  	switch (mavlink_mission_item->command) {\n  799: 	case MAV_CMD_NAV_TAKEOFF:\n  800  		mission_item->pitch_min = mavlink_mission_item->param1;\n  801  		break;\n  ...\n  865  	// specific item handling\n  866  	switch (mission_item->nav_cmd) {\n  867: 	case NAV_CMD_TAKEOFF:\n  868: 	case NAV_CMD_VTOL_TAKEOFF:\n  869  		mavlink_mission_item->param1 = mission_item->pitch_min;\n  870  		break;\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mavlink/mavlink_receiver.cpp:\n  676  \n  677  \n  678: 		bool is_takeoff_sp = (bool)(set_position_target_local_ned.type_mask & 0x1000);\n  679  		bool is_land_sp = (bool)(set_position_target_local_ned.type_mask & 0x2000);\n  680  		bool is_loiter_sp = (bool)(set_position_target_local_ned.type_mask & 0x3000);\n  ...\n  720  					pos_sp_triplet.current.valid = true;\n  721  \n  722: 					if (is_takeoff_sp) {\n  723: 						pos_sp_triplet.current.type = position_setpoint_s::SETPOINT_TYPE_TAKEOFF;\n  724  \n  725  					} else if (is_land_sp) {\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mc_att_control/mc_att_control_main.cpp:\n  100  \n  101  #define YAW_DEADZONE	0.05f\n  102: #define MIN_TAKEOFF_THRUST    0.2f\n  103  #define RATES_I_LIMIT	0.3f\n  104  #define MANUAL_THROTTLE_MAX_MULTICOPTER	0.9f\n  ...\n  784  \n  785  	/* update integral only if not saturated on low limit and if motor commands are not saturated */\n  786: 	if (_thrust_sp > MIN_TAKEOFF_THRUST && !_motor_limits.lower_limit && !_motor_limits.upper_limit) {\n  787  		for (int i = 0; i < 3; i++) {\n  788  			if (fabsf(_att_control(i)) < _thrust_sp) {\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mc_att_control_multiplatform/mc_att_control.cpp:\n   49  \n   50  #define YAW_DEADZONE	0.05f\n   51: #define MIN_TAKEOFF_THRUST    0.2f\n   52  #define RATES_I_LIMIT	0.3f\n   53  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mc_att_control_multiplatform/mc_att_control_base.cpp:\n  189  \n  190  	/* update integral only if not saturated on low limit */\n  191: 	if (_thrust_sp > MIN_TAKEOFF_THRUST) {\n  192  		for (int i = 0; i < 3; i++) {\n  193  			if (fabsf(_att_control(i)) < _thrust_sp) {\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mc_att_control_multiplatform/mc_att_control_base.h:\n   60  \n   61  #define YAW_DEADZONE	0.05f\n   62: #define MIN_TAKEOFF_THRUST    0.2f\n   63  #define RATES_I_LIMIT	0.3f\n   64  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mc_att_control_multiplatform/mc_att_control_sim.h:\n   65  \n   66  #define YAW_DEADZONE	0.05f\n   67: #define MIN_TAKEOFF_THRUST    0.2f\n   68  #define RATES_I_LIMIT	0.3f\n   69  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mc_pos_control/mc_pos_control_main.cpp:\n  253  	bool _in_landing;	/**< the vehicle is in the landing descent */\n  254  	bool _lnd_reached_ground; /**< controller assumes the vehicle has reached the ground after landing */\n  255: 	bool _takeoff_jumped;\n  256  	float _vel_z_lp;\n  257  	float _acc_z_lp;\n  258: 	float _takeoff_thrust_sp;\n  259  	bool control_vel_enabled_prev;	/**< previous loop was in velocity controlled mode (control_state.flag_control_velocity_enabled) */\n  260  \n  ...\n  385  	_in_landing(false),\n  386  	_lnd_reached_ground(false),\n  387: 	_takeoff_jumped(false),\n  388  	_vel_z_lp(0),\n  389  	_acc_z_lp(0),\n  390: 	_takeoff_thrust_sp(0.0f),\n  391  	control_vel_enabled_prev(false)\n  392  {\n  ...\n  579  		_params.mc_att_yaw_p = v;\n  580  \n  581: 		/* takeoff and land velocities should not exceed maximum */\n  582  		_params.tko_speed = fminf(_params.tko_speed, _params.vel_max(2));\n  583  		_params.land_speed = fminf(_params.land_speed, _params.vel_max(2));\n  ...\n 1123  \n 1124  		/*\n 1125: 		 * if we're already near the current takeoff setpoint don't reset in case we switch back to posctl.\n 1126: 		 * this makes the takeoff finish smoothly.\n 1127  		 */\n 1128: 		if ((_pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_TAKEOFF\n 1129  				|| _pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_LOITER)\n 1130  				&& _pos_sp_triplet.current.acceptance_radius > 0.0f\n 1131: 				/* need to detect we're close a bit before the navigator switches from takeoff to next waypoint */\n 1132  				&& (_pos - _pos_sp).length() < _pos_sp_triplet.current.acceptance_radius * 1.2f) {\n 1133  			_reset_pos_sp = false;\n ....\n 1456  				}\n 1457  \n 1458: 				/* special thrust setpoint generation for takeoff from ground */\n 1459  				if (!_control_mode.flag_control_manual_enabled && _pos_sp_triplet.current.valid\n 1460: 						&& _pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_TAKEOFF\n 1461  						&& _control_mode.flag_armed) {\n 1462  \n 1463  					// check if we are not already in air.\n 1464: 					// if yes then we don't need a jumped takeoff anymore\n 1465: 					if (!_takeoff_jumped && !_vehicle_status.condition_landed && fabsf(_takeoff_thrust_sp) < FLT_EPSILON) {\n 1466: 						_takeoff_jumped = true;\n 1467  					}\n 1468  \n 1469: 					if (!_takeoff_jumped) {\n 1470  						// ramp thrust setpoint up\n 1471  						if (_vel(2) > -(_params.tko_speed / 2.0f)) {\n 1472: 							_takeoff_thrust_sp += 0.5f * dt;\n 1473  							_vel_sp.zero();\n 1474  							_vel_prev.zero();\n 1475  \n 1476  						} else {\n 1477: 							// copter has reached our takeoff speed. split the thrust setpoint up\n 1478  							// into an integral part and into a P part\n 1479: 							thrust_int(2) = _takeoff_thrust_sp - _params.vel_p(2) * fabsf(_vel(2));\n 1480  							thrust_int(2) = -math::constrain(thrust_int(2), _params.thr_min, _params.thr_max);\n 1481  							_vel_sp_prev(2) = -_params.tko_speed;\n 1482: 							_takeoff_jumped = true;\n 1483  							reset_int_z = false;\n 1484  						}\n 1485  					}\n 1486  \n 1487: 					if (_takeoff_jumped) {\n 1488  						_vel_sp(2) = -_params.tko_speed;\n 1489  					}\n 1490  \n 1491  				} else {\n 1492: 					_takeoff_jumped = false;\n 1493: 					_takeoff_thrust_sp = 0.0f;\n 1494  				}\n 1495  \n ....\n 1592  					math::Vector<3> thrust_sp = vel_err.emult(_params.vel_p) + _vel_err_d.emult(_params.vel_d) + thrust_int;\n 1593  \n 1594: 					if (_pos_sp_triplet.current.type == position_setpoint_s::SETPOINT_TYPE_TAKEOFF\n 1595: 							&& !_takeoff_jumped && !_control_mode.flag_control_manual_enabled) {\n 1596: 						// for jumped takeoffs use special thrust setpoint calculated above\n 1597  						thrust_sp.zero();\n 1598: 						thrust_sp(2) = -_takeoff_thrust_sp;\n 1599  					}\n 1600  \n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mc_pos_control/mc_pos_control_params.c:\n  156   * Integral gain for vertical velocity error\n  157   *\n  158:  * Non zero value allows hovering thrust estimation on stabilized or autonomous takeoff.\n  159   *\n  160   * @min 0.0\n  ...\n  311  \n  312  /**\n  313:  * Takeoff climb rate\n  314   *\n  315   * @unit m/s\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/mc_pos_control_multiplatform/mc_pos_control_params.c:\n   85   * Integral gain for vertical velocity error\n   86   *\n   87:  * Non zero value allows hovering thrust estimation on stabilized or autonomous takeoff.\n   88   *\n   89   * @min 0.0\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/CMakeLists.txt:\n   45  		loiter.cpp\n   46  		rtl.cpp\n   47: 		takeoff.cpp\n   48  		land.cpp\n   49  		mission_feasibility_checker.cpp\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/follow_target.cpp:\n   59  	MissionBlock(navigator, name),\n   60  	_navigator(navigator),\n   61: 	_param_min_alt(this, \"MIS_TAKEOFF_ALT\", false),\n   62  	_follow_target_state(WAIT_FOR_TARGET_POSITION),\n   63  	_follow_target_sub(-1),\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/mission.cpp:\n   70  	MissionBlock(navigator, name),\n   71  	_param_onboard_enabled(this, \"MIS_ONBOARD_EN\", false),\n   72: 	_param_takeoff_alt(this, \"MIS_TAKEOFF_ALT\", false),\n   73  	_param_dist_1wp(this, \"MIS_DIST_1WP\", false),\n   74  	_param_altmode(this, \"MIS_ALTMODE\", false),\n   ..\n   79  	_current_onboard_mission_index(-1),\n   80  	_current_offboard_mission_index(-1),\n   81: 	_need_takeoff(true),\n   82  	_mission_type(MISSION_TYPE_NONE),\n   83  	_inited(false),\n   ..\n  144  	check_mission_valid();\n  145  \n  146: 	/* require takeoff after non-loiter or landing */\n  147  	if (!_navigator->get_can_loiter_at_sp() || _navigator->get_vstatus()->condition_landed) {\n  148: 		_need_takeoff = true;\n  149  	}\n  150  }\n  ...\n  396  \n  397  		/* set loiter mission item and ensure that there is a minimum clearance from home */\n  398: 		set_loiter_item(&_mission_item, _param_takeoff_alt.get());\n  399  \n  400  		/* update position setpoint triplet  */\n  ...\n  417  				/* landed, refusing to take off without a mission */\n  418  \n  419: 				mavlink_log_critical(_navigator->get_mavlink_log_pub(), \"no valid mission available, refusing takeoff\");\n  420  			} else {\n  421  				mavlink_log_critical(_navigator->get_mavlink_log_pub(), \"no valid mission available, loitering\");\n  ...\n  446  		set_previous_pos_setpoint();\n  447  \n  448: 		/* do takeoff before going to setpoint if needed and not already in takeoff */\n  449: 		if (do_need_takeoff() && _work_item_type != WORK_ITEM_TYPE_TAKEOFF) {\n  450: 			new_work_item_type = WORK_ITEM_TYPE_TAKEOFF;\n  451  \n  452  			/* use current mission item as next position item */\n  ...\n  455  			has_next_position_item = true;\n  456  \n  457: 			float takeoff_alt = calculate_takeoff_altitude(&_mission_item);\n  458  \n  459: 			mavlink_log_info(_navigator->get_mavlink_log_pub(), \"takeoff to %.1f meters above home\", (double)(takeoff_alt - _navigator->get_home_position()->alt));\n  460  \n  461: 			_mission_item.nav_cmd = NAV_CMD_TAKEOFF;\n  462  			_mission_item.lat = _navigator->get_global_position()->lat;\n  463  			_mission_item.lon = _navigator->get_global_position()->lon;\n  464: 			/* ignore yaw for takeoff items */\n  465  			_mission_item.yaw = NAN;\n  466: 			_mission_item.altitude = takeoff_alt;\n  467  			_mission_item.altitude_is_relative = false;\n  468  			_mission_item.autocontinue = true;\n  ...\n  470  		}\n  471  \n  472: 		/* if we just did a takeoff navigate to the actual waypoint now */\n  473: 		if (_work_item_type == WORK_ITEM_TYPE_TAKEOFF) {\n  474  \n  475: 			if (_mission_item.nav_cmd == NAV_CMD_VTOL_TAKEOFF\n  476  					&& _navigator->get_vstatus()->is_rotary_wing\n  477  					&& !_navigator->get_vstatus()->condition_landed\n  478  					&& has_next_position_item) {\n  479: 				/* check if the vtol_takeoff command is on top of us */\n  480: 				if(do_need_move_to_takeoff()){\n  481: 					new_work_item_type = WORK_ITEM_TYPE_TRANSITON_AFTER_TAKEOFF;\n  482  				} else {\n  483  					new_work_item_type = WORK_ITEM_TYPE_DEFAULT;\n  ...\n  497  		}\n  498  \n  499: 		/* takeoff completed and transitioned, move to takeoff wp as fixed wing */\n  500: 		if (_mission_item.nav_cmd == NAV_CMD_VTOL_TAKEOFF\n  501: 				&& _work_item_type == WORK_ITEM_TYPE_TRANSITON_AFTER_TAKEOFF) {\n  502  \n  503  			new_work_item_type = WORK_ITEM_TYPE_DEFAULT;\n  ...\n  611  	_work_item_type = new_work_item_type;\n  612  \n  613: 	/* require takeoff after landing or idle */\n  614  	if (pos_sp_triplet->current.type == position_setpoint_s::SETPOINT_TYPE_LAND || pos_sp_triplet->current.type == position_setpoint_s::SETPOINT_TYPE_IDLE) {\n  615: 		_need_takeoff = true;\n  616  	}\n  617  \n  ...\n  653  \n  654  bool\n  655: Mission::do_need_takeoff()\n  656  {\n  657  	if (_navigator->get_vstatus()->is_rotary_wing) {\n  658: 		float takeoff_alt = calculate_takeoff_altitude(&_mission_item);\n  659  \n  660: 		/* force takeoff if landed (additional protection) */\n  661  		if (_navigator->get_vstatus()->condition_landed) {\n  662: 			_need_takeoff = true;\n  663  \n  664: 		/* if in-air and already above takeoff height, don't do takeoff */\n  665: 		} else if (_navigator->get_global_position()->alt > takeoff_alt) {\n  666: 			_need_takeoff = false;\n  667  		}\n  668  \n  669: 		/* check if current mission item is one that requires takeoff before */\n  670: 		if (_need_takeoff && (\n  671: 				_mission_item.nav_cmd == NAV_CMD_TAKEOFF ||\n  672  				_mission_item.nav_cmd == NAV_CMD_WAYPOINT ||\n  673: 				_mission_item.nav_cmd == NAV_CMD_VTOL_TAKEOFF ||\n  674  				_mission_item.nav_cmd == NAV_CMD_LOITER_TIME_LIMIT ||\n  675  				_mission_item.nav_cmd == NAV_CMD_LOITER_TURN_COUNT ||\n  ...\n  677  				_mission_item.nav_cmd == NAV_CMD_RETURN_TO_LAUNCH)) {\n  678  \n  679: 			_need_takeoff = false;\n  680  			return true;\n  681  		}\n  ...\n  700  \n  701  bool\n  702: Mission::do_need_move_to_takeoff()\n  703  {\n  704: 	if (_navigator->get_vstatus()->is_rotary_wing && _mission_item.nav_cmd == NAV_CMD_VTOL_TAKEOFF) {\n  705  \n  706  		float d_current = get_distance_to_next_waypoint(_mission_item.lat, _mission_item.lon,\n  ...\n  747  \n  748  float\n  749: Mission::calculate_takeoff_altitude(struct mission_item_s *mission_item)\n  750  {\n  751: 	/* calculate takeoff altitude */\n  752: 	float takeoff_alt = get_absolute_altitude_for_item(*mission_item);\n  753  \n  754: 	/* takeoff to at least NAV_TAKEOFF_ALT above home/ground, even if first waypoint is lower */\n  755  	if (_navigator->get_vstatus()->condition_landed) {\n  756: 		takeoff_alt = fmaxf(takeoff_alt, _navigator->get_global_position()->alt + _param_takeoff_alt.get());\n  757  \n  758  	} else {\n  759: 		takeoff_alt = fmaxf(takeoff_alt, _navigator->get_home_position()->alt + _param_takeoff_alt.get());\n  760  	}\n  761  \n  762: 	return takeoff_alt;\n  763  }\n  764  \n  ...\n  766  Mission::heading_sp_update()\n  767  {\n  768: 	/* we don't want to be yawing during takeoff, landing or aligning for a transition */\n  769: 	if (_mission_item.nav_cmd == NAV_CMD_TAKEOFF\n  770: 			|| _mission_item.nav_cmd == NAV_CMD_VTOL_TAKEOFF\n  771  			|| _mission_item.nav_cmd == NAV_CMD_DO_VTOL_TRANSITION\n  772  			|| _mission_item.nav_cmd == NAV_CMD_LAND\n  ...\n  860  	}\n  861  \n  862: 	/* Don't do FOH for landing and takeoff waypoints, the ground may be near\n  863  	 * and the FW controller has a custom landing logic */\n  864  	if (_mission_item.nav_cmd == NAV_CMD_LAND\n  865  			|| _mission_item.nav_cmd == NAV_CMD_VTOL_LAND\n  866: 			|| _mission_item.nav_cmd == NAV_CMD_TAKEOFF) {\n  867  		return;\n  868  	}\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/mission.h:\n  121  \n  122  	/**\n  123: 	 * Returns true if we need to do a takeoff at the current state\n  124  	 */\n  125: 	bool do_need_takeoff();\n  126  \n  127  	/**\n  ...\n  131  \n  132  	/**\n  133: 	 * Returns true if we need to move to waypoint location after vtol takeoff\n  134  	 */\n  135: 	bool do_need_move_to_takeoff();\n  136  \n  137  	/**\n  ...\n  146  \n  147  	/**\n  148: 	 * Calculate takeoff height for mission item considering ground clearance\n  149  	 */\n  150: 	float calculate_takeoff_altitude(struct mission_item_s *mission_item);\n  151  \n  152  	/**\n  ...\n  225  \n  226  	control::BlockParamInt _param_onboard_enabled;\n  227: 	control::BlockParamFloat _param_takeoff_alt;\n  228  	control::BlockParamFloat _param_dist_1wp;\n  229  	control::BlockParamInt _param_altmode;\n  ...\n  236  	int _current_onboard_mission_index;\n  237  	int _current_offboard_mission_index;\n  238: 	bool _need_takeoff;					/**< if true, then takeoff must be performed before going to the first waypoint (if needed) */\n  239  \n  240  	enum {\n  ...\n  259  	enum work_item_type {\n  260  		WORK_ITEM_TYPE_DEFAULT,		/**< default mission item */\n  261: 		WORK_ITEM_TYPE_TAKEOFF,		/**< takeoff before moving to waypoint */\n  262  		WORK_ITEM_TYPE_MOVE_TO_LAND,	/**< move to land waypoint before descent */\n  263  		WORK_ITEM_TYPE_ALIGN,		/**< align for next waypoint */\n  264  		WORK_ITEM_TYPE_CMD_BEFORE_MOVE,	/**<  */\n  265: 		WORK_ITEM_TYPE_TRANSITON_AFTER_TAKEOFF,	/**<  */\n  266  		WORK_ITEM_TYPE_TRANSITON_BEFORE_LAND,	/**<  */\n  267  		WORK_ITEM_TYPE_MOVE_TO_LAND_AFTER_TRANSITION	/**<  */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/mission_block.cpp:\n  154  				&dist_xy, &dist_z);\n  155  \n  156: 		if ((_mission_item.nav_cmd == NAV_CMD_TAKEOFF || _mission_item.nav_cmd == NAV_CMD_VTOL_TAKEOFF)\n  157  			&& _navigator->get_vstatus()->is_rotary_wing) {\n  158: 			/* require only altitude for takeoff for multicopter, do not use waypoint acceptance radius */\n  159  			if (_navigator->get_global_position()->alt >\n  160  				altitude_amsl - _navigator->get_acceptance_radius()) {\n  161  				_waypoint_position_reached = true;\n  162  			}\n  163: 		} else if (_mission_item.nav_cmd == NAV_CMD_TAKEOFF) {\n  164: 			/* for takeoff mission items use the parameter for the takeoff acceptance radius */\n  165  			if (dist >= 0.0f && dist <= _navigator->get_acceptance_radius()) {\n  166  				_waypoint_position_reached = true;\n  ...\n  203  	if (_waypoint_position_reached && !_waypoint_yaw_reached) {\n  204  \n  205: 		/* TODO: removed takeoff, why? */\n  206  		if (_navigator->get_vstatus()->is_rotary_wing && PX4_ISFINITE(_mission_item.yaw)) {\n  207  \n  208: 			/* check yaw if defined only for rotary wing except takeoff */\n  209  			float yaw_err = _wrap_pi(_mission_item.yaw - _navigator->get_global_position()->yaw);\n  210  \n  ...\n  373  		break;\n  374  \n  375: 	case NAV_CMD_TAKEOFF:\n  376: 	case NAV_CMD_VTOL_TAKEOFF:\n  377: 		sp->type = position_setpoint_s::SETPOINT_TYPE_TAKEOFF;\n  378  		break;\n  379  \n  ...\n  415  {\n  416  	if (_navigator->get_vstatus()->condition_landed) {\n  417: 		/* landed, don't takeoff, but switch to IDLE mode */\n  418  		item->nav_cmd = NAV_CMD_IDLE;\n  419  \n  ...\n  456  {\n  457  	if (_navigator->get_vstatus()->condition_landed) {\n  458: 		/* landed, don't takeoff, but switch to IDLE mode */\n  459  		item->nav_cmd = NAV_CMD_IDLE;\n  460  \n  ...\n  488  \n  489  void\n  490: MissionBlock::set_takeoff_item(struct mission_item_s *item, float min_clearance, float min_pitch)\n  491  {\n  492: 	item->nav_cmd = NAV_CMD_TAKEOFF;\n  493  \n  494  	/* use current position and use return altitude as clearance */\n  ...\n  500  		item->altitude += min_clearance;\n  501  \n  502: 		/* we must takeoff to a point further above ground than the acceptance radius */\n  503  		if (_navigator->get_acceptance_radius() > min_clearance) {\n  504  			item->altitude += _navigator->get_acceptance_radius();\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/mission_block.h:\n  102  \n  103  	/**\n  104: 	 * Set a takeoff mission item\n  105  	 */\n  106: 	void set_takeoff_item(struct mission_item_s *item, float min_clearance = -1.0f, float min_pitch = 0.0f);\n  107  \n  108  	/**\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/mission_feasibility_checker.cpp:\n  113  		}\n  114  \n  115: 		// look for a takeoff waypoint\n  116: 		if (missionitem.nav_cmd == NAV_CMD_TAKEOFF) {\n  117  			// make sure that the altitude of the waypoint is at least one meter larger than the acceptance radius\n  118: 			// this makes sure that the takeoff waypoint is not reached before we are at least one meter in the air\n  119: 			float takeoff_alt = missionitem.altitude_is_relative\n  120  				      ? missionitem.altitude\n  121  			              : missionitem.altitude - home_alt;\n  ...\n  127  			}\n  128  \n  129: 			if (takeoff_alt - 1.0f < acceptance_radius) {\n  130: 				mavlink_log_critical(_mavlink_log_pub, \"Mission rejected: Takeoff altitude too low!\");\n  131  				return false;\n  132  			}\n  ...\n  242  			missionitem.nav_cmd != NAV_CMD_LOITER_TIME_LIMIT &&\n  243  			missionitem.nav_cmd != NAV_CMD_LAND &&\n  244: 			missionitem.nav_cmd != NAV_CMD_TAKEOFF &&\n  245  			missionitem.nav_cmd != NAV_CMD_VTOL_LAND &&\n  246: 			missionitem.nav_cmd != NAV_CMD_VTOL_TAKEOFF &&\n  247  			missionitem.nav_cmd != NAV_CMD_PATHPLANNING &&\n  248  			missionitem.nav_cmd != NAV_CMD_DO_JUMP &&\n  ...\n  413  		cmd == NAV_CMD_LOITER_TURN_COUNT ||\n  414  		cmd == NAV_CMD_LOITER_UNLIMITED ||\n  415: 		cmd == NAV_CMD_TAKEOFF ||\n  416  		cmd == NAV_CMD_LAND ||\n  417  		cmd == NAV_CMD_PATHPLANNING) {\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/mission_params.c:\n   54   * @group Mission\n   55   */\n   56: PARAM_DEFINE_FLOAT(MIS_TAKEOFF_ALT, 10.0f);\n   57  \n   58  /**\n   ..\n   82   * Maximal horizontal distance from home to first waypoint\n   83   *\n   84:  * Failsafe check to prevent running mission stored from previous flight at a new takeoff location.\n   85   * Set a value of zero or less to disable. The mission will not be started if the current\n   86   * waypoint is more distant than MIS_DIS_1WP from the current position.\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/navigation.h:\n   59  	NAV_CMD_RETURN_TO_LAUNCH = 20,\n   60  	NAV_CMD_LAND = 21,\n   61: 	NAV_CMD_TAKEOFF = 22,\n   62  	NAV_CMD_ROI = 80,\n   63  	NAV_CMD_PATHPLANNING = 81,\n   64  	NAV_CMD_FOLLOW_TARGET = 194, // temporary placeholder\n   65  	NAV_CMD_GOTO_TAREGT = 195,\n   66: 	NAV_CMD_VTOL_TAKEOFF = 84,\n   67  	NAV_CMD_VTOL_LAND = 85,\n   68  	NAV_CMD_DO_JUMP = 177,\n   ..\n  104  	float acceptance_radius;	/**< default radius in which the mission is accepted as reached in meters */\n  105  	float time_inside;		/**< time that the MAV should stay inside the radius before advancing in seconds */\n  106: 	float pitch_min;		/**< minimal pitch angle for fixed wing takeoff waypoints */\n  107  	bool autocontinue;		/**< true if next waypoint should follow after this one */\n  108  	unsigned origin;		/**< where the waypoint has been generated		*/\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/navigator.h:\n   62  #include \"mission.h\"\n   63  #include \"loiter.h\"\n   64: #include \"takeoff.h\"\n   65  #include \"land.h\"\n   66  #include \"rtl.h\"\n   ..\n  247  	Mission		_mission;			/**< class that handles the missions */\n  248  	Loiter		_loiter;			/**< class that handles loiter */\n  249: 	Takeoff		_takeoff;			/**< class for handling takeoff commands */\n  250  	Land		_land;			/**< class for handling land commands */\n  251  	RTL 		_rtl;				/**< class that handles RTL */\n  ...\n  262  \n  263  	control::BlockParamFloat _param_loiter_radius;	/**< loiter radius for fixedwing */\n  264: 	control::BlockParamFloat _param_acceptance_radius;	/**< acceptance for takeoff */\n  265  	control::BlockParamInt _param_datalinkloss_obc;	/**< if true: obc mode on data link loss enabled */\n  266  	control::BlockParamInt _param_rcloss_obc;	/**< if true: obc mode on rc loss enabled */\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/navigator_main.cpp:\n  142  	_mission(this, \"MIS\"),\n  143  	_loiter(this, \"LOI\"),\n  144: 	_takeoff(this, \"TKF\"),\n  145  	_land(this, \"LND\"),\n  146  	_rtl(this, \"RTL\"),\n  ...\n  166  	_navigation_mode_array[5] = &_gpsFailure;\n  167  	_navigation_mode_array[6] = &_rcLoss;\n  168: 	_navigation_mode_array[7] = &_takeoff;\n  169  	_navigation_mode_array[8] = &_land;\n  170  	_navigation_mode_array[9] = &_follow_target;\n  ...\n  476  				_navigation_mode = &_rtl;\n  477  				break;\n  478: 			case vehicle_status_s::NAVIGATION_STATE_AUTO_TAKEOFF:\n  479  				_pos_sp_triplet_published_invalid_once = false;\n  480: 				_navigation_mode = &_takeoff;\n  481  				break;\n  482  			case vehicle_status_s::NAVIGATION_STATE_AUTO_LAND:\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/takeoff.cpp:\n   32   ****************************************************************************/\n   33  /**\n   34:  * @file Takeoff.cpp\n   35   *\n   36:  * Helper class to Takeoff\n   37   *\n   38   * @author Lorenz Meier <lorenz@px4.io\n   ..\n   51  #include <uORB/topics/position_setpoint_triplet.h>\n   52  \n   53: #include \"takeoff.h\"\n   54  #include \"navigator.h\"\n   55  \n   56: Takeoff::Takeoff(Navigator *navigator, const char *name) :\n   57  	MissionBlock(navigator, name),\n   58: 	_param_min_alt(this, \"MIS_TAKEOFF_ALT\", false)\n   59  {\n   60  	/* load initial params */\n   ..\n   62  }\n   63  \n   64: Takeoff::~Takeoff()\n   65  {\n   66  }\n   67  \n   68  void\n   69: Takeoff::on_inactive()\n   70  {\n   71  }\n   72  \n   73  void\n   74: Takeoff::on_activation()\n   75  {\n   76: 	/* set current mission item to Takeoff */\n   77: 	set_takeoff_item(&_mission_item, _param_min_alt.get());\n   78  	_navigator->get_mission_result()->reached = false;\n   79  	_navigator->get_mission_result()->finished = false;\n   ..\n   95  \n   96  void\n   97: Takeoff::on_active()\n   98  {\n   99  	if (is_mission_item_reached() && !_navigator->get_mission_result()->finished) {\n  ...\n  101  		_navigator->set_mission_result_updated();\n  102  \n  103: 		/* set loiter item so position controllers stop doing takeoff logic */\n  104  		set_loiter_item(&_mission_item);\n  105  		struct position_setpoint_triplet_s *pos_sp_triplet = _navigator->get_position_setpoint_triplet();\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/navigator/takeoff.h:\n   32   ****************************************************************************/\n   33  /**\n   34:  * @file Takeoff.h\n   35   *\n   36   * Helper class to take off\n   ..\n   39   */\n   40  \n   41: #ifndef NAVIGATOR_TAKEOFF_H\n   42: #define NAVIGATOR_TAKEOFF_H\n   43  \n   44  #include <controllib/blocks.hpp>\n   ..\n   48  #include \"mission_block.h\"\n   49  \n   50: class Takeoff : public MissionBlock\n   51  {\n   52  public:\n   53: 	Takeoff(Navigator *navigator, const char *name);\n   54  \n   55: 	~Takeoff();\n   56  \n   57  	virtual void on_inactive();\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/uORB/topics/position_setpoint.h:\n   45  #define SETPOINT_TYPE_VELOCITY 1\n   46  #define SETPOINT_TYPE_LOITER 2\n   47: #define SETPOINT_TYPE_TAKEOFF 3\n   48  #define SETPOINT_TYPE_LAND 4\n   49  #define SETPOINT_TYPE_IDLE 5\n   ..\n   96  	static const uint8_t SETPOINT_TYPE_VELOCITY = 1;\n   97  	static const uint8_t SETPOINT_TYPE_LOITER = 2;\n   98: 	static const uint8_t SETPOINT_TYPE_TAKEOFF = 3;\n   99  	static const uint8_t SETPOINT_TYPE_LAND = 4;\n  100  	static const uint8_t SETPOINT_TYPE_IDLE = 5;\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/uORB/topics/tecs_status.h:\n   44  #define TECS_MODE_NORMAL 0\n   45  #define TECS_MODE_UNDERSPEED 1\n   46: #define TECS_MODE_TAKEOFF 2\n   47  #define TECS_MODE_LAND 3\n   48  #define TECS_MODE_LAND_THROTTLELIM 4\n   ..\n   83  	static const uint8_t TECS_MODE_NORMAL = 0;\n   84  	static const uint8_t TECS_MODE_UNDERSPEED = 1;\n   85: 	static const uint8_t TECS_MODE_TAKEOFF = 2;\n   86  	static const uint8_t TECS_MODE_LAND = 3;\n   87  	static const uint8_t TECS_MODE_LAND_THROTTLELIM = 4;\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/uORB/topics/vehicle_command.h:\n   51  #define VEHICLE_CMD_NAV_RETURN_TO_LAUNCH 20\n   52  #define VEHICLE_CMD_NAV_LAND 21\n   53: #define VEHICLE_CMD_NAV_TAKEOFF 22\n   54  #define VEHICLE_CMD_NAV_ROI 80\n   55  #define VEHICLE_CMD_NAV_PATHPLANNING 81\n   56: #define VEHICLE_CMD_NAV_VTOL_TAKEOFF 84\n   57  #define VEHICLE_CMD_NAV_VTOL_LAND 85\n   58  #define VEHICLE_CMD_NAV_GUIDED_LIMITS 90\n   ..\n  151  	static const uint32_t VEHICLE_CMD_NAV_RETURN_TO_LAUNCH = 20;\n  152  	static const uint32_t VEHICLE_CMD_NAV_LAND = 21;\n  153: 	static const uint32_t VEHICLE_CMD_NAV_TAKEOFF = 22;\n  154  	static const uint32_t VEHICLE_CMD_NAV_ROI = 80;\n  155  	static const uint32_t VEHICLE_CMD_NAV_PATHPLANNING = 81;\n  156: 	static const uint32_t VEHICLE_CMD_NAV_VTOL_TAKEOFF = 84;\n  157  	static const uint32_t VEHICLE_CMD_NAV_VTOL_LAND = 85;\n  158  	static const uint32_t VEHICLE_CMD_NAV_GUIDED_LIMITS = 90;\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/uORB/topics/vehicle_status.h:\n   52  #define MAIN_STATE_STAB 8\n   53  #define MAIN_STATE_RATTITUDE 9\n   54: #define MAIN_STATE_AUTO_TAKEOFF 10\n   55  #define MAIN_STATE_AUTO_LAND 11\n   56  #define MAIN_STATE_AUTO_FOLLOW_TARGET 12\n   ..\n   83  #define NAVIGATION_STATE_STAB 15\n   84  #define NAVIGATION_STATE_RATTITUDE 16\n   85: #define NAVIGATION_STATE_AUTO_TAKEOFF 17\n   86  #define NAVIGATION_STATE_AUTO_LAND 18\n   87  #define NAVIGATION_STATE_AUTO_FOLLOW_TARGET 19\n   ..\n  230  	static const uint8_t MAIN_STATE_STAB = 8;\n  231  	static const uint8_t MAIN_STATE_RATTITUDE = 9;\n  232: 	static const uint8_t MAIN_STATE_AUTO_TAKEOFF = 10;\n  233  	static const uint8_t MAIN_STATE_AUTO_LAND = 11;\n  234  	static const uint8_t MAIN_STATE_AUTO_FOLLOW_TARGET = 12;\n  ...\n  261  	static const uint8_t NAVIGATION_STATE_STAB = 15;\n  262  	static const uint8_t NAVIGATION_STATE_RATTITUDE = 16;\n  263: 	static const uint8_t NAVIGATION_STATE_AUTO_TAKEOFF = 17;\n  264  	static const uint8_t NAVIGATION_STATE_AUTO_LAND = 18;\n  265  	static const uint8_t NAVIGATION_STATE_AUTO_FOLLOW_TARGET = 19;\n\n/home/jakob/Github/ArduPilot-CG/modules/PX4Firmware/src/modules/vtol_att_control/vtol_att_control_params.c:\n  314  \n  315  /**\n  316:  * Force VTOL mode takeoff and land\n  317   *\n  318   * @min 0\n\n/home/jakob/Github/ArduPilot-CG/modules/mavlink/message_definitions/v0.9/common.xml:\n   69                      <param index=\"7\">Altitude</param>\n   70                 </entry>\n   71:                <entry value=\"22\" name=\"MAV_CMD_NAV_TAKEOFF\">\n   72:                     <description>Takeoff from ground / hand</description>\n   73                      <param index=\"1\">Minimum pitch (if airspeed sensor present), desired pitch without sensor</param>\n   74                      <param index=\"2\">Empty</param>\n\n/home/jakob/Github/ArduPilot-CG/modules/mavlink/message_definitions/v1.0/ardupilotmega.xml:\n   76              <entry name=\"MAV_CMD_SOLO_BTN_FLY_HOLD\" value=\"42002\">\n   77                  <description>FLY button has been held for 1.5 seconds.</description>\n   78:                 <param index=\"1\">Takeoff altitude</param>\n   79                  <param index=\"2\">Empty</param>\n   80                  <param index=\"3\">Empty</param>\n\n/home/jakob/Github/ArduPilot-CG/modules/mavlink/message_definitions/v1.0/common.xml:\n  634                      <param index=\"7\">Altitude</param>\n  635                 </entry>\n  636:                <entry value=\"22\" name=\"MAV_CMD_NAV_TAKEOFF\">\n  637:                     <description>Takeoff from ground / hand</description>\n  638                      <param index=\"1\">Minimum pitch (if airspeed sensor present), desired pitch without sensor</param>\n  639                      <param index=\"2\">Empty</param>\n  ...\n  654                      <param index=\"7\">Z-axis / ground level position [m]</param>\n  655                 </entry>\n  656:                <entry value=\"24\" name=\"MAV_CMD_NAV_TAKEOFF_LOCAL\">\n  657:                     <description>Takeoff from local position (local frame only)</description>\n  658                      <param index=\"1\">Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]</param>\n  659                      <param index=\"2\">Empty</param>\n  660:                     <param index=\"3\">Takeoff ascend rate [ms^-1]</param>\n  661                      <param index=\"4\">Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these</param>\n  662                      <param index=\"5\">Y-axis position [m]</param>\n  ...\n  744                      <param index=\"7\">Altitude/Z of goal</param>\n  745                 </entry>\n  746:                <entry value=\"84\" name=\"MAV_CMD_NAV_VTOL_TAKEOFF\">\n  747:                     <description>Takeoff from ground using VTOL mode</description>\n  748                      <param index=\"1\">Empty</param>\n  749                      <param index=\"2\">Empty</param>\n  ...\n 3369          </message>\n 3370          <message id=\"242\" name=\"HOME_POSITION\">\n 3371:                <description>This message can be requested by sending the MAV_CMD_GET_HOME_POSITION command. The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitely set by the operator before or after. The position the system will return to and land on. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>\n 3372                 <field type=\"int32_t\" name=\"latitude\">Latitude (WGS84), in degrees * 1E7</field>\n 3373                 <field type=\"int32_t\" name=\"longitude\">Longitude (WGS84, in degrees * 1E7</field>\n ....\n 3376                 <field type=\"float\" name=\"y\">Local Y position of this position in the local coordinate frame</field>\n 3377                 <field type=\"float\" name=\"z\">Local Z position of this position in the local coordinate frame</field>\n 3378:                <field type=\"float[4]\" name=\"q\">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>\n 3379:                <field type=\"float\" name=\"approach_x\">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3380:                <field type=\"float\" name=\"approach_y\">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3381:                <field type=\"float\" name=\"approach_z\">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3382          </message>\n 3383          <message id=\"243\" name=\"SET_HOME_POSITION\">\n 3384:                <description>The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitely set by the operator before or after. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>\n 3385                 <field type=\"uint8_t\" name=\"target_system\">System ID.</field>\n 3386                 <field type=\"int32_t\" name=\"latitude\">Latitude (WGS84), in degrees * 1E7</field>\n ....\n 3390                 <field type=\"float\" name=\"y\">Local Y position of this position in the local coordinate frame</field>\n 3391                 <field type=\"float\" name=\"z\">Local Z position of this position in the local coordinate frame</field>\n 3392:                <field type=\"float[4]\" name=\"q\">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>\n 3393:                <field type=\"float\" name=\"approach_x\">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3394:                <field type=\"float\" name=\"approach_y\">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3395:                <field type=\"float\" name=\"approach_z\">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>\n 3396          </message>\n 3397          <message id=\"244\" name=\"MESSAGE_INTERVAL\">\n\n/home/jakob/Github/ArduPilot-CG/modules/mavlink/pymavlink/generator/C/include_v0.9/mavlink_types.h:\n   44      MAV_ACTION_REC_PAUSE = 22,\n   45      MAV_ACTION_REC_STOP = 23,\n   46:     MAV_ACTION_TAKEOFF = 24,\n   47      MAV_ACTION_NAVIGATE = 25,\n   48      MAV_ACTION_LAND = 26,\n\n/home/jakob/Github/ArduPilot-CG/modules/mavlink/pymavlink/mavutil.py:\n 1371          (MAV_MODE_AUTO,   MAV_NAV_RETURNING) : \"RTL\",\n 1372          (MAV_MODE_AUTO,   MAV_NAV_LOITER)    : \"LOITER\",\n 1373:         (MAV_MODE_AUTO,   MAV_NAV_LIFTOFF)   : \"TAKEOFF\",\n 1374          (MAV_MODE_AUTO,   MAV_NAV_LANDING)   : \"LANDING\",\n 1375          (MAV_MODE_AUTO,   MAV_NAV_HOLD)      : \"LOITER\",\n\n/home/jakob/Github/ArduPilot-CG/modules/mavlink/pymavlink/mavwp.py:\n  124          '''read a version 100 waypoint'''\n  125          cmdmap = {\n  126:             2 : mavutil.mavlink.MAV_CMD_NAV_TAKEOFF,\n  127              3 : mavutil.mavlink.MAV_CMD_NAV_RETURN_TO_LAUNCH,\n  128              4 : mavutil.mavlink.MAV_CMD_NAV_LAND,\n  129:             24: mavutil.mavlink.MAV_CMD_NAV_TAKEOFF,\n  130              26: mavutil.mavlink.MAV_CMD_NAV_LAND,\n  131              25: mavutil.mavlink.MAV_CMD_NAV_WAYPOINT ,\n\n/home/jakob/Github/ArduPilot-CG/modules/mavlink/pymavlink/mission.proto:\n   19    CMD_NAV_RETURN_TO_LAUNCH = 20;\n   20    CMD_NAV_LAND = 21;\n   21:   CMD_NAV_TAKEOFF = 22;\n   22    CMD_NAV_ROI = 80;\n   23    CMD_NAV_PATHPLANNING = 81;\n\n/home/jakob/Github/ArduPilot-CG/modules/mavlink/pymavlink/mission2.pb:\n   11  }\n   12  waypoint {\n   13:   command: CMD_NAV_TAKEOFF\n   14    x: -35.362881\n   15    y: 149.165222\n\n2515 matches across 193 files\n",
			"settings":
			{
				"buffer_size": 421237,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jakob/Github/ArduPilot-CG"
	],
	"file_history":
	[
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/Copter.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduPlane/navigation.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AC_PID/AC_PID.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_L1_Control/AP_L1_Control.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/control_rtl.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_Motors/AP_MotorsAirship.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_Math/location.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_Motors/AP_Motors_Class.h",
		"/home/jakob/Github/ArduPilot-CG/libraries/DataFlash/LogFile.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/DataFlash/DataFlash.h",
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/control_stabilize.cpp.d",
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/control_althold.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_Motors/AP_Motors.h",
		"/home/jakob/Github/ArduPilot-CG/modules/mavlink/message_definitions/v1.0/ardupilotmega.xml",
		"/home/jakob/Github/Lightcube/Lightcube.ino",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_Common/AP_Common.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduPlane/ArduPlane.cpp",
		"/home/jakob/Github/ArduPilot-CG/APMrover2/Rover.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AC_WPNav/AC_WPNav.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduPlane/quadplane.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduPlane/tiltrotor.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduPlane/Plane.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/control_poshold.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/control_acro.cpp",
		"/home/jakob/Github/ArduPilot-CG/APMrover2/navigation.cpp",
		"/home/jakob/Github/ArduPilot-CG/APMrover2/Steering.cpp",
		"/home/jakob/Github/ArduPilot-CG/APMrover2/APMrover2.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/inertia.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AC_AttitudeControl/AC_PosControl.cpp",
		"/home/jakob/Github/Lightcube/Lcube.cpp",
		"/home/jakob/Github/Lightcube/Lcube.h",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_AHRS/examples/AHRS_Test/AHRS_Test.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AC_AttitudeControl/AC_AttitudeControl_Heli.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_Param/AP_Param.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_Param/AP_Param.h",
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/ArduCopter.cpp.d",
		"/home/jakob/Github/ArduPilot-CG/libraries/DataFlash/DataFlash.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AP_BattMonitor/AP_BattMonitor.cpp",
		"/home/jakob/Github/ArduPilot-CG/libraries/AC_AttitudeControl/AC_AttitudeControl.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduCopter/precision_landing.cpp",
		"/home/jakob/Github/ArduPilot-CG/ArduPilot-CG.sublime-project",
		"/home/jakob/Github/ardupilot/libraries/AP_Motors/AP_MotorsCoax.cpp",
		"/home/jakob/Github/ardupilot/ArduCopter/Parameters.cpp",
		"/home/jakob/Github/ardupilot/libraries/AP_Math/AP_Math.h",
		"/home/jakob/Github/ardupilot/libraries/AP_Motors/AP_Motors.h",
		"/home/jakob/Github/ardupilot/libraries/AP_Motors/AP_Motors_Class.cpp",
		"/home/jakob/Github/ardupilot/libraries/AP_Motors/AP_MotorsOcta.cpp",
		"/home/jakob/Github/ardupilot/libraries/PID/PID.cpp",
		"/home/jakob/Github/ardupilot/libraries/PID/examples/pid/pid.cpp",
		"/home/jakob/Github/Firmware/src/modules/systemlib/mixer/mixer.cpp",
		"/home/jakob/Github/Firmware/src/drivers/drv_orb_dev.h",
		"/home/jakob/Github/Firmware/src/drivers/drv_oreoled.h",
		"/home/jakob/Github/Firmware/NuttX/NxWidgets/nxwm/include/capplicationwindow.hxx",
		"/home/jakob/Github/Firmware/src/examples/rover_steering_control/main.cpp",
		"/home/jakob/Github/Firmware/src/modules/uORB/uORB.h",
		"/home/jakob/Github/Firmware/src/examples/fixedwing_control/main.c",
		"/home/jakob/Github/Firmware/build_px4fmu-v2_default/src/modules/uORB/topics/vehicle_global_position.h",
		"/home/jakob/Github/Firmware/build_px4fmu-v2_default/px4fmu-v2/NuttX/nuttx/fs/fs_poll.c",
		"/home/jakob/Github/Firmware/src/drivers/stm32/drv_hrt.c",
		"/home/jakob/Github/Firmware/src/platforms/px4_micro_hal.h",
		"/home/jakob/Github/Firmware/Firmware.sublime-project"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/home/jakob/Github/ArduPilot-CG",
			"/home/jakob/Github/ardupilot",
			"/home/jakob/Github/ardupilot/libraries/AP_Motors",
			"/home/jakob/Github/ardupilot",
			"/home/jakob/Github/ardupilot/",
			"/home/jakob/Github/Firmware/src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"//#",
			"land",
			"rate",
			"rate_controller",
			"update_loiter",
			"loiter",
			"auto_loiter_run",
			"auto_land_run",
			"auto_takeoff_run",
			"loiter",
			"auto_loiter_run",
			"auto_wp_run",
			"loiter",
			"forward",
			"forwardd",
			"auto_takeoff",
			"land_run",
			"loiter",
			"takeoff",
			"\n",
			"//# ",
			"AIRSHIP",
			"//# ",
			"//#",
			"//##",
			"//#",
			"radio_tuning_high",
			"WP speed",
			"_wp_speed_cms",
			"set_speed_xy",
			"wp_speed",
			"_L1_xtrack_i_gain",
			"get(",
			"get",
			"_L1_xtrack_i_gain.get()",
			"_ahrs",
			"groundspeed",
			"ground_speed",
			"groundspeed()",
			"forward",
			"yaw",
			"ahrs",
			"_yaw",
			"AB",
			"disabled",
			"AB",
			"_L1_dist",
			"K_L1",
			"struct Location",
			"struct Location{",
			"struct Location {",
			"struct Location",
			"location_diff",
			"update_waypoint",
			"waypoint",
			"wp_run",
			"rtl_run",
			"wp_run",
			"update_wp",
			"update_waypoint",
			"update_loiter",
			"auto_loiter",
			"auto_land_run",
			"target_pitch",
			"rate_controller",
			"rate",
			"limit.yaw",
			"limit",
			"M1",
			"M1.Attitude",
			"M1",
			"IR",
			"FRAME_CONFIG",
			"_crosstrack_error",
			"_latAccDem",
			"lateral_acceleration",
			"nav_controller",
			"lateral_acceleration",
			"update",
			"update_cruise",
			"target_bearing_cd",
			"pos_to_rate_xy",
			"_target_bearing_cd",
			"_latAccDem",
			"get_pitch",
			"poshold.pitch",
			"vel_fw",
			"target_roll",
			"pos_to_rate_z",
			"forward",
			"_attitude_target_euler_rate",
			"input_euler_angle_roll_pitch_euler_rate_yaw",
			"float",
			"left",
			"l",
			"set_yaw",
			"Pos_control",
			"nav",
			"set_roll",
			"set",
			"flight_mode",
			"_actuator_out",
			"_rpm_R",
			"float",
			"roll",
			"_roll_in",
			"_thrust_yt_cw",
			"_thrust_yt_ccw",
			"AP_MotorsAriship",
			"Coax",
			"GroupInfo",
			"#include \"AP_MotorsCoax.h\"",
			"NUM_ACTUATORS",
			"#include AP_MotorsCoax.h",
			"Motor",
			"AP_MOTORS_MOT_7",
			"AP_MOTORS_COAX_SERVO_INPUT_RANGE",
			"AP_MotorsCoax",
			"motors",
			"MOTOR_CLASS",
			"motors",
			"Log_Write_Rate",
			"get_pitch()",
			"Log_Write_Rate",
			"log",
			"MASK_LOG_IMU_RAW",
			"MASK_LOG_ATTITUDE_FAST",
			"log"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"//##"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ArduCopter/ArduCopter.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20250,
						"regions":
						{
						},
						"selection":
						[
							[
								3603,
								3603
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 990.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "APMrover2/APMrover2.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15523,
						"regions":
						{
						},
						"selection":
						[
							[
								11338,
								11338
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5853.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "APMrover2/Rover.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19555,
						"regions":
						{
						},
						"selection":
						[
							[
								8633,
								8633
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1501.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "libraries/AP_Navigation/AP_Navigation.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5546,
						"regions":
						{
						},
						"selection":
						[
							[
								3825,
								3825
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "libraries/AC_AttitudeControl/AC_PosControl.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38661,
						"regions":
						{
						},
						"selection":
						[
							[
								36391,
								36391
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15968.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "libraries/AC_AttitudeControl/AC_PosControl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22753,
						"regions":
						{
						},
						"selection":
						[
							[
								9524,
								9524
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5763.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "libraries/AP_L1_Control/AP_L1_Control.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16796,
						"regions":
						{
						},
						"selection":
						[
							[
								9320,
								9320
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3638.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "libraries/AP_L1_Control/AP_L1_Control.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3501,
						"regions":
						{
						},
						"selection":
						[
							[
								3356,
								3356
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1284.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "libraries/AC_WPNav/AC_WPNav.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53812,
						"regions":
						{
						},
						"selection":
						[
							[
								29585,
								29585
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12585.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "libraries/AC_WPNav/AC_WPNav.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23166,
						"regions":
						{
						},
						"selection":
						[
							[
								6958,
								6958
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1960.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "APMrover2/Steering.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11759,
						"regions":
						{
						},
						"selection":
						[
							[
								6040,
								6040
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2741.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "ArduCopter/Copter.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44701,
						"regions":
						{
						},
						"selection":
						[
							[
								34308,
								34308
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14114.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "ArduCopter/control_sport.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5091,
						"regions":
						{
						},
						"selection":
						[
							[
								616,
								616
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "ArduCopter/control_auto.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30772,
						"regions":
						{
						},
						"selection":
						[
							[
								18064,
								18064
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7689.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "ArduCopter/APM_Config.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4632,
						"regions":
						{
						},
						"selection":
						[
							[
								4596,
								4596
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 451.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "ArduCopter/GCS_Mavlink.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 73746,
						"regions":
						{
						},
						"selection":
						[
							[
								35740,
								35740
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18666.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "libraries/AP_Motors/AP_MotorsSingle.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12995,
						"regions":
						{
						},
						"selection":
						[
							[
								2036,
								2036
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "ArduCopter/flight_mode.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10878,
						"regions":
						{
						},
						"selection":
						[
							[
								5453,
								5453
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2980.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "ArduCopter/takeoff.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4986,
						"regions":
						{
						},
						"selection":
						[
							[
								440,
								440
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "ArduCopter/motors.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9594,
						"regions":
						{
						},
						"selection":
						[
							[
								7980,
								7980
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4119.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "libraries/AP_Motors/AP_MotorsMulticopter.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10427,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "ArduCopter/Parameters.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50890,
						"regions":
						{
						},
						"selection":
						[
							[
								19096,
								19096
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6175.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "ArduCopter/Log.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26849,
						"regions":
						{
						},
						"selection":
						[
							[
								77,
								77
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "libraries/AC_AttitudeControl/AC_AttitudeControl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19320,
						"regions":
						{
						},
						"selection":
						[
							[
								6993,
								6993
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1773.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3772,
						"regions":
						{
						},
						"selection":
						[
							[
								1516,
								1516
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 566.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "libraries/AC_AttitudeControl/AC_AttitudeControl_Multi.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9889,
						"regions":
						{
						},
						"selection":
						[
							[
								9604,
								9604
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3490.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "ArduCopter/control_land.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10389,
						"regions":
						{
						},
						"selection":
						[
							[
								4411,
								4411
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 306.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "libraries/AC_AttitudeControl/AC_AttitudeControl.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39667,
						"regions":
						{
						},
						"selection":
						[
							[
								9437,
								9437
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3506.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "libraries/AP_Motors/AP_MotorsMulticopter.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21857,
						"regions":
						{
						},
						"selection":
						[
							[
								13204,
								13204
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 816.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "libraries/AP_Motors/AP_MotorsCoax.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12317,
						"regions":
						{
						},
						"selection":
						[
							[
								8867,
								8867
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3677.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "libraries/AP_Motors/AP_MotorsCoax.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2962,
						"regions":
						{
						},
						"selection":
						[
							[
								777,
								777
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 260.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "ArduCopter/control_stabilize.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2585,
						"regions":
						{
						},
						"selection":
						[
							[
								2265,
								2265
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "ArduCopter/Attitude.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11664,
						"regions":
						{
						},
						"selection":
						[
							[
								1754,
								1754
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4905.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "libraries/AP_Motors/AP_MotorsAirship.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3162,
						"regions":
						{
						},
						"selection":
						[
							[
								2444,
								2444
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 961.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "libraries/AP_Motors/AP_MotorsAirship.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12105,
						"regions":
						{
						},
						"selection":
						[
							[
								11986,
								11986
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3970.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 35,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 421237,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										177,
										181
									],
									[
										440,
										444
									],
									[
										786,
										790
									],
									[
										1108,
										1112
									],
									[
										1457,
										1461
									],
									[
										1703,
										1707
									],
									[
										1959,
										1963
									],
									[
										2115,
										2119
									],
									[
										2425,
										2429
									],
									[
										2743,
										2747
									],
									[
										3010,
										3014
									],
									[
										3178,
										3182
									],
									[
										3488,
										3492
									],
									[
										3715,
										3719
									],
									[
										3921,
										3925
									],
									[
										4196,
										4200
									],
									[
										4295,
										4299
									],
									[
										4430,
										4434
									],
									[
										4761,
										4765
									],
									[
										4957,
										4961
									],
									[
										5348,
										5352
									],
									[
										5651,
										5655
									],
									[
										6070,
										6074
									],
									[
										6429,
										6433
									],
									[
										6533,
										6537
									],
									[
										6612,
										6616
									],
									[
										6726,
										6730
									],
									[
										7035,
										7039
									],
									[
										7359,
										7363
									],
									[
										7865,
										7869
									],
									[
										8392,
										8396
									],
									[
										8807,
										8811
									],
									[
										9310,
										9314
									],
									[
										9664,
										9668
									],
									[
										9941,
										9945
									],
									[
										10159,
										10163
									],
									[
										10427,
										10431
									],
									[
										10757,
										10761
									],
									[
										11077,
										11081
									],
									[
										11150,
										11154
									],
									[
										11539,
										11543
									],
									[
										11612,
										11616
									],
									[
										12000,
										12004
									],
									[
										12073,
										12077
									],
									[
										12464,
										12468
									],
									[
										12758,
										12765
									],
									[
										12888,
										12895
									],
									[
										13012,
										13019
									],
									[
										13081,
										13088
									],
									[
										13177,
										13184
									],
									[
										13214,
										13221
									],
									[
										13343,
										13350
									],
									[
										13437,
										13444
									],
									[
										13501,
										13508
									],
									[
										13700,
										13707
									],
									[
										13862,
										13869
									],
									[
										13966,
										13973
									],
									[
										14214,
										14221
									],
									[
										14254,
										14261
									],
									[
										14475,
										14482
									],
									[
										14681,
										14688
									],
									[
										14828,
										14835
									],
									[
										14910,
										14917
									],
									[
										14948,
										14955
									],
									[
										15160,
										15167
									],
									[
										15338,
										15345
									],
									[
										15379,
										15386
									],
									[
										15441,
										15448
									],
									[
										15745,
										15752
									],
									[
										15932,
										15939
									],
									[
										15994,
										16001
									],
									[
										16238,
										16245
									],
									[
										16505,
										16512
									],
									[
										16735,
										16742
									],
									[
										16788,
										16795
									],
									[
										16802,
										16809
									],
									[
										16855,
										16862
									],
									[
										16906,
										16913
									],
									[
										16938,
										16945
									],
									[
										16994,
										17001
									],
									[
										17176,
										17183
									],
									[
										17484,
										17491
									],
									[
										17715,
										17722
									],
									[
										17819,
										17826
									],
									[
										17827,
										17834
									],
									[
										18111,
										18118
									],
									[
										18240,
										18247
									],
									[
										18467,
										18474
									],
									[
										18570,
										18577
									],
									[
										18767,
										18774
									],
									[
										18900,
										18907
									],
									[
										18984,
										18991
									],
									[
										19115,
										19122
									],
									[
										19381,
										19388
									],
									[
										19549,
										19556
									],
									[
										19766,
										19773
									],
									[
										19819,
										19826
									],
									[
										20106,
										20113
									],
									[
										20382,
										20389
									],
									[
										20831,
										20838
									],
									[
										21135,
										21142
									],
									[
										21201,
										21208
									],
									[
										21721,
										21728
									],
									[
										22076,
										22083
									],
									[
										22131,
										22138
									],
									[
										22442,
										22449
									],
									[
										22860,
										22867
									],
									[
										23256,
										23263
									],
									[
										23563,
										23570
									],
									[
										23956,
										23963
									],
									[
										24284,
										24291
									],
									[
										24392,
										24399
									],
									[
										24424,
										24431
									],
									[
										24585,
										24592
									],
									[
										24733,
										24740
									],
									[
										24784,
										24791
									],
									[
										24883,
										24890
									],
									[
										25108,
										25115
									],
									[
										25166,
										25173
									],
									[
										25260,
										25267
									],
									[
										25347,
										25354
									],
									[
										25401,
										25408
									],
									[
										25446,
										25453
									],
									[
										25516,
										25523
									],
									[
										25574,
										25581
									],
									[
										25774,
										25781
									],
									[
										25827,
										25834
									],
									[
										25859,
										25866
									],
									[
										26103,
										26110
									],
									[
										26154,
										26161
									],
									[
										26280,
										26287
									],
									[
										26318,
										26325
									],
									[
										26492,
										26499
									],
									[
										26511,
										26518
									],
									[
										26561,
										26568
									],
									[
										26713,
										26720
									],
									[
										26888,
										26895
									],
									[
										26929,
										26936
									],
									[
										26964,
										26971
									],
									[
										27192,
										27199
									],
									[
										27358,
										27365
									],
									[
										27750,
										27757
									],
									[
										27983,
										27990
									],
									[
										28013,
										28020
									],
									[
										28136,
										28143
									],
									[
										28375,
										28382
									],
									[
										28458,
										28465
									],
									[
										28550,
										28557
									],
									[
										28633,
										28640
									],
									[
										28835,
										28842
									],
									[
										28860,
										28867
									],
									[
										28919,
										28926
									],
									[
										29266,
										29273
									],
									[
										29554,
										29561
									],
									[
										29682,
										29689
									],
									[
										29755,
										29762
									],
									[
										29799,
										29806
									],
									[
										29843,
										29850
									],
									[
										30033,
										30040
									],
									[
										30119,
										30126
									],
									[
										30154,
										30161
									],
									[
										30197,
										30204
									],
									[
										30443,
										30450
									],
									[
										30462,
										30469
									],
									[
										30819,
										30826
									],
									[
										31200,
										31207
									],
									[
										31527,
										31534
									],
									[
										31820,
										31827
									],
									[
										31929,
										31936
									],
									[
										32209,
										32216
									],
									[
										32448,
										32455
									],
									[
										32559,
										32566
									],
									[
										32647,
										32654
									],
									[
										32779,
										32786
									],
									[
										32808,
										32815
									],
									[
										32891,
										32898
									],
									[
										32986,
										32993
									],
									[
										33063,
										33070
									],
									[
										33207,
										33214
									],
									[
										33250,
										33257
									],
									[
										33264,
										33271
									],
									[
										33361,
										33368
									],
									[
										33590,
										33597
									],
									[
										33738,
										33745
									],
									[
										33951,
										33958
									],
									[
										34099,
										34106
									],
									[
										34453,
										34460
									],
									[
										34691,
										34698
									],
									[
										34895,
										34902
									],
									[
										35003,
										35010
									],
									[
										35142,
										35149
									],
									[
										35529,
										35536
									],
									[
										35804,
										35811
									],
									[
										35942,
										35949
									],
									[
										36039,
										36046
									],
									[
										36122,
										36129
									],
									[
										36269,
										36276
									],
									[
										36383,
										36390
									],
									[
										36414,
										36421
									],
									[
										36455,
										36462
									],
									[
										36541,
										36548
									],
									[
										36555,
										36562
									],
									[
										36658,
										36665
									],
									[
										36942,
										36949
									],
									[
										37153,
										37160
									],
									[
										37241,
										37248
									],
									[
										37309,
										37316
									],
									[
										37655,
										37662
									],
									[
										37943,
										37950
									],
									[
										38070,
										38077
									],
									[
										38107,
										38114
									],
									[
										38151,
										38158
									],
									[
										38195,
										38202
									],
									[
										38406,
										38413
									],
									[
										38464,
										38471
									],
									[
										38491,
										38498
									],
									[
										38526,
										38533
									],
									[
										38569,
										38576
									],
									[
										38842,
										38849
									],
									[
										38861,
										38868
									],
									[
										39176,
										39183
									],
									[
										39284,
										39291
									],
									[
										39646,
										39653
									],
									[
										40018,
										40025
									],
									[
										40051,
										40058
									],
									[
										40573,
										40580
									],
									[
										40839,
										40846
									],
									[
										40866,
										40873
									],
									[
										40901,
										40908
									],
									[
										40944,
										40951
									],
									[
										41050,
										41057
									],
									[
										41116,
										41123
									],
									[
										41171,
										41178
									],
									[
										41219,
										41226
									],
									[
										41263,
										41270
									],
									[
										41460,
										41467
									],
									[
										41627,
										41634
									],
									[
										41735,
										41742
									],
									[
										41874,
										41881
									],
									[
										42190,
										42197
									],
									[
										42209,
										42216
									],
									[
										42490,
										42497
									],
									[
										42829,
										42836
									],
									[
										43087,
										43094
									],
									[
										43114,
										43121
									],
									[
										43145,
										43152
									],
									[
										43188,
										43195
									],
									[
										43286,
										43293
									],
									[
										43353,
										43360
									],
									[
										43405,
										43412
									],
									[
										43449,
										43456
									],
									[
										43493,
										43500
									],
									[
										43674,
										43681
									],
									[
										43878,
										43885
									],
									[
										43986,
										43993
									],
									[
										44125,
										44132
									],
									[
										44434,
										44441
									],
									[
										44453,
										44460
									],
									[
										44912,
										44919
									],
									[
										45092,
										45099
									],
									[
										45215,
										45222
									],
									[
										45365,
										45372
									],
									[
										45515,
										45522
									],
									[
										45682,
										45689
									],
									[
										45714,
										45721
									],
									[
										46015,
										46022
									],
									[
										46203,
										46210
									],
									[
										46469,
										46476
									],
									[
										46668,
										46675
									],
									[
										46949,
										46956
									],
									[
										47043,
										47050
									],
									[
										47286,
										47293
									],
									[
										47400,
										47407
									],
									[
										47433,
										47440
									],
									[
										47469,
										47476
									],
									[
										47675,
										47682
									],
									[
										47804,
										47811
									],
									[
										47923,
										47930
									],
									[
										47953,
										47960
									],
									[
										48009,
										48016
									],
									[
										48023,
										48030
									],
									[
										48143,
										48150
									],
									[
										48169,
										48176
									],
									[
										48312,
										48319
									],
									[
										48568,
										48575
									],
									[
										48582,
										48589
									],
									[
										48795,
										48802
									],
									[
										48815,
										48822
									],
									[
										48935,
										48942
									],
									[
										49011,
										49018
									],
									[
										49162,
										49169
									],
									[
										49291,
										49298
									],
									[
										49316,
										49323
									],
									[
										49357,
										49364
									],
									[
										49401,
										49408
									],
									[
										49447,
										49454
									],
									[
										49513,
										49520
									],
									[
										49541,
										49548
									],
									[
										49576,
										49583
									],
									[
										49618,
										49625
									],
									[
										49691,
										49698
									],
									[
										49781,
										49788
									],
									[
										49856,
										49863
									],
									[
										49912,
										49919
									],
									[
										49968,
										49975
									],
									[
										50072,
										50079
									],
									[
										50112,
										50119
									],
									[
										50252,
										50259
									],
									[
										50292,
										50299
									],
									[
										50321,
										50328
									],
									[
										50389,
										50396
									],
									[
										50464,
										50471
									],
									[
										50478,
										50485
									],
									[
										50496,
										50503
									],
									[
										50568,
										50575
									],
									[
										50592,
										50599
									],
									[
										50610,
										50617
									],
									[
										50745,
										50752
									],
									[
										50778,
										50785
									],
									[
										50865,
										50872
									],
									[
										50903,
										50910
									],
									[
										51004,
										51011
									],
									[
										51077,
										51084
									],
									[
										51125,
										51132
									],
									[
										51167,
										51174
									],
									[
										51221,
										51228
									],
									[
										51302,
										51309
									],
									[
										51443,
										51450
									],
									[
										51669,
										51676
									],
									[
										51736,
										51743
									],
									[
										51757,
										51764
									],
									[
										51989,
										51996
									],
									[
										52028,
										52035
									],
									[
										52240,
										52247
									],
									[
										52319,
										52326
									],
									[
										52516,
										52523
									],
									[
										52584,
										52591
									],
									[
										52899,
										52906
									],
									[
										53229,
										53236
									],
									[
										53458,
										53465
									],
									[
										53590,
										53597
									],
									[
										53626,
										53633
									],
									[
										53857,
										53864
									],
									[
										54102,
										54109
									],
									[
										54314,
										54321
									],
									[
										54470,
										54477
									],
									[
										54545,
										54552
									],
									[
										54618,
										54625
									],
									[
										54915,
										54922
									],
									[
										55162,
										55169
									],
									[
										55477,
										55484
									],
									[
										55815,
										55822
									],
									[
										55909,
										55916
									],
									[
										56289,
										56296
									],
									[
										56541,
										56548
									],
									[
										56654,
										56661
									],
									[
										57028,
										57035
									],
									[
										57228,
										57235
									],
									[
										57587,
										57594
									],
									[
										57865,
										57872
									],
									[
										58180,
										58187
									],
									[
										58447,
										58454
									],
									[
										58478,
										58485
									],
									[
										58544,
										58551
									],
									[
										59035,
										59042
									],
									[
										59059,
										59066
									],
									[
										59245,
										59252
									],
									[
										59339,
										59346
									],
									[
										59756,
										59763
									],
									[
										59830,
										59837
									],
									[
										59969,
										59976
									],
									[
										60024,
										60031
									],
									[
										60116,
										60123
									],
									[
										60305,
										60312
									],
									[
										60403,
										60410
									],
									[
										60480,
										60487
									],
									[
										60669,
										60676
									],
									[
										60953,
										60960
									],
									[
										61052,
										61059
									],
									[
										61130,
										61137
									],
									[
										61414,
										61421
									],
									[
										61477,
										61484
									],
									[
										61688,
										61695
									],
									[
										61738,
										61745
									],
									[
										61965,
										61972
									],
									[
										62417,
										62424
									],
									[
										62562,
										62569
									],
									[
										62709,
										62716
									],
									[
										63444,
										63451
									],
									[
										63576,
										63583
									],
									[
										63721,
										63728
									],
									[
										64144,
										64151
									],
									[
										64275,
										64282
									],
									[
										64973,
										64980
									],
									[
										65100,
										65107
									],
									[
										65240,
										65247
									],
									[
										65333,
										65340
									],
									[
										65587,
										65594
									],
									[
										65746,
										65753
									],
									[
										66094,
										66101
									],
									[
										66404,
										66411
									],
									[
										66532,
										66539
									],
									[
										66852,
										66859
									],
									[
										66930,
										66937
									],
									[
										67398,
										67405
									],
									[
										67524,
										67531
									],
									[
										67762,
										67769
									],
									[
										68102,
										68109
									],
									[
										68226,
										68233
									],
									[
										68344,
										68351
									],
									[
										68413,
										68420
									],
									[
										68434,
										68441
									],
									[
										68493,
										68500
									],
									[
										68693,
										68700
									],
									[
										68943,
										68950
									],
									[
										69066,
										69073
									],
									[
										69182,
										69189
									],
									[
										69664,
										69671
									],
									[
										69877,
										69884
									],
									[
										70059,
										70066
									],
									[
										70171,
										70178
									],
									[
										70286,
										70293
									],
									[
										70544,
										70551
									],
									[
										70902,
										70909
									],
									[
										70979,
										70986
									],
									[
										71431,
										71438
									],
									[
										71533,
										71540
									],
									[
										71619,
										71626
									],
									[
										71896,
										71903
									],
									[
										71995,
										72002
									],
									[
										72078,
										72085
									],
									[
										72459,
										72466
									],
									[
										72541,
										72548
									],
									[
										72591,
										72598
									],
									[
										72743,
										72750
									],
									[
										73204,
										73211
									],
									[
										74031,
										74038
									],
									[
										74646,
										74653
									],
									[
										74697,
										74704
									],
									[
										74748,
										74755
									],
									[
										74949,
										74956
									],
									[
										75211,
										75218
									],
									[
										75258,
										75265
									],
									[
										75303,
										75310
									],
									[
										75348,
										75355
									],
									[
										75398,
										75405
									],
									[
										75603,
										75610
									],
									[
										75812,
										75819
									],
									[
										75992,
										75999
									],
									[
										76178,
										76185
									],
									[
										76226,
										76233
									],
									[
										76273,
										76280
									],
									[
										76316,
										76323
									],
									[
										76360,
										76367
									],
									[
										76402,
										76409
									],
									[
										76443,
										76450
									],
									[
										76490,
										76497
									],
									[
										76761,
										76768
									],
									[
										77027,
										77034
									],
									[
										77171,
										77178
									],
									[
										77521,
										77528
									],
									[
										77752,
										77759
									],
									[
										77800,
										77807
									],
									[
										77971,
										77978
									],
									[
										78015,
										78022
									],
									[
										78199,
										78206
									],
									[
										78486,
										78493
									],
									[
										78588,
										78595
									],
									[
										78668,
										78675
									],
									[
										78742,
										78749
									],
									[
										78818,
										78825
									],
									[
										78923,
										78930
									],
									[
										79073,
										79080
									],
									[
										79241,
										79248
									],
									[
										79273,
										79280
									],
									[
										79461,
										79468
									],
									[
										79495,
										79502
									],
									[
										79660,
										79667
									],
									[
										79902,
										79909
									],
									[
										80190,
										80197
									],
									[
										80227,
										80234
									],
									[
										80268,
										80275
									],
									[
										80312,
										80319
									],
									[
										80360,
										80367
									],
									[
										80622,
										80629
									],
									[
										80991,
										80998
									],
									[
										81339,
										81346
									],
									[
										81657,
										81664
									],
									[
										81743,
										81750
									],
									[
										81777,
										81784
									],
									[
										81947,
										81954
									],
									[
										82021,
										82028
									],
									[
										82134,
										82141
									],
									[
										82230,
										82237
									],
									[
										82361,
										82368
									],
									[
										82399,
										82406
									],
									[
										82513,
										82520
									],
									[
										82566,
										82573
									],
									[
										82672,
										82679
									],
									[
										82906,
										82913
									],
									[
										82981,
										82988
									],
									[
										83103,
										83110
									],
									[
										83162,
										83169
									],
									[
										83326,
										83333
									],
									[
										83375,
										83382
									],
									[
										83551,
										83558
									],
									[
										83785,
										83792
									],
									[
										83980,
										83987
									],
									[
										84057,
										84064
									],
									[
										84139,
										84146
									],
									[
										84197,
										84204
									],
									[
										84276,
										84283
									],
									[
										84325,
										84332
									],
									[
										84419,
										84426
									],
									[
										84625,
										84632
									],
									[
										84797,
										84804
									],
									[
										84976,
										84983
									],
									[
										85057,
										85064
									],
									[
										85128,
										85135
									],
									[
										85504,
										85511
									],
									[
										85537,
										85544
									],
									[
										85653,
										85660
									],
									[
										85678,
										85685
									],
									[
										85763,
										85770
									],
									[
										86010,
										86017
									],
									[
										86141,
										86148
									],
									[
										86221,
										86228
									],
									[
										86390,
										86397
									],
									[
										86560,
										86567
									],
									[
										86942,
										86949
									],
									[
										87231,
										87238
									],
									[
										87399,
										87406
									],
									[
										87638,
										87645
									],
									[
										87672,
										87679
									],
									[
										88024,
										88031
									],
									[
										88263,
										88270
									],
									[
										88456,
										88463
									],
									[
										88767,
										88774
									],
									[
										89066,
										89073
									],
									[
										89182,
										89189
									],
									[
										89255,
										89262
									],
									[
										89320,
										89327
									],
									[
										89553,
										89560
									],
									[
										89577,
										89584
									],
									[
										89706,
										89713
									],
									[
										89756,
										89763
									],
									[
										89889,
										89896
									],
									[
										89957,
										89964
									],
									[
										90210,
										90217
									],
									[
										90399,
										90406
									],
									[
										90546,
										90553
									],
									[
										90856,
										90863
									],
									[
										90882,
										90889
									],
									[
										91157,
										91164
									],
									[
										91183,
										91190
									],
									[
										91512,
										91519
									],
									[
										91812,
										91819
									],
									[
										91955,
										91962
									],
									[
										92071,
										92078
									],
									[
										92143,
										92150
									],
									[
										92168,
										92175
									],
									[
										92468,
										92475
									],
									[
										92711,
										92718
									],
									[
										92881,
										92888
									],
									[
										92958,
										92965
									],
									[
										93066,
										93073
									],
									[
										93130,
										93137
									],
									[
										93226,
										93233
									],
									[
										93412,
										93419
									],
									[
										93687,
										93694
									],
									[
										93889,
										93896
									],
									[
										94095,
										94102
									],
									[
										94365,
										94372
									],
									[
										94450,
										94457
									],
									[
										94716,
										94723
									],
									[
										95041,
										95048
									],
									[
										95314,
										95321
									],
									[
										95370,
										95377
									],
									[
										95579,
										95586
									],
									[
										95963,
										95970
									],
									[
										96142,
										96149
									],
									[
										96260,
										96267
									],
									[
										96298,
										96305
									],
									[
										96430,
										96437
									],
									[
										96484,
										96491
									],
									[
										96538,
										96545
									],
									[
										96634,
										96641
									],
									[
										96790,
										96797
									],
									[
										96980,
										96987
									],
									[
										97042,
										97049
									],
									[
										97123,
										97130
									],
									[
										97296,
										97303
									],
									[
										97347,
										97354
									],
									[
										97403,
										97410
									],
									[
										97469,
										97476
									],
									[
										97745,
										97752
									],
									[
										97900,
										97907
									],
									[
										97983,
										97990
									],
									[
										98117,
										98124
									],
									[
										98303,
										98310
									],
									[
										98343,
										98350
									],
									[
										98399,
										98406
									],
									[
										98586,
										98593
									],
									[
										98643,
										98650
									],
									[
										98851,
										98858
									],
									[
										98904,
										98911
									],
									[
										99040,
										99047
									],
									[
										99099,
										99106
									],
									[
										99246,
										99253
									],
									[
										99398,
										99405
									],
									[
										99643,
										99650
									],
									[
										99760,
										99767
									],
									[
										99843,
										99850
									],
									[
										100061,
										100068
									],
									[
										100121,
										100128
									],
									[
										100202,
										100209
									],
									[
										100461,
										100468
									],
									[
										100488,
										100495
									],
									[
										100579,
										100586
									],
									[
										100637,
										100644
									],
									[
										100796,
										100803
									],
									[
										100890,
										100897
									],
									[
										100989,
										100996
									],
									[
										101118,
										101125
									],
									[
										101210,
										101217
									],
									[
										101254,
										101261
									],
									[
										101426,
										101433
									],
									[
										101538,
										101545
									],
									[
										101742,
										101749
									],
									[
										101871,
										101878
									],
									[
										101933,
										101940
									],
									[
										102082,
										102089
									],
									[
										102390,
										102397
									],
									[
										102583,
										102590
									],
									[
										102702,
										102709
									],
									[
										102839,
										102846
									],
									[
										102938,
										102945
									],
									[
										103023,
										103030
									],
									[
										103117,
										103124
									],
									[
										103169,
										103176
									],
									[
										103217,
										103224
									],
									[
										103324,
										103331
									],
									[
										103359,
										103366
									],
									[
										103395,
										103402
									],
									[
										103458,
										103465
									],
									[
										103510,
										103517
									],
									[
										103625,
										103632
									],
									[
										103963,
										103970
									],
									[
										104150,
										104157
									],
									[
										104239,
										104246
									],
									[
										104361,
										104368
									],
									[
										104814,
										104821
									],
									[
										104829,
										104836
									],
									[
										105589,
										105596
									],
									[
										105610,
										105617
									],
									[
										105745,
										105752
									],
									[
										107707,
										107714
									],
									[
										107722,
										107729
									],
									[
										108499,
										108506
									],
									[
										109431,
										109438
									],
									[
										109639,
										109646
									],
									[
										109813,
										109820
									],
									[
										109835,
										109842
									],
									[
										110026,
										110033
									],
									[
										110200,
										110207
									],
									[
										110222,
										110229
									],
									[
										110413,
										110420
									],
									[
										110587,
										110594
									],
									[
										110609,
										110616
									],
									[
										110957,
										110964
									],
									[
										111161,
										111168
									],
									[
										111335,
										111342
									],
									[
										111357,
										111364
									],
									[
										111544,
										111551
									],
									[
										111718,
										111725
									],
									[
										111740,
										111747
									],
									[
										111927,
										111934
									],
									[
										112101,
										112108
									],
									[
										112123,
										112130
									],
									[
										112523,
										112530
									],
									[
										112727,
										112734
									],
									[
										112901,
										112908
									],
									[
										112923,
										112930
									],
									[
										113110,
										113117
									],
									[
										113284,
										113291
									],
									[
										113306,
										113313
									],
									[
										113493,
										113500
									],
									[
										113667,
										113674
									],
									[
										113689,
										113696
									],
									[
										114089,
										114096
									],
									[
										114293,
										114300
									],
									[
										114467,
										114474
									],
									[
										114489,
										114496
									],
									[
										114676,
										114683
									],
									[
										114850,
										114857
									],
									[
										114872,
										114879
									],
									[
										115059,
										115066
									],
									[
										115233,
										115240
									],
									[
										115255,
										115262
									],
									[
										115516,
										115523
									],
									[
										115904,
										115911
									],
									[
										116078,
										116085
									],
									[
										116100,
										116107
									],
									[
										116467,
										116474
									],
									[
										116641,
										116648
									],
									[
										116663,
										116670
									],
									[
										117030,
										117037
									],
									[
										117204,
										117211
									],
									[
										117226,
										117233
									],
									[
										117778,
										117785
									],
									[
										117986,
										117993
									],
									[
										118160,
										118167
									],
									[
										118182,
										118189
									],
									[
										118373,
										118380
									],
									[
										118547,
										118554
									],
									[
										118569,
										118576
									],
									[
										118760,
										118767
									],
									[
										118934,
										118941
									],
									[
										118956,
										118963
									],
									[
										119348,
										119355
									],
									[
										119552,
										119559
									],
									[
										119726,
										119733
									],
									[
										119748,
										119755
									],
									[
										119935,
										119942
									],
									[
										120109,
										120116
									],
									[
										120131,
										120138
									],
									[
										120318,
										120325
									],
									[
										120492,
										120499
									],
									[
										120514,
										120521
									],
									[
										120914,
										120921
									],
									[
										121118,
										121125
									],
									[
										121292,
										121299
									],
									[
										121314,
										121321
									],
									[
										121501,
										121508
									],
									[
										121675,
										121682
									],
									[
										121697,
										121704
									],
									[
										121884,
										121891
									],
									[
										122058,
										122065
									],
									[
										122080,
										122087
									],
									[
										122480,
										122487
									],
									[
										122684,
										122691
									],
									[
										122858,
										122865
									],
									[
										122880,
										122887
									],
									[
										123067,
										123074
									],
									[
										123241,
										123248
									],
									[
										123263,
										123270
									],
									[
										123450,
										123457
									],
									[
										123624,
										123631
									],
									[
										123646,
										123653
									],
									[
										123911,
										123918
									],
									[
										124307,
										124314
									],
									[
										124481,
										124488
									],
									[
										124503,
										124510
									],
									[
										124878,
										124885
									],
									[
										125052,
										125059
									],
									[
										125074,
										125081
									],
									[
										125449,
										125456
									],
									[
										125623,
										125630
									],
									[
										125645,
										125652
									],
									[
										126134,
										126141
									],
									[
										126483,
										126490
									],
									[
										126861,
										126868
									],
									[
										127109,
										127116
									],
									[
										127512,
										127519
									],
									[
										127546,
										127553
									],
									[
										127975,
										127982
									],
									[
										128009,
										128016
									],
									[
										128420,
										128427
									],
									[
										128454,
										128461
									],
									[
										128849,
										128856
									],
									[
										128883,
										128890
									],
									[
										129298,
										129305
									],
									[
										129332,
										129339
									],
									[
										129498,
										129505
									],
									[
										129535,
										129542
									],
									[
										129573,
										129580
									],
									[
										129738,
										129745
									],
									[
										129958,
										129965
									],
									[
										130079,
										130086
									],
									[
										130111,
										130118
									],
									[
										130177,
										130184
									],
									[
										130332,
										130339
									],
									[
										130364,
										130371
									],
									[
										130396,
										130403
									],
									[
										130462,
										130469
									],
									[
										130617,
										130624
									],
									[
										130649,
										130656
									],
									[
										130681,
										130688
									],
									[
										130747,
										130754
									],
									[
										130902,
										130909
									],
									[
										130934,
										130941
									],
									[
										130966,
										130973
									],
									[
										131032,
										131039
									],
									[
										131187,
										131194
									],
									[
										131219,
										131226
									],
									[
										131251,
										131258
									],
									[
										131317,
										131324
									],
									[
										131491,
										131498
									],
									[
										131523,
										131530
									],
									[
										131589,
										131596
									],
									[
										131744,
										131751
									],
									[
										131776,
										131783
									],
									[
										131808,
										131815
									],
									[
										131874,
										131881
									],
									[
										132029,
										132036
									],
									[
										132061,
										132068
									],
									[
										132093,
										132100
									],
									[
										132159,
										132166
									],
									[
										132314,
										132321
									],
									[
										132346,
										132353
									],
									[
										132378,
										132385
									],
									[
										132444,
										132451
									],
									[
										132638,
										132645
									],
									[
										132676,
										132683
									],
									[
										132823,
										132830
									],
									[
										132993,
										133000
									],
									[
										133050,
										133057
									],
									[
										133329,
										133336
									],
									[
										133536,
										133543
									],
									[
										133801,
										133808
									],
									[
										133949,
										133956
									],
									[
										134040,
										134047
									],
									[
										134328,
										134335
									],
									[
										134590,
										134597
									],
									[
										134841,
										134848
									],
									[
										134921,
										134928
									],
									[
										135166,
										135173
									],
									[
										135349,
										135356
									],
									[
										135619,
										135626
									],
									[
										135960,
										135967
									],
									[
										136382,
										136389
									],
									[
										136662,
										136669
									],
									[
										137107,
										137114
									],
									[
										137311,
										137318
									],
									[
										137466,
										137473
									],
									[
										137586,
										137593
									],
									[
										137839,
										137846
									],
									[
										138048,
										138055
									],
									[
										138100,
										138107
									],
									[
										138224,
										138231
									],
									[
										138341,
										138348
									],
									[
										138640,
										138647
									],
									[
										138772,
										138779
									],
									[
										139071,
										139078
									],
									[
										139293,
										139300
									],
									[
										139337,
										139344
									],
									[
										139601,
										139608
									],
									[
										139767,
										139774
									],
									[
										139933,
										139940
									],
									[
										140099,
										140106
									],
									[
										140265,
										140272
									],
									[
										140431,
										140438
									],
									[
										140597,
										140604
									],
									[
										140763,
										140770
									],
									[
										140929,
										140936
									],
									[
										141095,
										141102
									],
									[
										141308,
										141315
									],
									[
										141442,
										141449
									],
									[
										141524,
										141531
									],
									[
										141887,
										141894
									],
									[
										142021,
										142028
									],
									[
										142622,
										142629
									],
									[
										143333,
										143340
									],
									[
										143852,
										143859
									],
									[
										144124,
										144131
									],
									[
										144210,
										144217
									],
									[
										144449,
										144456
									],
									[
										144884,
										144891
									],
									[
										145302,
										145309
									],
									[
										145620,
										145627
									],
									[
										145749,
										145756
									],
									[
										146001,
										146008
									],
									[
										146028,
										146035
									],
									[
										146089,
										146096
									],
									[
										146145,
										146152
									],
									[
										146240,
										146247
									],
									[
										146432,
										146439
									],
									[
										146759,
										146766
									],
									[
										146822,
										146829
									],
									[
										146993,
										147000
									],
									[
										147317,
										147324
									],
									[
										147455,
										147462
									],
									[
										147508,
										147515
									],
									[
										148009,
										148016
									],
									[
										148028,
										148035
									],
									[
										148048,
										148055
									],
									[
										148126,
										148133
									],
									[
										148151,
										148158
									],
									[
										148195,
										148202
									],
									[
										148629,
										148636
									],
									[
										148687,
										148694
									],
									[
										149073,
										149080
									],
									[
										149254,
										149261
									],
									[
										149678,
										149685
									],
									[
										149860,
										149867
									],
									[
										149985,
										149992
									],
									[
										150042,
										150049
									],
									[
										150072,
										150079
									],
									[
										150149,
										150156
									],
									[
										150220,
										150227
									],
									[
										150297,
										150304
									],
									[
										150436,
										150443
									],
									[
										150482,
										150489
									],
									[
										150550,
										150557
									],
									[
										150622,
										150629
									],
									[
										150696,
										150703
									],
									[
										150751,
										150758
									],
									[
										150832,
										150839
									],
									[
										150851,
										150858
									],
									[
										151252,
										151259
									],
									[
										151386,
										151393
									],
									[
										151580,
										151587
									],
									[
										151696,
										151703
									],
									[
										152019,
										152026
									],
									[
										152448,
										152455
									],
									[
										152591,
										152598
									],
									[
										152913,
										152920
									],
									[
										152953,
										152960
									],
									[
										153249,
										153256
									],
									[
										153299,
										153306
									],
									[
										153336,
										153343
									],
									[
										153400,
										153407
									],
									[
										153643,
										153650
									],
									[
										153701,
										153708
									],
									[
										154169,
										154176
									],
									[
										154329,
										154336
									],
									[
										154361,
										154368
									],
									[
										154414,
										154421
									],
									[
										154464,
										154471
									],
									[
										154550,
										154557
									],
									[
										154906,
										154913
									],
									[
										155041,
										155048
									],
									[
										155182,
										155189
									],
									[
										155566,
										155573
									],
									[
										155700,
										155707
									],
									[
										156082,
										156089
									],
									[
										156371,
										156378
									],
									[
										156573,
										156580
									],
									[
										156777,
										156784
									],
									[
										157294,
										157301
									],
									[
										157572,
										157579
									],
									[
										157912,
										157919
									],
									[
										157960,
										157967
									],
									[
										158204,
										158211
									],
									[
										158267,
										158274
									],
									[
										158439,
										158446
									],
									[
										158656,
										158663
									],
									[
										158751,
										158758
									],
									[
										158925,
										158932
									],
									[
										159012,
										159019
									],
									[
										159342,
										159349
									],
									[
										159677,
										159684
									],
									[
										160263,
										160270
									],
									[
										160282,
										160289
									],
									[
										160302,
										160309
									],
									[
										160380,
										160387
									],
									[
										160405,
										160412
									],
									[
										160449,
										160456
									],
									[
										160979,
										160986
									],
									[
										161108,
										161115
									],
									[
										161369,
										161376
									],
									[
										161409,
										161416
									],
									[
										161687,
										161694
									],
									[
										161851,
										161858
									],
									[
										161946,
										161953
									],
									[
										162123,
										162130
									],
									[
										162192,
										162199
									],
									[
										162496,
										162503
									],
									[
										162674,
										162681
									],
									[
										162698,
										162705
									],
									[
										162874,
										162881
									],
									[
										163129,
										163136
									],
									[
										163255,
										163262
									],
									[
										163312,
										163319
									],
									[
										163342,
										163349
									],
									[
										163429,
										163436
									],
									[
										163500,
										163507
									],
									[
										163577,
										163584
									],
									[
										163717,
										163724
									],
									[
										163763,
										163770
									],
									[
										163831,
										163838
									],
									[
										163903,
										163910
									],
									[
										163978,
										163985
									],
									[
										164030,
										164037
									],
									[
										164205,
										164212
									],
									[
										164359,
										164366
									],
									[
										164378,
										164385
									],
									[
										164576,
										164583
									],
									[
										164624,
										164631
									],
									[
										164825,
										164832
									],
									[
										164878,
										164885
									],
									[
										165166,
										165173
									],
									[
										165563,
										165570
									],
									[
										165697,
										165704
									],
									[
										165965,
										165972
									],
									[
										166198,
										166205
									],
									[
										166314,
										166321
									],
									[
										166637,
										166644
									],
									[
										166980,
										166987
									],
									[
										167423,
										167430
									],
									[
										167463,
										167470
									],
									[
										167761,
										167768
									],
									[
										167811,
										167818
									],
									[
										167848,
										167855
									],
									[
										167912,
										167919
									],
									[
										168155,
										168162
									],
									[
										168213,
										168220
									],
									[
										168259,
										168266
									],
									[
										168372,
										168379
									],
									[
										168498,
										168505
									],
									[
										168974,
										168981
									],
									[
										169238,
										169245
									],
									[
										169329,
										169336
									],
									[
										169672,
										169679
									],
									[
										169956,
										169963
									],
									[
										170169,
										170176
									],
									[
										170219,
										170226
									],
									[
										170270,
										170277
									],
									[
										170518,
										170525
									],
									[
										170908,
										170915
									],
									[
										171323,
										171330
									],
									[
										171549,
										171556
									],
									[
										171758,
										171765
									],
									[
										171840,
										171847
									],
									[
										171932,
										171939
									],
									[
										172203,
										172210
									],
									[
										172455,
										172462
									],
									[
										176018,
										176025
									],
									[
										187341,
										187348
									],
									[
										187592,
										187599
									],
									[
										188101,
										188108
									],
									[
										188626,
										188633
									],
									[
										188855,
										188862
									],
									[
										189386,
										189393
									],
									[
										189885,
										189892
									],
									[
										190396,
										190403
									],
									[
										190902,
										190909
									],
									[
										191426,
										191433
									],
									[
										191945,
										191952
									],
									[
										192172,
										192179
									],
									[
										192420,
										192427
									],
									[
										192931,
										192938
									],
									[
										193166,
										193173
									],
									[
										193669,
										193676
									],
									[
										194195,
										194202
									],
									[
										194712,
										194719
									],
									[
										194981,
										194988
									],
									[
										195215,
										195222
									],
									[
										195430,
										195437
									],
									[
										195649,
										195656
									],
									[
										196187,
										196194
									],
									[
										196695,
										196702
									],
									[
										197171,
										197178
									],
									[
										197711,
										197718
									],
									[
										198271,
										198278
									],
									[
										198801,
										198808
									],
									[
										199483,
										199490
									],
									[
										199594,
										199601
									],
									[
										199705,
										199712
									],
									[
										199816,
										199823
									],
									[
										199927,
										199934
									],
									[
										200038,
										200045
									],
									[
										200149,
										200156
									],
									[
										200260,
										200267
									],
									[
										200371,
										200378
									],
									[
										200482,
										200489
									],
									[
										200593,
										200600
									],
									[
										200704,
										200711
									],
									[
										200815,
										200822
									],
									[
										200926,
										200933
									],
									[
										201037,
										201044
									],
									[
										201148,
										201155
									],
									[
										201259,
										201266
									],
									[
										201370,
										201377
									],
									[
										201481,
										201488
									],
									[
										201592,
										201599
									],
									[
										201703,
										201710
									],
									[
										201814,
										201821
									],
									[
										201925,
										201932
									],
									[
										202036,
										202043
									],
									[
										202147,
										202154
									],
									[
										202258,
										202265
									],
									[
										202369,
										202376
									],
									[
										202480,
										202487
									],
									[
										202591,
										202598
									],
									[
										202702,
										202709
									],
									[
										202813,
										202820
									],
									[
										202924,
										202931
									],
									[
										203035,
										203042
									],
									[
										203146,
										203153
									],
									[
										203257,
										203264
									],
									[
										203368,
										203375
									],
									[
										203479,
										203486
									],
									[
										203590,
										203597
									],
									[
										203701,
										203708
									],
									[
										203812,
										203819
									],
									[
										203923,
										203930
									],
									[
										204034,
										204041
									],
									[
										204145,
										204152
									],
									[
										204256,
										204263
									],
									[
										204367,
										204374
									],
									[
										204478,
										204485
									],
									[
										204589,
										204596
									],
									[
										204700,
										204707
									],
									[
										204811,
										204818
									],
									[
										204922,
										204929
									],
									[
										205033,
										205040
									],
									[
										205144,
										205151
									],
									[
										205255,
										205262
									],
									[
										205366,
										205373
									],
									[
										205477,
										205484
									],
									[
										205588,
										205595
									],
									[
										205699,
										205706
									],
									[
										205810,
										205817
									],
									[
										205921,
										205928
									],
									[
										206032,
										206039
									],
									[
										206143,
										206150
									],
									[
										206254,
										206261
									],
									[
										206365,
										206372
									],
									[
										206476,
										206483
									],
									[
										206587,
										206594
									],
									[
										206698,
										206705
									],
									[
										206809,
										206816
									],
									[
										206920,
										206927
									],
									[
										207031,
										207038
									],
									[
										207142,
										207149
									],
									[
										207253,
										207260
									],
									[
										207364,
										207371
									],
									[
										207475,
										207482
									],
									[
										207586,
										207593
									],
									[
										207697,
										207704
									],
									[
										207808,
										207815
									],
									[
										207919,
										207926
									],
									[
										208030,
										208037
									],
									[
										208141,
										208148
									],
									[
										208252,
										208259
									],
									[
										208363,
										208370
									],
									[
										208474,
										208481
									],
									[
										208585,
										208592
									],
									[
										208696,
										208703
									],
									[
										208807,
										208814
									],
									[
										208918,
										208925
									],
									[
										209029,
										209036
									],
									[
										209140,
										209147
									],
									[
										209251,
										209258
									],
									[
										209362,
										209369
									],
									[
										209473,
										209480
									],
									[
										209584,
										209591
									],
									[
										209695,
										209702
									],
									[
										209806,
										209813
									],
									[
										209917,
										209924
									],
									[
										210028,
										210035
									],
									[
										210139,
										210146
									],
									[
										210250,
										210257
									],
									[
										210361,
										210368
									],
									[
										210472,
										210479
									],
									[
										210583,
										210590
									],
									[
										210694,
										210701
									],
									[
										210805,
										210812
									],
									[
										210916,
										210923
									],
									[
										211027,
										211034
									],
									[
										211138,
										211145
									],
									[
										211249,
										211256
									],
									[
										211360,
										211367
									],
									[
										211471,
										211478
									],
									[
										211582,
										211589
									],
									[
										211693,
										211700
									],
									[
										211804,
										211811
									],
									[
										211915,
										211922
									],
									[
										212026,
										212033
									],
									[
										212137,
										212144
									],
									[
										212248,
										212255
									],
									[
										212359,
										212366
									],
									[
										212470,
										212477
									],
									[
										212581,
										212588
									],
									[
										212692,
										212699
									],
									[
										212803,
										212810
									],
									[
										212914,
										212921
									],
									[
										213025,
										213032
									],
									[
										213136,
										213143
									],
									[
										213247,
										213254
									],
									[
										213358,
										213365
									],
									[
										213469,
										213476
									],
									[
										213580,
										213587
									],
									[
										213691,
										213698
									],
									[
										213802,
										213809
									],
									[
										213913,
										213920
									],
									[
										214024,
										214031
									],
									[
										214135,
										214142
									],
									[
										214246,
										214253
									],
									[
										214357,
										214364
									],
									[
										214468,
										214475
									],
									[
										214579,
										214586
									],
									[
										214690,
										214697
									],
									[
										214801,
										214808
									],
									[
										214912,
										214919
									],
									[
										215023,
										215030
									],
									[
										215134,
										215141
									],
									[
										215245,
										215252
									],
									[
										215356,
										215363
									],
									[
										215467,
										215474
									],
									[
										215578,
										215585
									],
									[
										215689,
										215696
									],
									[
										215800,
										215807
									],
									[
										215911,
										215918
									],
									[
										216022,
										216029
									],
									[
										216133,
										216140
									],
									[
										216244,
										216251
									],
									[
										216355,
										216362
									],
									[
										216466,
										216473
									],
									[
										216577,
										216584
									],
									[
										216688,
										216695
									],
									[
										216799,
										216806
									],
									[
										216910,
										216917
									],
									[
										217021,
										217028
									],
									[
										217132,
										217139
									],
									[
										217243,
										217250
									],
									[
										217354,
										217361
									],
									[
										217465,
										217472
									],
									[
										217576,
										217583
									],
									[
										217687,
										217694
									],
									[
										217798,
										217805
									],
									[
										217909,
										217916
									],
									[
										218020,
										218027
									],
									[
										218131,
										218138
									],
									[
										218242,
										218249
									],
									[
										218353,
										218360
									],
									[
										218464,
										218471
									],
									[
										218575,
										218582
									],
									[
										218686,
										218693
									],
									[
										218797,
										218804
									],
									[
										218908,
										218915
									],
									[
										219019,
										219026
									],
									[
										219130,
										219137
									],
									[
										219241,
										219248
									],
									[
										219352,
										219359
									],
									[
										219463,
										219470
									],
									[
										219574,
										219581
									],
									[
										219685,
										219692
									],
									[
										219796,
										219803
									],
									[
										219907,
										219914
									],
									[
										220018,
										220025
									],
									[
										220129,
										220136
									],
									[
										220240,
										220247
									],
									[
										220351,
										220358
									],
									[
										220462,
										220469
									],
									[
										220573,
										220580
									],
									[
										220684,
										220691
									],
									[
										220795,
										220802
									],
									[
										220906,
										220913
									],
									[
										221017,
										221024
									],
									[
										221128,
										221135
									],
									[
										221239,
										221246
									],
									[
										221350,
										221357
									],
									[
										221461,
										221468
									],
									[
										221572,
										221579
									],
									[
										221683,
										221690
									],
									[
										221794,
										221801
									],
									[
										221905,
										221912
									],
									[
										222016,
										222023
									],
									[
										222127,
										222134
									],
									[
										222238,
										222245
									],
									[
										222349,
										222356
									],
									[
										222460,
										222467
									],
									[
										222571,
										222578
									],
									[
										222682,
										222689
									],
									[
										222793,
										222800
									],
									[
										222904,
										222911
									],
									[
										223015,
										223022
									],
									[
										223126,
										223133
									],
									[
										223237,
										223244
									],
									[
										223348,
										223355
									],
									[
										223459,
										223466
									],
									[
										223570,
										223577
									],
									[
										223681,
										223688
									],
									[
										223792,
										223799
									],
									[
										223903,
										223910
									],
									[
										224014,
										224021
									],
									[
										224125,
										224132
									],
									[
										224236,
										224243
									],
									[
										224347,
										224354
									],
									[
										224458,
										224465
									],
									[
										224569,
										224576
									],
									[
										224680,
										224687
									],
									[
										224791,
										224798
									],
									[
										224902,
										224909
									],
									[
										225013,
										225020
									],
									[
										225124,
										225131
									],
									[
										225235,
										225242
									],
									[
										225346,
										225353
									],
									[
										225457,
										225464
									],
									[
										225568,
										225575
									],
									[
										225679,
										225686
									],
									[
										225790,
										225797
									],
									[
										225901,
										225908
									],
									[
										226012,
										226019
									],
									[
										226123,
										226130
									],
									[
										226234,
										226241
									],
									[
										226345,
										226352
									],
									[
										226456,
										226463
									],
									[
										226567,
										226574
									],
									[
										226678,
										226685
									],
									[
										226789,
										226796
									],
									[
										226900,
										226907
									],
									[
										227011,
										227018
									],
									[
										227122,
										227129
									],
									[
										227233,
										227240
									],
									[
										227344,
										227351
									],
									[
										227455,
										227462
									],
									[
										227566,
										227573
									],
									[
										227677,
										227684
									],
									[
										227788,
										227795
									],
									[
										227899,
										227906
									],
									[
										228010,
										228017
									],
									[
										228121,
										228128
									],
									[
										228232,
										228239
									],
									[
										228343,
										228350
									],
									[
										228454,
										228461
									],
									[
										228565,
										228572
									],
									[
										228676,
										228683
									],
									[
										228787,
										228794
									],
									[
										228898,
										228905
									],
									[
										229009,
										229016
									],
									[
										229120,
										229127
									],
									[
										229231,
										229238
									],
									[
										229342,
										229349
									],
									[
										229453,
										229460
									],
									[
										229564,
										229571
									],
									[
										229675,
										229682
									],
									[
										229786,
										229793
									],
									[
										229897,
										229904
									],
									[
										230008,
										230015
									],
									[
										230119,
										230126
									],
									[
										230230,
										230237
									],
									[
										230341,
										230348
									],
									[
										230452,
										230459
									],
									[
										230563,
										230570
									],
									[
										230674,
										230681
									],
									[
										230785,
										230792
									],
									[
										230896,
										230903
									],
									[
										231007,
										231014
									],
									[
										231118,
										231125
									],
									[
										231229,
										231236
									],
									[
										231340,
										231347
									],
									[
										231451,
										231458
									],
									[
										231562,
										231569
									],
									[
										231673,
										231680
									],
									[
										231784,
										231791
									],
									[
										231895,
										231902
									],
									[
										232006,
										232013
									],
									[
										232117,
										232124
									],
									[
										232228,
										232235
									],
									[
										232339,
										232346
									],
									[
										232450,
										232457
									],
									[
										232561,
										232568
									],
									[
										232672,
										232679
									],
									[
										232783,
										232790
									],
									[
										232894,
										232901
									],
									[
										233005,
										233012
									],
									[
										233116,
										233123
									],
									[
										233227,
										233234
									],
									[
										233338,
										233345
									],
									[
										233449,
										233456
									],
									[
										233560,
										233567
									],
									[
										233671,
										233678
									],
									[
										233782,
										233789
									],
									[
										233893,
										233900
									],
									[
										234004,
										234011
									],
									[
										234115,
										234122
									],
									[
										234226,
										234233
									],
									[
										234337,
										234344
									],
									[
										234448,
										234455
									],
									[
										234559,
										234566
									],
									[
										234670,
										234677
									],
									[
										234781,
										234788
									],
									[
										234892,
										234899
									],
									[
										235003,
										235010
									],
									[
										235114,
										235121
									],
									[
										235225,
										235232
									],
									[
										235336,
										235343
									],
									[
										235447,
										235454
									],
									[
										235558,
										235565
									],
									[
										235669,
										235676
									],
									[
										235780,
										235787
									],
									[
										235891,
										235898
									],
									[
										236002,
										236009
									],
									[
										236113,
										236120
									],
									[
										236224,
										236231
									],
									[
										236335,
										236342
									],
									[
										236446,
										236453
									],
									[
										236557,
										236564
									],
									[
										236668,
										236675
									],
									[
										236779,
										236786
									],
									[
										236890,
										236897
									],
									[
										237001,
										237008
									],
									[
										237112,
										237119
									],
									[
										237223,
										237230
									],
									[
										237334,
										237341
									],
									[
										237445,
										237452
									],
									[
										237556,
										237563
									],
									[
										237667,
										237674
									],
									[
										237778,
										237785
									],
									[
										237889,
										237896
									],
									[
										238000,
										238007
									],
									[
										238111,
										238118
									],
									[
										238222,
										238229
									],
									[
										238333,
										238340
									],
									[
										238444,
										238451
									],
									[
										238555,
										238562
									],
									[
										238666,
										238673
									],
									[
										238777,
										238784
									],
									[
										238888,
										238895
									],
									[
										238999,
										239006
									],
									[
										239110,
										239117
									],
									[
										239221,
										239228
									],
									[
										239332,
										239339
									],
									[
										239443,
										239450
									],
									[
										239554,
										239561
									],
									[
										239665,
										239672
									],
									[
										239776,
										239783
									],
									[
										239887,
										239894
									],
									[
										239998,
										240005
									],
									[
										240109,
										240116
									],
									[
										240220,
										240227
									],
									[
										240331,
										240338
									],
									[
										240442,
										240449
									],
									[
										240553,
										240560
									],
									[
										240664,
										240671
									],
									[
										240775,
										240782
									],
									[
										240886,
										240893
									],
									[
										240997,
										241004
									],
									[
										241108,
										241115
									],
									[
										241219,
										241226
									],
									[
										241330,
										241337
									],
									[
										241441,
										241448
									],
									[
										241552,
										241559
									],
									[
										241663,
										241670
									],
									[
										241774,
										241781
									],
									[
										241885,
										241892
									],
									[
										241996,
										242003
									],
									[
										242107,
										242114
									],
									[
										242218,
										242225
									],
									[
										242329,
										242336
									],
									[
										242440,
										242447
									],
									[
										242551,
										242558
									],
									[
										242662,
										242669
									],
									[
										242773,
										242780
									],
									[
										242884,
										242891
									],
									[
										242995,
										243002
									],
									[
										243106,
										243113
									],
									[
										243217,
										243224
									],
									[
										243328,
										243335
									],
									[
										243439,
										243446
									],
									[
										243550,
										243557
									],
									[
										243661,
										243668
									],
									[
										243772,
										243779
									],
									[
										243883,
										243890
									],
									[
										243994,
										244001
									],
									[
										244105,
										244112
									],
									[
										244216,
										244223
									],
									[
										244327,
										244334
									],
									[
										244438,
										244445
									],
									[
										244549,
										244556
									],
									[
										244660,
										244667
									],
									[
										244771,
										244778
									],
									[
										244882,
										244889
									],
									[
										244993,
										245000
									],
									[
										245104,
										245111
									],
									[
										245215,
										245222
									],
									[
										245326,
										245333
									],
									[
										245437,
										245444
									],
									[
										245548,
										245555
									],
									[
										245659,
										245666
									],
									[
										245770,
										245777
									],
									[
										245881,
										245888
									],
									[
										245992,
										245999
									],
									[
										246103,
										246110
									],
									[
										246214,
										246221
									],
									[
										246325,
										246332
									],
									[
										246436,
										246443
									],
									[
										246547,
										246554
									],
									[
										246658,
										246665
									],
									[
										246769,
										246776
									],
									[
										246880,
										246887
									],
									[
										246991,
										246998
									],
									[
										247102,
										247109
									],
									[
										247213,
										247220
									],
									[
										247324,
										247331
									],
									[
										247435,
										247442
									],
									[
										247546,
										247553
									],
									[
										247657,
										247664
									],
									[
										247768,
										247775
									],
									[
										247879,
										247886
									],
									[
										247990,
										247997
									],
									[
										248101,
										248108
									],
									[
										248212,
										248219
									],
									[
										248323,
										248330
									],
									[
										248434,
										248441
									],
									[
										248545,
										248552
									],
									[
										248656,
										248663
									],
									[
										248767,
										248774
									],
									[
										248878,
										248885
									],
									[
										248989,
										248996
									],
									[
										249100,
										249107
									],
									[
										249211,
										249218
									],
									[
										249322,
										249329
									],
									[
										249433,
										249440
									],
									[
										249544,
										249551
									],
									[
										249655,
										249662
									],
									[
										249766,
										249773
									],
									[
										249877,
										249884
									],
									[
										249988,
										249995
									],
									[
										250099,
										250106
									],
									[
										250210,
										250217
									],
									[
										250321,
										250328
									],
									[
										250432,
										250439
									],
									[
										250543,
										250550
									],
									[
										250654,
										250661
									],
									[
										250765,
										250772
									],
									[
										250876,
										250883
									],
									[
										250987,
										250994
									],
									[
										251098,
										251105
									],
									[
										251209,
										251216
									],
									[
										251320,
										251327
									],
									[
										251431,
										251438
									],
									[
										251542,
										251549
									],
									[
										251653,
										251660
									],
									[
										251764,
										251771
									],
									[
										251875,
										251882
									],
									[
										251986,
										251993
									],
									[
										252097,
										252104
									],
									[
										252208,
										252215
									],
									[
										252319,
										252326
									],
									[
										252430,
										252437
									],
									[
										252541,
										252548
									],
									[
										252652,
										252659
									],
									[
										252763,
										252770
									],
									[
										252874,
										252881
									],
									[
										252985,
										252992
									],
									[
										253096,
										253103
									],
									[
										253207,
										253214
									],
									[
										253318,
										253325
									],
									[
										253429,
										253436
									],
									[
										253540,
										253547
									],
									[
										253651,
										253658
									],
									[
										253762,
										253769
									],
									[
										253873,
										253880
									],
									[
										253984,
										253991
									],
									[
										254095,
										254102
									],
									[
										254206,
										254213
									],
									[
										254317,
										254324
									],
									[
										254428,
										254435
									],
									[
										254539,
										254546
									],
									[
										254650,
										254657
									],
									[
										254761,
										254768
									],
									[
										254872,
										254879
									],
									[
										254983,
										254990
									],
									[
										255094,
										255101
									],
									[
										255205,
										255212
									],
									[
										255316,
										255323
									],
									[
										255427,
										255434
									],
									[
										255538,
										255545
									],
									[
										255649,
										255656
									],
									[
										255760,
										255767
									],
									[
										255871,
										255878
									],
									[
										255982,
										255989
									],
									[
										256093,
										256100
									],
									[
										256204,
										256211
									],
									[
										256315,
										256322
									],
									[
										256426,
										256433
									],
									[
										256537,
										256544
									],
									[
										256648,
										256655
									],
									[
										256759,
										256766
									],
									[
										256870,
										256877
									],
									[
										256981,
										256988
									],
									[
										257092,
										257099
									],
									[
										257203,
										257210
									],
									[
										257314,
										257321
									],
									[
										257425,
										257432
									],
									[
										257536,
										257543
									],
									[
										257647,
										257654
									],
									[
										257758,
										257765
									],
									[
										257869,
										257876
									],
									[
										257980,
										257987
									],
									[
										258091,
										258098
									],
									[
										258202,
										258209
									],
									[
										258313,
										258320
									],
									[
										258424,
										258431
									],
									[
										258535,
										258542
									],
									[
										258646,
										258653
									],
									[
										258757,
										258764
									],
									[
										258868,
										258875
									],
									[
										258979,
										258986
									],
									[
										259090,
										259097
									],
									[
										259201,
										259208
									],
									[
										259312,
										259319
									],
									[
										259423,
										259430
									],
									[
										259534,
										259541
									],
									[
										259645,
										259652
									],
									[
										259756,
										259763
									],
									[
										259867,
										259874
									],
									[
										259978,
										259985
									],
									[
										260089,
										260096
									],
									[
										260200,
										260207
									],
									[
										260311,
										260318
									],
									[
										260422,
										260429
									],
									[
										260533,
										260540
									],
									[
										260644,
										260651
									],
									[
										260755,
										260762
									],
									[
										260866,
										260873
									],
									[
										260977,
										260984
									],
									[
										261088,
										261095
									],
									[
										261199,
										261206
									],
									[
										261310,
										261317
									],
									[
										261421,
										261428
									],
									[
										261532,
										261539
									],
									[
										261643,
										261650
									],
									[
										261754,
										261761
									],
									[
										261865,
										261872
									],
									[
										261976,
										261983
									],
									[
										262087,
										262094
									],
									[
										262198,
										262205
									],
									[
										262309,
										262316
									],
									[
										262420,
										262427
									],
									[
										262531,
										262538
									],
									[
										262642,
										262649
									],
									[
										262753,
										262760
									],
									[
										262864,
										262871
									],
									[
										262975,
										262982
									],
									[
										263086,
										263093
									],
									[
										263197,
										263204
									],
									[
										263308,
										263315
									],
									[
										263419,
										263426
									],
									[
										263530,
										263537
									],
									[
										263641,
										263648
									],
									[
										263752,
										263759
									],
									[
										263863,
										263870
									],
									[
										263974,
										263981
									],
									[
										264085,
										264092
									],
									[
										264196,
										264203
									],
									[
										264307,
										264314
									],
									[
										264418,
										264425
									],
									[
										264529,
										264536
									],
									[
										264640,
										264647
									],
									[
										264751,
										264758
									],
									[
										264862,
										264869
									],
									[
										264973,
										264980
									],
									[
										265084,
										265091
									],
									[
										265195,
										265202
									],
									[
										265306,
										265313
									],
									[
										265417,
										265424
									],
									[
										265528,
										265535
									],
									[
										265639,
										265646
									],
									[
										265750,
										265757
									],
									[
										266192,
										266199
									],
									[
										266674,
										266681
									],
									[
										267057,
										267064
									],
									[
										267163,
										267170
									],
									[
										267366,
										267373
									],
									[
										267597,
										267604
									],
									[
										267707,
										267714
									],
									[
										267914,
										267921
									],
									[
										267974,
										267981
									],
									[
										268088,
										268095
									],
									[
										268299,
										268306
									],
									[
										268380,
										268387
									],
									[
										268490,
										268497
									],
									[
										268697,
										268704
									],
									[
										268915,
										268922
									],
									[
										269043,
										269050
									],
									[
										269274,
										269281
									],
									[
										269569,
										269576
									],
									[
										269669,
										269676
									],
									[
										269872,
										269879
									],
									[
										270065,
										270072
									],
									[
										270179,
										270186
									],
									[
										270394,
										270401
									],
									[
										270467,
										270474
									],
									[
										270569,
										270576
									],
									[
										270772,
										270779
									],
									[
										270974,
										270981
									],
									[
										271080,
										271087
									],
									[
										271289,
										271296
									],
									[
										271535,
										271542
									],
									[
										271639,
										271646
									],
									[
										271846,
										271853
									],
									[
										272069,
										272076
									],
									[
										272184,
										272191
									],
									[
										272292,
										272299
									],
									[
										272395,
										272402
									],
									[
										272446,
										272453
									],
									[
										272551,
										272558
									],
									[
										272671,
										272678
									],
									[
										272752,
										272759
									],
									[
										272824,
										272831
									],
									[
										272926,
										272933
									],
									[
										273035,
										273042
									],
									[
										273124,
										273131
									],
									[
										273182,
										273189
									],
									[
										273280,
										273287
									],
									[
										273393,
										273400
									],
									[
										273474,
										273481
									],
									[
										273526,
										273533
									],
									[
										273639,
										273646
									],
									[
										273767,
										273774
									],
									[
										273848,
										273855
									],
									[
										274159,
										274166
									],
									[
										274272,
										274279
									],
									[
										274462,
										274469
									],
									[
										274712,
										274719
									],
									[
										274832,
										274839
									],
									[
										275105,
										275112
									],
									[
										275215,
										275222
									],
									[
										275404,
										275411
									],
									[
										275468,
										275475
									],
									[
										275578,
										275585
									],
									[
										275767,
										275774
									],
									[
										276020,
										276027
									],
									[
										276132,
										276139
									],
									[
										276323,
										276330
									],
									[
										276610,
										276617
									],
									[
										276714,
										276721
									],
									[
										276893,
										276900
									],
									[
										277189,
										277196
									],
									[
										277294,
										277301
									],
									[
										277476,
										277483
									],
									[
										277709,
										277716
									],
									[
										277820,
										277827
									],
									[
										278021,
										278028
									],
									[
										278086,
										278093
									],
									[
										278197,
										278204
									],
									[
										278398,
										278405
									],
									[
										278651,
										278658
									],
									[
										278764,
										278771
									],
									[
										278967,
										278974
									],
									[
										279239,
										279246
									],
									[
										279353,
										279360
									],
									[
										279543,
										279550
									],
									[
										279824,
										279831
									],
									[
										279941,
										279948
									],
									[
										280145,
										280152
									],
									[
										280405,
										280412
									],
									[
										280511,
										280518
									],
									[
										280704,
										280711
									],
									[
										281103,
										281110
									],
									[
										281667,
										281674
									],
									[
										282231,
										282238
									],
									[
										282707,
										282714
									],
									[
										283187,
										283194
									],
									[
										283751,
										283758
									],
									[
										284315,
										284322
									],
									[
										284879,
										284886
									],
									[
										285443,
										285450
									],
									[
										286007,
										286014
									],
									[
										286571,
										286578
									],
									[
										287135,
										287142
									],
									[
										287612,
										287619
									],
									[
										288011,
										288018
									],
									[
										288067,
										288074
									],
									[
										288378,
										288385
									],
									[
										288393,
										288400
									],
									[
										288762,
										288769
									],
									[
										289002,
										289009
									],
									[
										289242,
										289249
									],
									[
										289479,
										289486
									],
									[
										289719,
										289726
									],
									[
										289950,
										289957
									],
									[
										290169,
										290176
									],
									[
										290389,
										290396
									],
									[
										290609,
										290616
									],
									[
										290849,
										290856
									],
									[
										291087,
										291094
									],
									[
										291297,
										291304
									],
									[
										291530,
										291537
									],
									[
										291736,
										291743
									],
									[
										292156,
										292163
									],
									[
										292171,
										292178
									],
									[
										292931,
										292938
									],
									[
										292952,
										292959
									],
									[
										293087,
										293094
									],
									[
										295100,
										295107
									],
									[
										295115,
										295122
									],
									[
										295907,
										295914
									],
									[
										295922,
										295929
									],
									[
										296682,
										296689
									],
									[
										296703,
										296710
									],
									[
										296838,
										296845
									],
									[
										298800,
										298807
									],
									[
										298815,
										298822
									],
									[
										299592,
										299599
									],
									[
										300515,
										300522
									],
									[
										300530,
										300537
									],
									[
										301290,
										301297
									],
									[
										301311,
										301318
									],
									[
										301446,
										301453
									],
									[
										303459,
										303466
									],
									[
										303474,
										303481
									],
									[
										304252,
										304259
									],
									[
										304267,
										304274
									],
									[
										305027,
										305034
									],
									[
										305048,
										305055
									],
									[
										305183,
										305190
									],
									[
										307196,
										307203
									],
									[
										307211,
										307218
									],
									[
										307991,
										307998
									],
									[
										308199,
										308206
									],
									[
										308373,
										308380
									],
									[
										308395,
										308402
									],
									[
										308586,
										308593
									],
									[
										308760,
										308767
									],
									[
										308782,
										308789
									],
									[
										308973,
										308980
									],
									[
										309147,
										309154
									],
									[
										309169,
										309176
									],
									[
										309516,
										309523
									],
									[
										309720,
										309727
									],
									[
										309894,
										309901
									],
									[
										309916,
										309923
									],
									[
										310103,
										310110
									],
									[
										310277,
										310284
									],
									[
										310299,
										310306
									],
									[
										310486,
										310493
									],
									[
										310660,
										310667
									],
									[
										310682,
										310689
									],
									[
										311082,
										311089
									],
									[
										311286,
										311293
									],
									[
										311460,
										311467
									],
									[
										311482,
										311489
									],
									[
										311669,
										311676
									],
									[
										311843,
										311850
									],
									[
										311865,
										311872
									],
									[
										312052,
										312059
									],
									[
										312226,
										312233
									],
									[
										312248,
										312255
									],
									[
										312648,
										312655
									],
									[
										312852,
										312859
									],
									[
										313026,
										313033
									],
									[
										313048,
										313055
									],
									[
										313235,
										313242
									],
									[
										313409,
										313416
									],
									[
										313431,
										313438
									],
									[
										313618,
										313625
									],
									[
										313792,
										313799
									],
									[
										313814,
										313821
									],
									[
										314075,
										314082
									],
									[
										314463,
										314470
									],
									[
										314637,
										314644
									],
									[
										314659,
										314666
									],
									[
										315026,
										315033
									],
									[
										315200,
										315207
									],
									[
										315222,
										315229
									],
									[
										315589,
										315596
									],
									[
										315763,
										315770
									],
									[
										315785,
										315792
									],
									[
										316326,
										316333
									],
									[
										316534,
										316541
									],
									[
										316708,
										316715
									],
									[
										316730,
										316737
									],
									[
										316921,
										316928
									],
									[
										317095,
										317102
									],
									[
										317117,
										317124
									],
									[
										317308,
										317315
									],
									[
										317482,
										317489
									],
									[
										317504,
										317511
									],
									[
										317895,
										317902
									],
									[
										318099,
										318106
									],
									[
										318273,
										318280
									],
									[
										318295,
										318302
									],
									[
										318482,
										318489
									],
									[
										318656,
										318663
									],
									[
										318678,
										318685
									],
									[
										318865,
										318872
									],
									[
										319039,
										319046
									],
									[
										319061,
										319068
									],
									[
										319461,
										319468
									],
									[
										319665,
										319672
									],
									[
										319839,
										319846
									],
									[
										319861,
										319868
									],
									[
										320048,
										320055
									],
									[
										320222,
										320229
									],
									[
										320244,
										320251
									],
									[
										320431,
										320438
									],
									[
										320605,
										320612
									],
									[
										320627,
										320634
									],
									[
										321027,
										321034
									],
									[
										321231,
										321238
									],
									[
										321405,
										321412
									],
									[
										321427,
										321434
									],
									[
										321614,
										321621
									],
									[
										321788,
										321795
									],
									[
										321810,
										321817
									],
									[
										321997,
										322004
									],
									[
										322171,
										322178
									],
									[
										322193,
										322200
									],
									[
										322458,
										322465
									],
									[
										322854,
										322861
									],
									[
										323028,
										323035
									],
									[
										323050,
										323057
									],
									[
										323425,
										323432
									],
									[
										323599,
										323606
									],
									[
										323621,
										323628
									],
									[
										323996,
										324003
									],
									[
										324170,
										324177
									],
									[
										324192,
										324199
									],
									[
										324741,
										324748
									],
									[
										324756,
										324763
									],
									[
										325516,
										325523
									],
									[
										325537,
										325544
									],
									[
										325672,
										325679
									],
									[
										327685,
										327692
									],
									[
										327700,
										327707
									],
									[
										328433,
										328440
									],
									[
										328830,
										328837
									],
									[
										328880,
										328887
									],
									[
										329286,
										329293
									],
									[
										329342,
										329349
									],
									[
										329636,
										329643
									],
									[
										330072,
										330079
									],
									[
										330122,
										330129
									],
									[
										330601,
										330608
									],
									[
										331740,
										331747
									],
									[
										331984,
										331991
									],
									[
										332158,
										332165
									],
									[
										332180,
										332187
									],
									[
										332407,
										332414
									],
									[
										332581,
										332588
									],
									[
										332603,
										332610
									],
									[
										332830,
										332837
									],
									[
										333004,
										333011
									],
									[
										333026,
										333033
									],
									[
										333319,
										333326
									],
									[
										334386,
										334393
									],
									[
										334630,
										334637
									],
									[
										334804,
										334811
									],
									[
										334826,
										334833
									],
									[
										335053,
										335060
									],
									[
										335227,
										335234
									],
									[
										335249,
										335256
									],
									[
										335476,
										335483
									],
									[
										335650,
										335657
									],
									[
										335672,
										335679
									],
									[
										336188,
										336195
									],
									[
										336203,
										336210
									],
									[
										336963,
										336970
									],
									[
										336984,
										336991
									],
									[
										337119,
										337126
									],
									[
										339132,
										339139
									],
									[
										339147,
										339154
									],
									[
										339814,
										339821
									],
									[
										340092,
										340099
									],
									[
										340149,
										340156
									],
									[
										340206,
										340213
									],
									[
										340502,
										340509
									],
									[
										340840,
										340847
									],
									[
										340852,
										340859
									],
									[
										341271,
										341278
									],
									[
										341552,
										341559
									],
									[
										341898,
										341905
									],
									[
										342392,
										342399
									],
									[
										342409,
										342416
									],
									[
										343661,
										343668
									],
									[
										343677,
										343684
									],
									[
										345049,
										345056
									],
									[
										345325,
										345332
									],
									[
										345340,
										345347
									],
									[
										345656,
										345663
									],
									[
										345941,
										345948
									],
									[
										346218,
										346225
									],
									[
										346501,
										346508
									],
									[
										346981,
										346988
									],
									[
										347492,
										347499
									],
									[
										347999,
										348006
									],
									[
										348286,
										348293
									],
									[
										348315,
										348322
									],
									[
										348596,
										348603
									],
									[
										348951,
										348958
									],
									[
										349329,
										349336
									],
									[
										349400,
										349407
									],
									[
										349669,
										349676
									],
									[
										349698,
										349705
									],
									[
										349875,
										349882
									],
									[
										350049,
										350056
									],
									[
										350087,
										350094
									],
									[
										350102,
										350109
									],
									[
										350247,
										350254
									],
									[
										350359,
										350366
									],
									[
										350446,
										350453
									],
									[
										350493,
										350500
									],
									[
										350665,
										350672
									],
									[
										350681,
										350688
									],
									[
										350743,
										350750
									],
									[
										350894,
										350901
									],
									[
										351082,
										351089
									],
									[
										351275,
										351282
									],
									[
										351404,
										351411
									],
									[
										351499,
										351506
									],
									[
										351634,
										351641
									],
									[
										351648,
										351655
									],
									[
										351703,
										351710
									],
									[
										351793,
										351800
									],
									[
										351807,
										351814
									],
									[
										351882,
										351889
									],
									[
										352118,
										352125
									],
									[
										352235,
										352242
									],
									[
										352360,
										352367
									],
									[
										352563,
										352570
									],
									[
										352691,
										352698
									],
									[
										352800,
										352807
									],
									[
										352872,
										352879
									],
									[
										353052,
										353059
									],
									[
										353190,
										353197
									],
									[
										353331,
										353338
									],
									[
										353437,
										353444
									],
									[
										353495,
										353502
									],
									[
										353657,
										353664
									],
									[
										353757,
										353764
									],
									[
										353916,
										353923
									],
									[
										354011,
										354018
									],
									[
										354151,
										354158
									],
									[
										354204,
										354211
									],
									[
										354275,
										354282
									],
									[
										354337,
										354344
									],
									[
										354387,
										354394
									],
									[
										354477,
										354484
									],
									[
										354598,
										354605
									],
									[
										354612,
										354619
									],
									[
										354750,
										354757
									],
									[
										354852,
										354859
									],
									[
										355032,
										355039
									],
									[
										355155,
										355162
									],
									[
										355181,
										355188
									],
									[
										355232,
										355239
									],
									[
										355377,
										355384
									],
									[
										355469,
										355476
									],
									[
										355548,
										355555
									],
									[
										355806,
										355813
									],
									[
										355833,
										355840
									],
									[
										355994,
										356001
									],
									[
										356025,
										356032
									],
									[
										356144,
										356151
									],
									[
										356187,
										356194
									],
									[
										356366,
										356373
									],
									[
										356547,
										356554
									],
									[
										356613,
										356620
									],
									[
										356688,
										356695
									],
									[
										356714,
										356721
									],
									[
										356948,
										356955
									],
									[
										357074,
										357081
									],
									[
										357114,
										357121
									],
									[
										357337,
										357344
									],
									[
										357504,
										357511
									],
									[
										357644,
										357651
									],
									[
										357751,
										357758
									],
									[
										357804,
										357811
									],
									[
										357968,
										357975
									],
									[
										358129,
										358136
									],
									[
										358188,
										358195
									],
									[
										358324,
										358331
									],
									[
										358447,
										358454
									],
									[
										358591,
										358598
									],
									[
										358660,
										358667
									],
									[
										358779,
										358786
									],
									[
										358908,
										358915
									],
									[
										359029,
										359036
									],
									[
										359157,
										359164
									],
									[
										359287,
										359294
									],
									[
										359465,
										359472
									],
									[
										359578,
										359585
									],
									[
										359685,
										359692
									],
									[
										359817,
										359824
									],
									[
										359950,
										359957
									],
									[
										360087,
										360094
									],
									[
										360216,
										360223
									],
									[
										360412,
										360419
									],
									[
										360618,
										360625
									],
									[
										360813,
										360820
									],
									[
										360972,
										360979
									],
									[
										361212,
										361219
									],
									[
										361287,
										361294
									],
									[
										361523,
										361530
									],
									[
										361735,
										361742
									],
									[
										361839,
										361846
									],
									[
										361997,
										362004
									],
									[
										362158,
										362165
									],
									[
										362240,
										362247
									],
									[
										362528,
										362535
									],
									[
										362546,
										362553
									],
									[
										362836,
										362843
									],
									[
										363060,
										363067
									],
									[
										363237,
										363244
									],
									[
										363576,
										363583
									],
									[
										363881,
										363888
									],
									[
										364234,
										364241
									],
									[
										364566,
										364573
									],
									[
										364702,
										364709
									],
									[
										364838,
										364845
									],
									[
										364974,
										364981
									],
									[
										365110,
										365117
									],
									[
										365246,
										365253
									],
									[
										365515,
										365522
									],
									[
										365863,
										365870
									],
									[
										366056,
										366063
									],
									[
										366227,
										366234
									],
									[
										366472,
										366479
									],
									[
										366486,
										366493
									],
									[
										366649,
										366656
									],
									[
										366973,
										366980
									],
									[
										366988,
										366995
									],
									[
										367004,
										367011
									],
									[
										367032,
										367039
									],
									[
										367191,
										367198
									],
									[
										367202,
										367209
									],
									[
										367299,
										367306
									],
									[
										367313,
										367320
									],
									[
										367431,
										367438
									],
									[
										367477,
										367484
									],
									[
										367532,
										367539
									],
									[
										367730,
										367737
									],
									[
										367852,
										367859
									],
									[
										367898,
										367905
									],
									[
										367982,
										367989
									],
									[
										368151,
										368158
									],
									[
										368309,
										368316
									],
									[
										368443,
										368450
									],
									[
										368457,
										368464
									],
									[
										368579,
										368586
									],
									[
										368673,
										368680
									],
									[
										368734,
										368741
									],
									[
										368866,
										368873
									],
									[
										368943,
										368950
									],
									[
										369089,
										369096
									],
									[
										369245,
										369252
									],
									[
										369271,
										369278
									],
									[
										369321,
										369328
									],
									[
										369522,
										369529
									],
									[
										369621,
										369628
									],
									[
										369908,
										369915
									],
									[
										369949,
										369956
									],
									[
										369963,
										369970
									],
									[
										370007,
										370014
									],
									[
										370155,
										370162
									],
									[
										370261,
										370268
									],
									[
										370333,
										370340
									],
									[
										370380,
										370387
									],
									[
										370476,
										370483
									],
									[
										370570,
										370577
									],
									[
										370579,
										370586
									],
									[
										370649,
										370656
									],
									[
										370683,
										370690
									],
									[
										370845,
										370852
									],
									[
										371039,
										371046
									],
									[
										371157,
										371164
									],
									[
										371189,
										371196
									],
									[
										371256,
										371263
									],
									[
										371294,
										371301
									],
									[
										371462,
										371469
									],
									[
										371627,
										371634
									],
									[
										371769,
										371776
									],
									[
										371863,
										371870
									],
									[
										371922,
										371929
									],
									[
										372135,
										372142
									],
									[
										372161,
										372168
									],
									[
										372291,
										372298
									],
									[
										372370,
										372377
									],
									[
										372457,
										372464
									],
									[
										372519,
										372526
									],
									[
										372698,
										372705
									],
									[
										372776,
										372783
									],
									[
										372947,
										372954
									],
									[
										373234,
										373241
									],
									[
										373272,
										373279
									],
									[
										373422,
										373429
									],
									[
										373636,
										373643
									],
									[
										373735,
										373742
									],
									[
										373773,
										373780
									],
									[
										374087,
										374094
									],
									[
										374374,
										374381
									],
									[
										374442,
										374449
									],
									[
										374652,
										374659
									],
									[
										374680,
										374687
									],
									[
										374935,
										374942
									],
									[
										375070,
										375077
									],
									[
										375173,
										375180
									],
									[
										375200,
										375207
									],
									[
										375298,
										375305
									],
									[
										375416,
										375423
									],
									[
										375576,
										375583
									],
									[
										375763,
										375770
									],
									[
										375996,
										376003
									],
									[
										376152,
										376159
									],
									[
										376247,
										376254
									],
									[
										376487,
										376494
									],
									[
										376602,
										376609
									],
									[
										376616,
										376623
									],
									[
										376786,
										376793
									],
									[
										376963,
										376970
									],
									[
										377157,
										377164
									],
									[
										377188,
										377195
									],
									[
										377202,
										377209
									],
									[
										377256,
										377263
									],
									[
										377442,
										377449
									],
									[
										377688,
										377695
									],
									[
										377788,
										377795
									],
									[
										377802,
										377809
									],
									[
										378022,
										378029
									],
									[
										378154,
										378161
									],
									[
										378523,
										378530
									],
									[
										378801,
										378808
									],
									[
										378862,
										378869
									],
									[
										379146,
										379153
									],
									[
										379221,
										379228
									],
									[
										379549,
										379556
									],
									[
										379613,
										379620
									],
									[
										379680,
										379687
									],
									[
										379967,
										379974
									],
									[
										380319,
										380326
									],
									[
										380507,
										380514
									],
									[
										380556,
										380563
									],
									[
										380613,
										380620
									],
									[
										380655,
										380662
									],
									[
										381172,
										381179
									],
									[
										381411,
										381418
									],
									[
										381507,
										381514
									],
									[
										381600,
										381607
									],
									[
										381695,
										381702
									],
									[
										382063,
										382070
									],
									[
										382266,
										382273
									],
									[
										382569,
										382576
									],
									[
										382779,
										382786
									],
									[
										382971,
										382978
									],
									[
										383006,
										383013
									],
									[
										383224,
										383231
									],
									[
										383549,
										383556
									],
									[
										383641,
										383648
									],
									[
										383861,
										383868
									],
									[
										384118,
										384125
									],
									[
										384463,
										384470
									],
									[
										384749,
										384756
									],
									[
										385037,
										385044
									],
									[
										385279,
										385286
									],
									[
										385645,
										385652
									],
									[
										385726,
										385733
									],
									[
										385971,
										385978
									],
									[
										386047,
										386054
									],
									[
										386182,
										386189
									],
									[
										386463,
										386470
									],
									[
										386553,
										386560
									],
									[
										386672,
										386679
									],
									[
										386914,
										386921
									],
									[
										387149,
										387156
									],
									[
										387346,
										387353
									],
									[
										387507,
										387514
									],
									[
										387541,
										387548
									],
									[
										387603,
										387610
									],
									[
										387653,
										387660
									],
									[
										387716,
										387723
									],
									[
										387847,
										387854
									],
									[
										388011,
										388018
									],
									[
										388143,
										388150
									],
									[
										388362,
										388369
									],
									[
										388474,
										388481
									],
									[
										388593,
										388600
									],
									[
										388630,
										388637
									],
									[
										388891,
										388898
									],
									[
										388918,
										388925
									],
									[
										389009,
										389016
									],
									[
										389124,
										389131
									],
									[
										389419,
										389426
									],
									[
										389492,
										389499
									],
									[
										389809,
										389816
									],
									[
										389984,
										389991
									],
									[
										390253,
										390260
									],
									[
										390568,
										390575
									],
									[
										390591,
										390598
									],
									[
										390828,
										390835
									],
									[
										390973,
										390980
									],
									[
										391125,
										391132
									],
									[
										391316,
										391323
									],
									[
										391576,
										391583
									],
									[
										391782,
										391789
									],
									[
										391844,
										391851
									],
									[
										391876,
										391883
									],
									[
										391923,
										391930
									],
									[
										391980,
										391987
									],
									[
										392131,
										392138
									],
									[
										392155,
										392162
									],
									[
										392260,
										392267
									],
									[
										392305,
										392312
									],
									[
										392409,
										392416
									],
									[
										392586,
										392593
									],
									[
										392673,
										392680
									],
									[
										392839,
										392846
									],
									[
										392933,
										392940
									],
									[
										393004,
										393011
									],
									[
										393202,
										393209
									],
									[
										393267,
										393274
									],
									[
										393343,
										393350
									],
									[
										393466,
										393473
									],
									[
										393510,
										393517
									],
									[
										393589,
										393596
									],
									[
										393661,
										393668
									],
									[
										393814,
										393821
									],
									[
										394024,
										394031
									],
									[
										394108,
										394115
									],
									[
										394199,
										394206
									],
									[
										394223,
										394230
									],
									[
										394283,
										394290
									],
									[
										394404,
										394411
									],
									[
										394468,
										394475
									],
									[
										394493,
										394500
									],
									[
										394565,
										394572
									],
									[
										394596,
										394603
									],
									[
										394695,
										394702
									],
									[
										394732,
										394739
									],
									[
										394789,
										394796
									],
									[
										394905,
										394912
									],
									[
										395141,
										395148
									],
									[
										395250,
										395257
									],
									[
										395364,
										395371
									],
									[
										395531,
										395538
									],
									[
										395615,
										395622
									],
									[
										395649,
										395656
									],
									[
										395729,
										395736
									],
									[
										395753,
										395760
									],
									[
										395887,
										395894
									],
									[
										395907,
										395914
									],
									[
										395968,
										395975
									],
									[
										396022,
										396029
									],
									[
										396042,
										396049
									],
									[
										396101,
										396108
									],
									[
										396154,
										396161
									],
									[
										396280,
										396287
									],
									[
										396374,
										396381
									],
									[
										396433,
										396440
									],
									[
										396621,
										396628
									],
									[
										396878,
										396885
									],
									[
										397065,
										397072
									],
									[
										397127,
										397134
									],
									[
										397259,
										397266
									],
									[
										397308,
										397315
									],
									[
										397386,
										397393
									],
									[
										397483,
										397490
									],
									[
										397667,
										397674
									],
									[
										397891,
										397898
									],
									[
										397923,
										397930
									],
									[
										398145,
										398152
									],
									[
										398160,
										398167
									],
									[
										398434,
										398441
									],
									[
										398751,
										398758
									],
									[
										398800,
										398807
									],
									[
										398906,
										398913
									],
									[
										399204,
										399211
									],
									[
										399232,
										399239
									],
									[
										399280,
										399287
									],
									[
										399540,
										399547
									],
									[
										399720,
										399727
									],
									[
										399886,
										399893
									],
									[
										399921,
										399928
									],
									[
										399985,
										399992
									],
									[
										400118,
										400125
									],
									[
										400301,
										400308
									],
									[
										400435,
										400442
									],
									[
										400556,
										400563
									],
									[
										400721,
										400728
									],
									[
										401053,
										401060
									],
									[
										401103,
										401110
									],
									[
										401369,
										401376
									],
									[
										401430,
										401437
									],
									[
										401592,
										401599
									],
									[
										401684,
										401691
									],
									[
										401870,
										401877
									],
									[
										401981,
										401988
									],
									[
										402205,
										402212
									],
									[
										402316,
										402323
									],
									[
										402555,
										402562
									],
									[
										402797,
										402804
									],
									[
										403008,
										403015
									],
									[
										403373,
										403380
									],
									[
										403566,
										403573
									],
									[
										403937,
										403944
									],
									[
										404278,
										404285
									],
									[
										404482,
										404489
									],
									[
										404492,
										404499
									],
									[
										404527,
										404534
									],
									[
										404849,
										404856
									],
									[
										405228,
										405235
									],
									[
										405445,
										405452
									],
									[
										405667,
										405674
									],
									[
										405767,
										405774
									],
									[
										406056,
										406063
									],
									[
										406104,
										406111
									],
									[
										406257,
										406264
									],
									[
										406313,
										406320
									],
									[
										406322,
										406329
									],
									[
										406445,
										406452
									],
									[
										406539,
										406546
									],
									[
										406549,
										406556
									],
									[
										406604,
										406611
									],
									[
										406672,
										406679
									],
									[
										406745,
										406752
									],
									[
										406768,
										406775
									],
									[
										406972,
										406979
									],
									[
										407218,
										407225
									],
									[
										407583,
										407590
									],
									[
										407688,
										407695
									],
									[
										407723,
										407730
									],
									[
										407842,
										407849
									],
									[
										407904,
										407911
									],
									[
										407970,
										407977
									],
									[
										408230,
										408237
									],
									[
										408473,
										408480
									],
									[
										408781,
										408788
									],
									[
										409018,
										409025
									],
									[
										409358,
										409365
									],
									[
										409490,
										409497
									],
									[
										409771,
										409778
									],
									[
										409957,
										409964
									],
									[
										410296,
										410303
									],
									[
										410522,
										410529
									],
									[
										410788,
										410795
									],
									[
										411099,
										411106
									],
									[
										411400,
										411407
									],
									[
										411680,
										411687
									],
									[
										411730,
										411737
									],
									[
										412253,
										412260
									],
									[
										412622,
										412629
									],
									[
										412672,
										412679
									],
									[
										413078,
										413085
									],
									[
										413134,
										413141
									],
									[
										413428,
										413435
									],
									[
										413864,
										413871
									],
									[
										413914,
										413921
									],
									[
										414393,
										414400
									],
									[
										415532,
										415539
									],
									[
										415776,
										415783
									],
									[
										415950,
										415957
									],
									[
										415972,
										415979
									],
									[
										416199,
										416206
									],
									[
										416373,
										416380
									],
									[
										416395,
										416402
									],
									[
										416622,
										416629
									],
									[
										416796,
										416803
									],
									[
										416818,
										416825
									],
									[
										417111,
										417118
									],
									[
										418178,
										418185
									],
									[
										418422,
										418429
									],
									[
										418596,
										418603
									],
									[
										418618,
										418625
									],
									[
										418845,
										418852
									],
									[
										419019,
										419026
									],
									[
										419041,
										419048
									],
									[
										419268,
										419275
									],
									[
										419442,
										419449
									],
									[
										419464,
										419471
									],
									[
										419808,
										419815
									],
									[
										420143,
										420150
									],
									[
										420477,
										420484
									],
									[
										420663,
										420670
									],
									[
										420950,
										420957
									],
									[
										421152,
										421159
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								32008,
								32008
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ 	].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 11832.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "ArduCopter/control_auto.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30772,
						"regions":
						{
						},
						"selection":
						[
							[
								27728,
								27728
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12432.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "libraries/AC_WPNav/AC_WPNav.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53812,
						"regions":
						{
						},
						"selection":
						[
							[
								28275,
								28275
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12636.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ArduPilot-CG.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ardu",
				"ArduCopter/ArduCopter.cpp"
			],
			[
				"ac_at",
				"libraries/AC_AttitudeControl/AC_AttitudeControl.h"
			],
			[
				"attitude",
				"ArduCopter/Attitude.cpp"
			],
			[
				"stab",
				"ArduCopter/control_stabilize.cpp"
			],
			[
				"flight",
				"ArduCopter/flight_mode.cpp"
			],
			[
				"airship",
				"libraries/AP_Motors/AP_MotorsAirship.cpp"
			],
			[
				"aconfig",
				"ArduCopter/APM_Config.h"
			],
			[
				"copter.",
				"ArduCopter/Copter.h"
			],
			[
				"copter",
				"ArduCopter/Copter.cpp"
			],
			[
				"ac_pid",
				"libraries/AC_PID/AC_PID.cpp"
			],
			[
				"ac_att",
				"libraries/AC_AttitudeControl/AC_AttitudeControl.cpp"
			],
			[
				"ac_wp",
				"libraries/AC_WPNav/AC_WPNav.cpp"
			],
			[
				"l1_",
				"libraries/AP_L1_Control/AP_L1_Control.cpp"
			],
			[
				"control_au",
				"ArduCopter/control_auto.cpp"
			],
			[
				"control",
				"ArduCopter/control_auto.cpp"
			],
			[
				"atti",
				"libraries/AC_AttitudeControl/AC_AttitudeControl.cpp"
			],
			[
				"control_auto",
				"ArduCopter/control_auto.cpp"
			],
			[
				"take",
				"ArduCopter/takeoff.cpp"
			],
			[
				"fligh",
				"ArduCopter/flight_mode.cpp"
			],
			[
				"flig",
				"ArduPilot-CG/ArduCopter/flight_mode.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 186.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
